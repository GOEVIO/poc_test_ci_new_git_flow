export interface CostByPower {
    id?: string;
    cost?: number;
    uom?: string;
}
export interface CostByTime {
    id?: string;
    minTime?: number;
    maxTime?: number;
    cost?: number;
    uom?: string;
    description?: string;
}
export interface ServiceCost {
    id?: string;
    initialCost?: number;
    costByTime?: CostByTime[];
    costByPower?: CostByPower;
}
export interface Range {
    startTime?: string;
    endTime?: string;
}
export interface Day {
    isSelected?: boolean;
    availabilityDay?: string;
    ranges?: Range[];
}
export interface Availability {
    availabilityType?: string;
    monday?: Day;
    tuesday?: Day;
    wednesday?: Day;
    thursday?: Day;
    friday?: Day;
    saturday?: Day;
    sunday?: Day;
}
export interface TariffAmount {
    uom?: string;
    value?: number;
}
export interface EvioCommission {
    minAmount?: TariffAmount;
    transaction?: TariffAmount;
}
export interface Tariff {
    activationFee?: number;
    bookingAmount?: TariffAmount;
    chargingAmount?: TariffAmount;
    parkingDuringChargingAmount?: TariffAmount;
    parkingAmount?: TariffAmount;
    evioCommission?: EvioCommission;
}
export interface TariffIds {
    tariffId?: string;
    network?: string;
}
export interface BalancingInfo {
    priority?: string;
    electricalGroup?: number;
    operationalState?: string;
    setCurrentLimit?: number;
    currentLimit?: number;
    power?: number;
    powerMax?: number;
    totalCurrent?: number;
    current1?: number;
    current2?: number;
    current3?: number;
    currentPerPhase?: number;
    voltage1?: number;
    voltage2?: number;
    voltage3?: number;
    voltage?: number;
    dailyEnergy?: number;
    energy?: number;
    browseName?: string;
    isWithError?: boolean;
    isOnline?: boolean;
    lastMeasurement?: Date;
    controlType?: string;
    minActivePower?: number;
    numberOfPhases?: number;
}
export interface PlugTariff {
    groupName?: string;
    groupId?: string;
    tariffId?: string;
    fleetName?: string;
    fleetId?: string;
    tariff?: Tariff;
    tariffType?: string;
    name?: string;
}
export interface EvseStatus {
    network?: string;
    status?: string;
}
export interface Plug {
    plugId?: string;
    evseId?: string;
    qrCodeId?: string;
    tariff?: PlugTariff[];
    connectorType?: string;
    voltage?: number;
    amperage?: number;
    power?: number;
    active?: boolean;
    status?: string;
    statusChangeDate?: Date;
    statusTime?: number;
    subStatus?: string;
    serviceCost?: ServiceCost;
    canBeNotified?: boolean;
    canBeAutomaticallyBooked?: boolean;
    mySession?: string;
    lastUsed?: string;
    internalRef?: string;
    connectorFormat?: string;
    hasRemoteCapabilities?: boolean;
    powerType?: string;
    tariffIds?: TariffIds[];
    evseStatus?: EvseStatus[];
    balancingInfo?: BalancingInfo;
    createdAt?: Date;
    updatedAt?: Date;
}
export interface Address {
    street?: string;
    number?: string;
    floor?: string;
    zipCode?: string;
    city?: string;
    state?: string;
    country?: string;
    countryCode?: string;
}
export interface PurchaseScheduleTime {
    value?: number;
    startTime?: string;
    stopTime?: string;
}
export interface PurchaseWeekSchedule {
    weekDay?: string;
    scheduleTime?: PurchaseScheduleTime[];
}
export interface PurchaseTariff {
    name?: string;
    description?: string;
    tariffType?: string;
    userId?: string;
    weekSchedule?: PurchaseWeekSchedule[];
    purchaseTariffId?: string;
}
export interface Network {
    name?: string;
    network?: string;
    networkName?: string;
    status?: string;
    id?: string;
    activationRequest?: boolean;
    publish?: boolean;
    party_id?: string;
    country_code?: string;
}
export interface File {
    name?: string;
    type?: string;
    content?: string;
    lastUpdated?: string;
}
export interface Diagnostic {
    content?: string;
    lastUpdated?: string;
}
export interface Charger {
    id: string;
    hwId: string;
    serialNumber?: string;
    endpoint?: string;
    meterValueSampleInterval?: string;
    chargePointSerialNumber?: string;
    firmwareVersion?: string;
    iccid?: string;
    imsi?: string;
    meterSerialNumber?: string;
    meterType?: string;
    vendor?: string;
    model?: string;
    name?: string;
    parkingType?: string;
    vehiclesType?: {
        vehicle?: string;
    }[];
    timeZone?: string;
    address?: Address;
    facilitiesTypes?: any[];
    geometry?: {
        type: string;
        coordinates: number[];
    };
    instantBooking?: boolean;
    availability?: Availability;
    plugs?: Plug[];
    accessType?: string;
    listOfGroups?: {
        groupName?: string;
        groupId?: string;
    }[];
    active?: boolean;
    rating?: number;
    numberOfSessions?: number;
    chargerType: string;
    status?: string;
    substatus?: string;
    operationalStatus?: string;
    netStatus?: boolean;
    infrastructure?: string;
    hasInfrastructure?: boolean;
    chargingDistance?: string;
    imageContent?: string[];
    defaultImage?: string;
    createUser?: string;
    createdBy?: string;
    operatorId?: string;
    modifyUser?: string;
    infoPoints?: string;
    heartBeat?: Date;
    heartBeatInterval?: number;
    bookings?: any[];
    requireConfirmation?: boolean;
    allowRFID?: boolean;
    wifiPairingName?: string;
    parkingSessionAfterChargingSession?: boolean;
    network?: string;
    partyId?: string;
    operator?: string;
    stationIdentifier?: string;
    manufacturer?: string;
    listOfFleets?: {
        fleetName?: string;
        fleetId?: string;
    }[];
    offlineNotification?: boolean;
    offlineEmailNotification?: string;
    mapVisibility?: boolean;
    wrongBehaviorStation?: boolean;
    purchaseTariff?: PurchaseTariff | null;
    internalInfo?: string;
    CPE?: string;
    clientName?: string;
    networks?: Network[];
    voltageLevel?: string;
    locationType?: string;
    energyOwner?: string;
    CSE?: string;
    energyNotes?: string;
    supplyDate?: string;
    installationDate?: string;
    goLiveDate?: string;
    warranty?: string;
    expiration?: string;
    preCheck?: string;
    generateAction?: string;
    acquisitionNotes?: string;
    expectedLife?: string;
    MTBF?: string;
    workedHours?: string;
    lifeCycleStatus?: string;
    notify?: string;
    lifeCycleNotes?: string;
    siteLicense?: string;
    legalLicenseDate?: string;
    legalLicenseExpiry?: string;
    legalSiteReminder?: string;
    legalSiteNotes?: string;
    inspection?: string;
    lastInspection?: string;
    nextInspection?: string;
    legalInspectionReminder?: string;
    legalInspectionNotes?: string;
    connectionType?: string;
    connectionOperator?: string;
    connectionAPN?: string;
    connectionLastLocationUpdate?: string;
    connectionIpAddress?: string;
    connectionDeviceId?: string;
    connectionIMEILock?: string;
    connectionIMEINumber?: string;
    connectionDataComunicationChart?: string;
    connectionStatus?: string;
    connectionBlockedOperators?: string;
    connectionConnectedNetwork?: string;
    connectionTAGs?: string;
    connectionIMSI?: string;
    connectionMSISDN?: string;
    connectionICCID?: string;
    connectionStats?: string;
    connectionDataTotal?: string;
    connectivity?: string;
    files?: File[];
    diagnostics?: Diagnostic[];
    energyManagementEnable?: boolean;
    energyManagementInterface?: string;
    switchBoardId?: string;
    controllerId?: string;
    originalCoordinates?: {
        type: string;
        coordinates: number[];
    };
    updatedCoordinates?: {
        date?: Date;
        source?: "algorithm" | "user" | "evio";
    };
    createdAt?: Date;
    updatedAt?: Date;
}
