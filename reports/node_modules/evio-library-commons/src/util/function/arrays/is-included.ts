const _curriedIsIncluded =
  <T>(arr: Array<T>) =>
  (val: T): boolean => {
    return arr.includes(val)
  }

/**
 * Is value included in array?
 *
 * See below link for more details on currying
 * @see{@link https://stackoverflow.com/questions/36314/what-is-currying}
 * See below link for mor edetails on function overloading
 * @see{@link https://stackoverflow.com/questions/13212625/typescript-function-overloading}
 */
export function isIncluded<T>(arr: Array<T>): (val: T) => boolean
export function isIncluded<T>(arr: Array<T>, val: T): boolean
export function isIncluded<T>(arr: Array<T>, val?: T): boolean | ((val: T) => boolean) {
  if (!val) {
    return _curriedIsIncluded(arr)
  }
  return _curriedIsIncluded(arr)(val)
}
