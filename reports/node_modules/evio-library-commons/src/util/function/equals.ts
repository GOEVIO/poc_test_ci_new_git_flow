/**
 * Curried Equals function. Uses === operator to compare two values.
 * See below link for more details on currying
 * @see{@link https://stackoverflow.com/questions/36314/what-is-currying}
 *
 * @param a the first value
 * @param b the second value
 * @return true if they're equal, false otherwise
 */
const _curriedEquals =
  <T>(a: T) =>
  (b: unknown) => {
    return a === b
  }

/**
 * Overloaded, curried and generic function to compare two values with equality operator (===).
 * See below link for mor edetails on function overloading
 * @see{@link https://stackoverflow.com/questions/13212625/typescript-function-overloading}
 *
 * @param {T} a the first value
 * @param {unknown} b the second value
 * @return {boolean} true if they're equal, false otherwise
 */
export function equals<T>(a: T): (b: unknown) => boolean
export function equals<T>(a: T, b: unknown): boolean
export function equals<T>(a: T, b?: unknown): boolean | ((b: unknown) => boolean) {
  if (!b) {
    return _curriedEquals(a)
  }
  return _curriedEquals(a)(b)
}

export default equals
