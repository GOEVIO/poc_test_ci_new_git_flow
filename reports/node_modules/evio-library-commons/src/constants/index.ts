import path from "path";

export const DBNames = {
  Configs: 'configsDB',
  Chargers: 'chargersDB',
  PublicNetworks: 'publicNetworkDB',
  Billing: 'billingDB',
  Identity: 'identityDB',
  Evs: 'evsDB',
  Statistics: 'statisticsDB',
  PublicTariffs: 'publicTariffsDB',
  OCPI: 'ocpiDB',
  Tariffs: 'tariffsDB',
  APT: 'apt_db',
  Tokens: 'tokenDB',
}

export const CollectionNames = {
  Configs: {
    Fees: 'fees',
    CoordinatesSessionsConfigs: 'coordinatessessionsconfigs',
    rabbitMQConfigs: 'rabbitmqconfigs',
    validationCDRConfig: 'validationcdrconfigs',
    AppConfigurations: 'appconfigurations',
    chargerPreAuthorizationValues: 'chargerpreauthorizationvalues',
  },

  Chargers: {
    Chargers: 'chargers',
    ChargerTypes: 'chargertypes',
    Infrastructures: 'infrastructures',
    ChargingSessions: 'chargingsessions',
  },

  Billing: {
    Invoices: 'invoices',
  },

  Identity: {
    Contracts: 'contracts',
    Drivers: 'drivers',
    GroupDrivers: 'groupdrivers',
    GroupCSUsers: 'groupcsusers',
    Users: 'users',
    BillingProfiles: 'billingprofiles',
    TokenHistory: 'tokenhistory',
  },

  Evs: {
    Evs: 'evs',
    DatabaseEvs: 'database_evs',
    Fleets: 'fleets',
  },

  Statistics: {
    Histories: 'histories',
    HistoriesV2: 'historiesv2',
    ThirdPartyProductMaps: 'thirdpartyproductmaps',
    Configs: 'Configs',
  },

  PublicTariffs: {
    ListCEMEs: 'listcemes',
    ScheduleCEMEs: 'schedulescemes',
    TariffCEMEs: 'tariffcemes',
    TariffTars: 'tarifftars',
  },

  PublicNetworks: {
    Operators: 'operators',
  },

  OCPI: {
    Tokens: 'tokens',
    Platforms: 'platforms',
    Tariffs: 'tariffs',
    SessionFlowLogs: 'sessionflowlogs',
    ChargingSessions: 'chargingsessions',
  },

  Tariffs: {
    SalesTariffs: 'salestariffs',
  },

  Tokens: {
    Tokens: 'tokens'
  },
}

export const TableNames = {
  APT: {
    Apt: 'apt_stations',
    Chargers: 'apt_chargers',
    Plugs: 'apt_charger_plugs',
    TariffsDetails: 'apt_plugs_tariffs_details',
    TariffElements: 'apt_tariff_elements',
    TariffRestrictions: 'apt_tariff_restrictions',
    TariffPriceComponents: 'apt_tariff_price_components',
  },
}

export const AllowedCountries = ['PT', 'FR', 'ES']
export const AllowedCountries3 = ['PRT', 'FRA', 'ESP']

export const RabbitmqQueueNames = {
  updateHistoryV2: 'session_history_v2',
}

export const ChargerTypesMap = {
  '001': 'EVIO',
  '002': 'EVIO',
  '003': 'EVIO',
  '004': 'MOBIE',
  '005': 'EVIO',
  '006': 'EVIO',
  '007': 'EVIO',
  '008': 'EVIO',
  '009': 'TESLA',
  '010': 'INTERNATIONAL NETWORK',
  '011': 'GO.CHARGE',
  '012': 'HYUNDAI',
  '013': 'KLC',
  '014': 'KINTO',
  '015': 'INTERNATIONAL NETWORK',
}

export const AssetTypes = ['car', 'otherEv', 'boat', 'motorcycle', 'bicycle', 'truck', 'card', 'employee']

type EnvironmentType = 'production' | 'pre-production' | 'development'

export const Environment = (process.env.NODE_ENV || 'development') as EnvironmentType

export const Energy = {
  supplierName: 'ENGNE',
  contracts: {
    production: {
      dailyBi: 'CT_HUQ87P9EOPC0JFE3GDU60UPPTF',
      dailyTri: 'CT_G6SML9HRDG0JCP9IE6TOQTIGT6',
      weeklyBi: 'CT_ILPA216UQMRP0I9OT137R1HMRC',
      weeklyTri: 'CT_TQNHA3QJNV3ILJGJSBVBLV5QUO',
    },
    'pre-production': {
      // The party_id EVI in the pre-production environment is using the same contracts as the production environment
      dailyBi: 'CT_HUQ87P9EOPC0JFE3GDU60UPPTF',
      dailyTri: 'CT_G6SML9HRDG0JCP9IE6TOQTIGT6',
      weeklyBi: 'CT_ILPA216UQMRP0I9OT137R1HMRC',
      weeklyTri: 'CT_TQNHA3QJNV3ILJGJSBVBLV5QUO',
    },
    development: {
      dailyBi: 'CT_HUQ87P9EOPC0JFE3GDU60UPPT1',
      dailyTri: 'CT_G6SML9HRDG0JCP9IE6TOQTIGT3',
      weeklyBi: 'CT_ILPA216UQMRP0I9OT137R1HMR2',
      weeklyTri: 'CT_TQNHA3QJNV3ILJGJSBVBLV5QU4',
    },
  },
}

export const oneDayInMilliseconds = 86400000

export const OcpiToken = {
  whitelist: {
    never: 'NEVER',
    always: 'ALWAYS',
  },
  issuer: 'EVIO - Electrical Mobility',
}

export const emails = {
  SupportEvio: 'support@go-evio.com',
  Sales: 'sales@go-evio.com',
  QaTest: 'qa.goevio@gmail.com',
}

export { default as checkDigitLists } from './digitLists.json'
export { default as alpha3CountryMapper } from './alpha3CountryMapper.json'
export { default as alpha2CountryMapper } from './alpha2CountryMapper.json'

export const allowedCountriesShortSender = [
  '+351',
  '+34',
  '+33',
  '+31',
  '+352',
  '+353',
  '+39',
  '+40',
  '+41',
  '+43',
  '+44',
  '+46',
  '+47',
  '+48',
  '+49',
]

export { default as dinCountryMapper } from './dinCountryMapper.json'
export const providers = {
  europeCommission: {
    wsdl: 'https://ec.europa.eu/taxation_customs/vies/checkVatService.wsdl',
    wsdlTin: 'https://ec.europa.eu/taxation_customs/tin/services/checkTinService.wsdl',
  },
  taxIdPro: {
    host: 'https://v3.api.taxid.pro/lookup',
  },
}

export const defaultCpoTariffId = 'DEFAULT-TARIFF'

export const HubjectCommission = 0.55

export const MinimumEnergyToBilling = 500

export const defaultTin = '999999990'

/* File paths and URLs */
const basePath = require.main ? path.dirname(require.main.filename) : process.cwd()
const baseUrl = process.env.FILES_HOST || 'https://filesapi.go-evio.com'
export const filePaths = { 
  root: {
    path: basePath,
    url: baseUrl,
  },
  cpoIcon: {
    path: path.join(basePath, 'img/icons/cpo'),
    url: `${baseUrl}/icons/cpo`,
  },
}

export * from './contracts.constants'
