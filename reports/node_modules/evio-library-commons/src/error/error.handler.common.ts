import { StatusCodeHttp } from '../enums/StatusCodeHttp';
import { IError } from '../interfaces/error.interfaces';

const newError = (
    statusCode: number,
    error: string | object | Array<unknown>,
    context?: string
): IError => (
    { statusCode, error, context }
);

const BadRequest = (
    error: string | object | Array<unknown>,
    context?:string
) => newError(StatusCodeHttp.BAD_REQUEST, error, context);

const Unauthorized = (
    error: string | object | Array<unknown>,
    context?:string
) => newError(StatusCodeHttp.UNAUTHORIZED, error, context);

const NotFound = (
    error: string | object | Array<unknown>,
    context?:string
) => newError(StatusCodeHttp.NOT_FOUND, error, context);

const Forbidden = (
    error: string | object | Array<unknown>,
    context?:string
) => newError(StatusCodeHttp.FORBIDDEN, error, context);

const ServerError = (
    error: string | object | Array<unknown>,
    context?:string
) => newError(StatusCodeHttp.INTERNAL_SERVER_ERROR, error, context);

export {
    BadRequest,
    Unauthorized,
    Forbidden,
    ServerError,
    NotFound,
    newError
};