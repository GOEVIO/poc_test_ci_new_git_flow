import ITranslationStrategy from '../interfaces/translation-strategy.interface';
import RedisConnection from 'evio-redis-connection';
import axios from 'axios';
import { IWeblateRequest } from '../../schema_interfaces/weblate.interface';
import { ITranslation } from '../../schema_interfaces/translations.interface';

export default class ConcreteStrategyWeblate implements ITranslationStrategy {
  public async execute(
    redisKey: string,
    weblateRequest: IWeblateRequest
  ): Promise<ITranslation | null> {
    const context = 'ConcreteStrategyWeblate';
    console.info(`[${context}] - Logs`, {
      host: weblateRequest.host,
      message: `Fetching translation from Weblate`,
      timestamp: new Date().toISOString(),
    });
    const { data } = await axios.get(weblateRequest.host, {
      headers: weblateRequest.headers,
    });

    if (data) {
      await RedisConnection.set(redisKey, JSON.stringify(data));
      console.info(`[${context}] - Logs`, {
        message: `Translation saved to Redis with key ${redisKey}`,
        timestamp: new Date().toISOString(),
      });
    }
    return data;
  }
}
