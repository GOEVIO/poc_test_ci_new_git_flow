import { NotFound } from 'evio-library-commons';
import { ITranslation } from '../../schema_interfaces/translations.interface';
import ITranslationStrategy from '../interfaces/translation-strategy.interface';
import RedisConnection from 'evio-redis-connection';

export default class ConcreteStrategyRedis implements ITranslationStrategy {
  public async execute(redisKey: string): Promise<ITranslation> {
    const context = 'ConcreteStrategyRedis';
    const data = await RedisConnection.get(redisKey);
    console.log(`[${context}] - Logs`, {
      message: `Fetching translation from Redis with key ${redisKey}`,
      timestamp: new Date().toISOString(),
    });
    if (!data) {
      throw NotFound({
        auth: false,
        code: 'server_translation_not_found',
        message: `[${context}] - Translation not found in Redis for key ${redisKey}`,
      });
    }
    return JSON.parse(data);
  }
}
