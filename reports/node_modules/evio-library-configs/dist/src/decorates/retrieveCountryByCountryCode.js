"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.retrieveCountryByCountryCode = void 0;
const evio_library_connections_1 = __importDefault(require("evio-library-connections"));
const evio_library_commons_1 = require("evio-library-commons");
const evio_redis_connection_1 = __importDefault(require("evio-redis-connection"));
const country_schema_1 = require("../schema/country.schema");
let conn;
(async () => {
    conn = await evio_library_connections_1.default.connect(evio_library_commons_1.DBNames.Configs);
})();
const retrieveCountryByCountryCode = async (countryCode) => {
    console.log('retrieveCountryByCountryCode', countryCode);
    try {
        const cacheKey = `countryNameByCountryCode:${countryCode}`;
        const cached = await evio_redis_connection_1.default.get(cacheKey);
        if (cached) {
            return JSON.parse(cached);
        }
        const document = await evio_library_connections_1.default.findOneDocument(conn.db, 'countries', {
            countryCode,
        });
        const countryWrapper = country_schema_1.CountrySchema.safeParse(document);
        if (!countryWrapper.success) {
            console.error('The country is invalid!', countryWrapper.error);
            throw countryWrapper.error;
        }
        const countryData = {
            countryCode: countryWrapper.data.countryCode,
            countryName: countryWrapper.data.countryName,
            numericCode: countryWrapper.data.numericCode,
            country: countryWrapper.data.country,
        };
        await evio_redis_connection_1.default.set(cacheKey, JSON.stringify(countryData));
        return countryData;
    }
    catch (error) {
        console.error('Error retrieving country code:', error);
        return null;
    }
};
exports.retrieveCountryByCountryCode = retrieveCountryByCountryCode;
//# sourceMappingURL=retrieveCountryByCountryCode.js.map