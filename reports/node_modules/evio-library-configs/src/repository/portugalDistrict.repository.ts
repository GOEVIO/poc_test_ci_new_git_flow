
import { ConfigsDbConnection } from '../common/configsDb.connection'
import {
  PortugalDistrict,
  PortugalDistrictSchema,
} from '../schema/portugalDistrict.schema'

class PortugalDistrictRepository {
  static #instance: PortugalDistrictRepository
  #client = ConfigsDbConnection
  #collectionName = 'portugaldistricts'

  private constructor() {}

  public static get instance(): PortugalDistrictRepository {
    if (!PortugalDistrictRepository.#instance) {
      PortugalDistrictRepository.#instance = new PortugalDistrictRepository()
    }
    return PortugalDistrictRepository.#instance
  }

  /**
   * Find one {@see PortugalDistrict} document by {@param code}
   * @param {string} code
   * @return {PortugalDistrict | undefined} the found document or undefined if none found or malformed found
   * @throw on db conection error
   */
  public async findOneByCode(
    code: number
  ): Promise<PortugalDistrict | undefined> {
    const document = await this.#client.findOne(this.#collectionName, { code })
    const wrapper = PortugalDistrictSchema.safeParse(document)
    if (!wrapper.success) {
      console.log('not found or malformed portugaldistrict', wrapper.error)
      return undefined
    }
    return wrapper.data
  }
}

export const PortugalDistrictReadRepository =
  PortugalDistrictRepository.instance
