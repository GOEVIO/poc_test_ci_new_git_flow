
import { ConfigsDbConnection } from '../common/configsDb.connection'
import {
  PortugalPostalCode,
  PortugalPostalCodeSchema,
} from '../schema/portugalPostalCode.schema'

class PortugalPostalCodeRepository {
  static #instance: PortugalPostalCodeRepository
  #client = ConfigsDbConnection
  #collectionName = 'portugalpostalcodes'

  private constructor() {}

  public static get instance(): PortugalPostalCodeRepository {
    if (!PortugalPostalCodeRepository.#instance) {
      PortugalPostalCodeRepository.#instance =
        new PortugalPostalCodeRepository()
    }
    return PortugalPostalCodeRepository.#instance
  }

  /**
   * Find one {@see PortugalPostalCode} document by {@param postalCode}
   * @param {string} postalCode
   * @return {PortugalPostalCode | undefined} the found document or undefined if none found or malformed found
   * @throw on db conection error
   */
  public async findOneByPostalCode(
    postalCode: string
  ): Promise<PortugalPostalCode | undefined> {
    const document = await this.#client.findOne(this.#collectionName, {
      postalCodes: postalCode,
    })
    const wrapper = PortugalPostalCodeSchema.safeParse(document)
    if (!wrapper.success) {
      return undefined
    }
    return wrapper.data
  }
}

export const PortugalPostalCodeReadRepository =
  PortugalPostalCodeRepository.instance
