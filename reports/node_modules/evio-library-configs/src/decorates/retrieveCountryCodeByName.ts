import redisConnection from 'evio-redis-connection';
import dbConnection from 'evio-library-connections';
import { CountrySchema } from '../schema/country.schema'

let conn: any;

(async () => {
    conn = await dbConnection.connect('configsDB');
})();

export const retrieveCountryCodeByName = async (countryName: string): Promise<string | null> => {
    try {
        const cacheKey = `countryCodeByName:${countryName}`;

        // Attempt to get the country code from Redis cache
        let countryCode = await redisConnection.get(cacheKey);

        if (!countryCode) {
            // Query the 'countries' collection in the connected database for the given country
            const country  = await dbConnection.findOneDocument(
                conn.db,
                'countries',
                { countryName: { $regex: `^${countryName}$`, $options: "i" } }
            );

            const countryWrapper = CountrySchema.safeParse(country);

            if(!countryWrapper.success){
                console.error("The country is wrong!", countryWrapper.error);
                throw countryWrapper.error;
            }

            countryCode = countryWrapper.data.countryCode

            // Store in cache
            await redisConnection.set(cacheKey, countryCode);
        }

        return countryCode; // Return only the country code
    } catch (error) {
        throw error;
    }
};
