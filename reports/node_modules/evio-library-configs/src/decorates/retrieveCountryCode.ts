import dbConnection from 'evio-library-connections';
import { DBNames } from "evio-library-commons";
import redisConnection from 'evio-redis-connection';
import {Country, CountrySchema} from '../schema/country.schema';

let conn: any;

(async () => {
    conn = await dbConnection.connect(DBNames.Configs);
})();

export const retrieveCountryCode = async (country: string): Promise< Partial<Country> | null > => {
    try {
        const cacheKey = `countryCodeByCountry:${country}`;

        let cached = await redisConnection.get(cacheKey);

        if (cached) {
            return JSON.parse(cached);
        }

        const document = await dbConnection.findOneDocument(
            conn.db,
            'countries',
            { country },
        );

        const countryWrapper = CountrySchema.safeParse(document);

        if (!countryWrapper.success) {
            console.error("The country is invalid!", countryWrapper.error);
            throw countryWrapper.error;
        }

        const countryData = {
            countryCode: countryWrapper.data.countryCode,
            countryName: countryWrapper.data.countryName
        };

        await redisConnection.set(cacheKey, JSON.stringify(countryData));

        return countryData;

    } catch (error) {
        console.error("Error retrieving country code:", error);
        return null;
    }
};
