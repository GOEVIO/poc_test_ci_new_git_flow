import { DbClient } from 'evio-library-connections'
import { CollectionNames, DBNames } from 'evio-library-commons'

interface IValidationCDRConfig {
    minAcceptableToSumOfSubUsageEnergy: number;
    minAcceptableToTotalEnergy: number;
    maxAcceptableToTotalEnergy: number;
    minAcceptableDaysOfDurations: number;
    minAcceptablePriceOfSession: number;
    maxAcceptablePriceOfSession: number;
    minAcceptableCemePrice: number;
    dpcLocations: string[];
    maxDaysOfNotExpiredSession: number;
}

export const retrieveValidationCDRConfig =
    async (): Promise<IValidationCDRConfig> => {
        const connConfig = DbClient.getInstance(DBNames.Configs);
        try {
            const config = await connConfig.findOne(CollectionNames.Configs.validationCDRConfig,{_id: {$exists: true}}) as IValidationCDRConfig;
            return config;
        } catch (error) {
            throw error
        }
    }
