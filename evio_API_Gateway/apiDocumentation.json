{
    "openapi": "3.0.0",
    "info": {
        "version": "0.1.0",
        "title": "EVIO API",
        "description": "API of EVIO project",
        "contact": {
            "name": "EVIO",
            "url": "http://www.eviomobility.com/",
            "email": "evio@ceiia.com"
        }
    },
    "servers": [
        {
            "url": "http://85.88.143.237:3000"
        },
        {
            "url": "http://85.88.143.236:3000"
        },
        {
            "url": "http://localhost:3000"
        },
        {
            "url": "http://192.168.103.47:3000"
        }
    ],
    "tags": [
        {
            "name": "New",
            "description": "Endpoint new of this sprint"
        },
        {
            "name": "Update",
            "description": "Endpoints that have been updated in this sprint"
        },
        {
            "name": "API Keys",
            "description": "Generate API Keys"
        },
        {
            "name": "API gateway",
            "description": "Backend gateway api"
        },
        {
            "name": "Health Checks",
            "description": "API to verify that microservices are up and running "
        },
        {
            "name": "User",
            "description": "API for users"
        },
        {
            "name": "Drivers",
            "description": "APi to work with the pool of drivers"
        },
        {
            "name": "Group Drivers",
            "description": "APi for group of drivers"
        },
        {
            "name": "Group of Charger Station Users",
            "description": "APi for group of charger station users"
        },
        {
            "name": "EVs",
            "description": "API for electric vehicle (EVs)"
        },
        {
            "name": "Chargers",
            "description": "API for chargers"
        },
        {
            "name": "EVIO chargers",
            "description": "API for chargers Evio"
        },
        {
            "name": "Charger Type",
            "description": "API for Charger Type"
        },
        {
            "name": "Contracts",
            "description": "API for contracts"
        },
        {
            "name": "CEME Tariff",
            "description": "API for CEME Tariff"
        },
        {
            "name": "Infrastructure",
            "description": "API for infrastructures"
        },
        {
            "name": "Fleet",
            "description": "API for fleets"
        },
        {
            "name": "Groups Dependencies",
            "description": "API for groups dependencies. Internal API to save information about the groups whose users are not yet registered on the platform"
        },
        {
            "name": "Charging Session",
            "description": "API for Charging session, (All Internal APIs)"
        },
        {
            "name": "Language",
            "description": "API for language service"
        },
        {
            "name": "SonOff Client",
            "description": "API for sonoff client"
        },
        {
            "name": "SMS Notifications",
            "description": "API for SMS Notifications"
        },
        {
            "name": "Tariffs",
            "description": "API for tariffs, sales and purche"
        },
        {
            "name": "Mobi.e",
            "description": "API for Mobi.e connection"
        },
        {
            "name": "Charging Schedule",
            "description": "API for schedule a charging"
        },
        {
            "name": "Connection Station",
            "description": "Api to manage charger connections and connect to the stations/HMD Charger with the charging sections, Start or Stop a charging session"
        },
        {
            "name": "Open Charge Map",
            "description": "Api to Open Charge Map repository"
        },
        {
            "name": "Questions",
            "description": "Api to Questions of charging session management"
        },
        {
            "name": "Operations Management",
            "description": "Api to operations management"
        },
        {
            "name": "Notifications",
            "description": "Api to save notifications"
        },
        {
            "name": "Host Issues",
            "description": "Api for issues reported to charger owners"
        },
        {
            "name": "EVIO Issues",
            "description": "Api for issues reported to EVIO"
        },
        {
            "name": "Booking",
            "description": "Api to manage the bookings"
        },
        {
            "name": "Notify me",
            "description": "Api to notify me history"
        },
        {
            "name": "EVIO BOX",
            "description": "Api config EVIO BOX"
        },
        {
            "name": "Payments",
            "description": "Api to use on payments"
        },
        {
            "name": "QR Code",
            "description": "Api to use on qrCode"
        },
        {
            "name": "APP Version",
            "description": "Api to use on send SMS"
        },
        {
            "name": "List CEME",
            "description": "Api to use on management of CEME operators"
        },
        {
            "name": "Statistics",
            "description": "Api to use on management insights and History"
        },
        {
            "name": "Statistics V2",
            "description": "Api to use on management insights, History and Reports (Version 2)"
        },
        {
            "name": "EV Database",
            "description": "API to use to retrieve brands, models, versions and details for evs"
        },
        {
            "name": "Configurations",
            "description": "Api to manage configurations used in other services"
        },
        {
            "name": "Notifications Definition",
            "description": "Api to manage definitions of notifications"
        },
        {
            "name": "Billing Profile",
            "description": "Api to handle Billing Profiles"
        },
        {
            "name": "Tariff TAR",
            "description": "Api to handle TAR Tariff"
        },
        {
            "name": "Payment Adyen",
            "description": "Api to manage payments with Adyen"
        },
        {
            "name": "Payment LusoPay",
            "description": "Api to manage payments with LusoPay"
        },
        {
            "name": "Transactions",
            "description": "Api to manage transactions"
        },
        {
            "name": "Wallet",
            "description": "Api to manage Wallet"
        },
        {
            "name": "Config Management POIs",
            "description": "Api to manage configurations to POIs"
        },
        {
            "name": "Company",
            "description": "Api to manage company users"
        },
        {
            "name": "Messages",
            "description": "Api to manage messages to send to the user"
        },
        {
            "name": "Billing",
            "description": "Api to handle Billing invouces"
        },
        {
            "name": "Schedules CEME",
            "description": "Api to handle Schedules CEME"
        },
        {
            "name": "Tariff CEME",
            "description": "Api to handle Tariff CEME"
        },
        {
            "name": "Tariff OPC",
            "description": "Api to handle Tariff OPC"
        },
        {
            "name": "Notifications Settings",
            "description": "Api to handle Notifications Settings"
        },
        {
            "name": "Payment Methods",
            "description": "Api to handle Payment Methods"
        },
        {
            "name": "Users packages",
            "description": "Api to handle users packages"
        },
        {
            "name": "Images Dependencies",
            "description": "Api to handle images to save on public network"
        },
        {
            "name": "Other EVs",
            "description": "Api to handle other EVs"
        },
        {
            "name": "Plafonds",
            "description": "Api to handle plafonds"
        },
        {
            "name": "Guest users",
            "description": "Api to handle guest users"
        },
        {
            "name": "Customization",
            "description": "Api to handle the customization white lable webClient"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/private/healthCheck": {
            "get": {
                "tags": [
                    "API gateway"
                ],
                "summary": "Endpoint to check the status of microservices",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/healthCheck/dockerList": {
            "get": {
                "tags": [
                    "Health Checks"
                ],
                "summary": "Endpoint to check the status of microservices",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/authenticate/": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Login",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "refreshtoken": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        },
                                        "imageContent": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "Enter your username (mobile phone)"
                                    },
                                    "internationalPrefix": {
                                        "type": "string",
                                        "example": "Enter your international prefix (+351)"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Enter your password"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/users": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users or an user given a mobile phone",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "mobile",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "internationalPrefix",
                        "type": "string",
                        "example": "+351"
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Edit user account",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "language": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "On imageContent: If sent in with the base64 image, it will be changed;  If it is sent empty(''), the image will be removed; If sent with the url, no image will be changed"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Edit remove/delete account",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/account": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user account",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/details": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get a user's details through mobile phone",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "mobile": {
                                            "type": "string",
                                            "example": "Enter mobile phone"
                                        },
                                        "internationalPrefix": {
                                            "type": "string",
                                            "example": "+351"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/activate": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Internal api to activate user account by mobile phone",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mobile": {
                                        "type": "string",
                                        "example": "Enter mobile phone"
                                    },
                                    "internationalPrefix": {
                                        "type": "string",
                                        "example": "International Prefix (+351)"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/referencePlaces": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "API to add home and work as favorites ",
                "responses": {
                    "200": {
                        "description": "Successful request\n\n {\n\n    \"auth\": \"Boolean\",\n\n    \"code\": \"string\",\n\n    \"message\": \"string\" \n\n}"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "referencePlaces": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Reference places"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/changePassword": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "API to change password",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example": "Old password"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "example": "New password"
                                    },
                                    "confPassword": {
                                        "type": "string",
                                        "example": "New password confirmation"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/changeMobile": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "API to change mobile phone and username",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mobile": {
                                        "type": "string",
                                        "example": "New mobile phone"
                                    },
                                    "internationalPrefix": {
                                        "type": "string",
                                        "example": "International Prefix (+351)"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/favorites": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Endpoint to get all favorites from a user",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Endpoint to add a favorite to a user",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "baseId": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "chargerType": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "BaseId is the charger id in the EVIO database, and hwId is the serial number of the charger"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Endpoint to delete a favorite",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "baseId": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "BaseId is the charger id in the EVIO database, and hwId is the serial number of the charger"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/image": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "API to change image from a user ",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "imageContent": {
                                        "type": "string",
                                        "example": "Image on Base64 starting with 'data:image/jpeg;base64,'"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "API to remove image from a user ",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/company": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user type B2B",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/users/editUserPackage": {
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "API to update users package on user ",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "packageId": {
                                        "type": "string"
                                    },
                                    "packageName": {
                                        "type": "string",
                                        "default": "FREE"
                                    },
                                    "packageType": {
                                        "type": "string",
                                        "default": "FREE"
                                    },
                                    "rfidCardsLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "fleetsLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "evsLimit": {
                                        "type": "number",
                                        "default": 5
                                    },
                                    "driversLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "groupOfDriversLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "driversInGroupDriversLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "chargingAreasLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "evioBoxLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "chargersLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "tariffsLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "chargersGroupsLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "userInChargerGroupsLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "searchLocationsLimit": {
                                        "type": "string",
                                        "default": "UNLIMITED"
                                    },
                                    "searchChargersLimit": {
                                        "type": "string",
                                        "default": "UNLIMITED"
                                    },
                                    "comparatorLimit": {
                                        "type": "string",
                                        "default": "UNLIMITED"
                                    },
                                    "routerLimit": {
                                        "type": "string",
                                        "default": "UNLIMITED"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/opManagement/clientList": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "API to get client List (Only for OPM) ",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "username": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "mobile": {
                                                "type": "string"
                                            },
                                            "active": {
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "validated": {
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "licenseAgreement": {
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "licenseMarketing": {
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "country": {
                                                "type": "string",
                                                "default": "PT"
                                            },
                                            "language": {
                                                "type": "string",
                                                "default": "en"
                                            },
                                            "internationalPrefix": {
                                                "type": "string",
                                                "default": "+351"
                                            },
                                            "createDate": {
                                                "type": "date"
                                            },
                                            "imageContent": {
                                                "type": "string"
                                            },
                                            "favorites": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "baseId": {
                                                            "type": "string"
                                                        },
                                                        "hwId": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "referencePlaces": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Reference places"
                                                }
                                            },
                                            "accessType": {
                                                "type": "string",
                                                "default": "limited",
                                                "example": "all, limited"
                                            },
                                            "userPackage": {
                                                "type": "object",
                                                "properties": {
                                                    "packageName": {
                                                        "type": "string",
                                                        "default": "FREE"
                                                    },
                                                    "packageType": {
                                                        "type": "string",
                                                        "default": "FREE"
                                                    },
                                                    "rfidCardsLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "fleetsLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "evsLimit": {
                                                        "type": "number",
                                                        "default": 5
                                                    },
                                                    "driversLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "groupOfDriversLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "driversInGroupDriversLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "chargingAreasLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "evioBoxLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "chargersLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "tariffsLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "chargersGroupsLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "userInChargerGroupsLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "searchLocationsLimit": {
                                                        "type": "string",
                                                        "default": "UNLIMITED"
                                                    },
                                                    "searchChargersLimit": {
                                                        "type": "string",
                                                        "default": "UNLIMITED"
                                                    },
                                                    "comparatorLimit": {
                                                        "type": "string",
                                                        "default": "UNLIMITED"
                                                    },
                                                    "routerLimit": {
                                                        "type": "string",
                                                        "default": "UNLIMITED"
                                                    }
                                                }
                                            },
                                            "clientType": {
                                                "type": "string",
                                                "default": "b2c",
                                                "example": "b2c, b2b"
                                            },
                                            "devUser": {
                                                "type": "boolean",
                                                "default": "false"
                                            },
                                            "blocked": {
                                                "type": "boolean",
                                                "default": "false"
                                            },
                                            "paymentPeriod": {
                                                "type": "string",
                                                "default": "transaction",
                                                "example": "transaction, monthly"
                                            },
                                            "clientList": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "userId": {
                                                            "type": "string"
                                                        },
                                                        "clientType": {
                                                            "type": "string",
                                                            "example": "fleet, infrastructure, both"
                                                        }
                                                    }
                                                }
                                            },
                                            "paymentMethodB2B": {
                                                "type": "string"
                                            },
                                            "isBankTransferEnabled": {
                                                "type": "boolean",
                                                "default": "false"
                                            },
                                            "isMBRefEnabled": {
                                                "type": "boolean",
                                                "default": "false"
                                            },
                                            "numberOfCards": {
                                                "type": "number"
                                            },
                                            "numberOfEVs": {
                                                "type": "number"
                                            },
                                            "numberOfChargers": {
                                                "type": "number"
                                            },
                                            "numberOfSessions": {
                                                "type": "number"
                                            },
                                            "numberOfTickets": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "pageNumber",
                        "type": "number",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/opManagement/searchBar": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "API to get client List search Bar(Only for OPM) ",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "username": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "mobile": {
                                                "type": "string"
                                            },
                                            "active": {
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "validated": {
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "licenseAgreement": {
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "licenseMarketing": {
                                                "type": "boolean",
                                                "default": false
                                            },
                                            "country": {
                                                "type": "string",
                                                "default": "PT"
                                            },
                                            "language": {
                                                "type": "string",
                                                "default": "en"
                                            },
                                            "internationalPrefix": {
                                                "type": "string",
                                                "default": "+351"
                                            },
                                            "createDate": {
                                                "type": "date"
                                            },
                                            "imageContent": {
                                                "type": "string"
                                            },
                                            "favorites": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "baseId": {
                                                            "type": "string"
                                                        },
                                                        "hwId": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "referencePlaces": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Reference places"
                                                }
                                            },
                                            "accessType": {
                                                "type": "string",
                                                "default": "limited",
                                                "example": "all, limited"
                                            },
                                            "userPackage": {
                                                "type": "object",
                                                "properties": {
                                                    "packageName": {
                                                        "type": "string",
                                                        "default": "FREE"
                                                    },
                                                    "packageType": {
                                                        "type": "string",
                                                        "default": "FREE"
                                                    },
                                                    "rfidCardsLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "fleetsLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "evsLimit": {
                                                        "type": "number",
                                                        "default": 5
                                                    },
                                                    "driversLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "groupOfDriversLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "driversInGroupDriversLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "chargingAreasLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "evioBoxLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "chargersLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "tariffsLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "chargersGroupsLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "userInChargerGroupsLimit": {
                                                        "type": "number",
                                                        "default": 1
                                                    },
                                                    "searchLocationsLimit": {
                                                        "type": "string",
                                                        "default": "UNLIMITED"
                                                    },
                                                    "searchChargersLimit": {
                                                        "type": "string",
                                                        "default": "UNLIMITED"
                                                    },
                                                    "comparatorLimit": {
                                                        "type": "string",
                                                        "default": "UNLIMITED"
                                                    },
                                                    "routerLimit": {
                                                        "type": "string",
                                                        "default": "UNLIMITED"
                                                    }
                                                }
                                            },
                                            "clientType": {
                                                "type": "string",
                                                "default": "b2c",
                                                "example": "b2c, b2b"
                                            },
                                            "devUser": {
                                                "type": "boolean",
                                                "default": "false"
                                            },
                                            "blocked": {
                                                "type": "boolean",
                                                "default": "false"
                                            },
                                            "paymentPeriod": {
                                                "type": "string",
                                                "default": "transaction",
                                                "example": "transaction, monthly"
                                            },
                                            "clientList": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "userId": {
                                                            "type": "string"
                                                        },
                                                        "clientType": {
                                                            "type": "string",
                                                            "example": "fleet, infrastructure, both"
                                                        }
                                                    }
                                                }
                                            },
                                            "paymentMethodB2B": {
                                                "type": "string"
                                            },
                                            "isBankTransferEnabled": {
                                                "type": "boolean",
                                                "default": "false"
                                            },
                                            "isMBRefEnabled": {
                                                "type": "boolean",
                                                "default": "false"
                                            },
                                            "numberOfCards": {
                                                "type": "number"
                                            },
                                            "numberOfEVs": {
                                                "type": "number"
                                            },
                                            "numberOfChargers": {
                                                "type": "number"
                                            },
                                            "numberOfSessions": {
                                                "type": "number"
                                            },
                                            "numberOfTickets": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "pageNumber",
                        "type": "number",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "searchBar",
                        "type": "string",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/paymentPeriodByUser": {
            "get": {
                "tags": [
                    "User",
                    "New"
                ],
                "summary": "Get payment period by user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "paymentPeriod": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/paymentPeriodsMaping": {
            "get": {
                "tags": [
                    "User",
                    "New"
                ],
                "summary": "Get payment period for mapping",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "paymentPeriod": {
                                                "type": "string"
                                            },
                                            "translationKey": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/paymentPeriod": {
            "patch": {
                "tags": [
                    "User",
                    "New"
                ],
                "summary": "Update payment period for an user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "paymentPeriod": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/users/paymentMethodB2B": {
            "patch": {
                "tags": [
                    "User",
                    "New"
                ],
                "summary": "Update payment method for an user Only B2B",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "paymentMethod": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/usersPackage": {
            "post": {
                "tags": [
                    "Users packages"
                ],
                "summary": "Create a new user package",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "packageName": {
                                            "type": "string"
                                        },
                                        "packageType": {
                                            "type": "string"
                                        },
                                        "rfidCardsLimit": {
                                            "type": "number"
                                        },
                                        "fleetsLimit": {
                                            "type": "number"
                                        },
                                        "evsLimit": {
                                            "type": "number"
                                        },
                                        "driversLimit": {
                                            "type": "number"
                                        },
                                        "groupOfDriversLimit": {
                                            "type": "number"
                                        },
                                        "driversInGroupDriversLimit": {
                                            "type": "number"
                                        },
                                        "chargingAreasLimit": {
                                            "type": "number"
                                        },
                                        "evioBoxLimit": {
                                            "type": "number"
                                        },
                                        "chargersLimit": {
                                            "type": "number"
                                        },
                                        "tariffsLimit": {
                                            "type": "number"
                                        },
                                        "chargersGroupsLimit": {
                                            "type": "number"
                                        },
                                        "userInChargerGroupsLimit": {
                                            "type": "number"
                                        },
                                        "searchLocationsLimit": {
                                            "type": "string"
                                        },
                                        "searchChargersLimit": {
                                            "type": "string"
                                        },
                                        "comparatorLimit": {
                                            "type": "string"
                                        },
                                        "routerLimit": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Packages"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Users packages"
                ],
                "summary": "Get all users packages",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string"
                                            },
                                            "packageName": {
                                                "type": "string"
                                            },
                                            "packageType": {
                                                "type": "string"
                                            },
                                            "rfidCardsLimit": {
                                                "type": "number"
                                            },
                                            "fleetsLimit": {
                                                "type": "number"
                                            },
                                            "evsLimit": {
                                                "type": "number"
                                            },
                                            "driversLimit": {
                                                "type": "number"
                                            },
                                            "groupOfDriversLimit": {
                                                "type": "number"
                                            },
                                            "driversInGroupDriversLimit": {
                                                "type": "number"
                                            },
                                            "chargingAreasLimit": {
                                                "type": "number"
                                            },
                                            "evioBoxLimit": {
                                                "type": "number"
                                            },
                                            "chargersLimit": {
                                                "type": "number"
                                            },
                                            "tariffsLimit": {
                                                "type": "number"
                                            },
                                            "chargersGroupsLimit": {
                                                "type": "number"
                                            },
                                            "userInChargerGroupsLimit": {
                                                "type": "number"
                                            },
                                            "searchLocationsLimit": {
                                                "type": "string"
                                            },
                                            "searchChargersLimit": {
                                                "type": "string"
                                            },
                                            "comparatorLimit": {
                                                "type": "string"
                                            },
                                            "routerLimit": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Users packages"
                ],
                "summary": "Edit users package",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "packageName": {
                                            "type": "string"
                                        },
                                        "packageType": {
                                            "type": "string"
                                        },
                                        "rfidCardsLimit": {
                                            "type": "number"
                                        },
                                        "fleetsLimit": {
                                            "type": "number"
                                        },
                                        "evsLimit": {
                                            "type": "number"
                                        },
                                        "driversLimit": {
                                            "type": "number"
                                        },
                                        "groupOfDriversLimit": {
                                            "type": "number"
                                        },
                                        "driversInGroupDriversLimit": {
                                            "type": "number"
                                        },
                                        "chargingAreasLimit": {
                                            "type": "number"
                                        },
                                        "evioBoxLimit": {
                                            "type": "number"
                                        },
                                        "chargersLimit": {
                                            "type": "number"
                                        },
                                        "tariffsLimit": {
                                            "type": "number"
                                        },
                                        "chargersGroupsLimit": {
                                            "type": "number"
                                        },
                                        "userInChargerGroupsLimit": {
                                            "type": "number"
                                        },
                                        "searchLocationsLimit": {
                                            "type": "string"
                                        },
                                        "searchChargersLimit": {
                                            "type": "string"
                                        },
                                        "comparatorLimit": {
                                            "type": "string"
                                        },
                                        "routerLimit": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "packageId": {
                                        "type": "string"
                                    },
                                    "packageName": {
                                        "type": "string",
                                        "default": "FREE"
                                    },
                                    "packageType": {
                                        "type": "string",
                                        "default": "FREE"
                                    },
                                    "rfidCardsLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "fleetsLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "evsLimit": {
                                        "type": "number",
                                        "default": 5
                                    },
                                    "driversLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "groupOfDriversLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "driversInGroupDriversLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "chargingAreasLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "evioBoxLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "chargersLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "tariffsLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "chargersGroupsLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "userInChargerGroupsLimit": {
                                        "type": "number",
                                        "default": 1
                                    },
                                    "searchLocationsLimit": {
                                        "type": "string",
                                        "default": "UNLIMITED"
                                    },
                                    "searchChargersLimit": {
                                        "type": "string",
                                        "default": "UNLIMITED"
                                    },
                                    "comparatorLimit": {
                                        "type": "string",
                                        "default": "UNLIMITED"
                                    },
                                    "routerLimit": {
                                        "type": "string",
                                        "default": "UNLIMITED"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users packages"
                ],
                "summary": "Remove/delete users packages",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/usersPackages/byId": {
            "get": {
                "tags": [
                    "Users packages"
                ],
                "summary": "Get users packages by id",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "_id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "packageName": {
                                            "type": "string"
                                        },
                                        "packageType": {
                                            "type": "string"
                                        },
                                        "rfidCardsLimit": {
                                            "type": "number"
                                        },
                                        "fleetsLimit": {
                                            "type": "number"
                                        },
                                        "evsLimit": {
                                            "type": "number"
                                        },
                                        "driversLimit": {
                                            "type": "number"
                                        },
                                        "groupOfDriversLimit": {
                                            "type": "number"
                                        },
                                        "driversInGroupDriversLimit": {
                                            "type": "number"
                                        },
                                        "chargingAreasLimit": {
                                            "type": "number"
                                        },
                                        "evioBoxLimit": {
                                            "type": "number"
                                        },
                                        "chargersLimit": {
                                            "type": "number"
                                        },
                                        "tariffsLimit": {
                                            "type": "number"
                                        },
                                        "chargersGroupsLimit": {
                                            "type": "number"
                                        },
                                        "userInChargerGroupsLimit": {
                                            "type": "number"
                                        },
                                        "searchLocationsLimit": {
                                            "type": "string"
                                        },
                                        "searchChargersLimit": {
                                            "type": "string"
                                        },
                                        "comparatorLimit": {
                                            "type": "string"
                                        },
                                        "routerLimit": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/recover_password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Endpoint to create a password recovery",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mobile": {
                                        "type": "string",
                                        "example": "Mobile phone"
                                    },
                                    "internationalPrefix": {
                                        "type": "string",
                                        "example": "International Prefix (+351)"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Endpoint to update a password recovery",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mobile": {
                                        "type": "string",
                                        "example": "Mobile phone"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "internationalPrefix": {
                                        "type": "string",
                                        "example": "International Prefix (+351)"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/company/recover_password": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Endpoint to create a password recovery for company users",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Company"
                ],
                "summary": "Endpoint to update a password recovery",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/accountActivation": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Endpoint to create a new activation code (Internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mobile": {
                                        "type": "string",
                                        "example": "Mobile phone"
                                    },
                                    "internationalPrefix": {
                                        "type": "string",
                                        "example": "International Prefix (+351)"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Endpoint to update a activation code",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mobile": {
                                        "type": "string",
                                        "example": "Mobile phone"
                                    },
                                    "internationalPrefix": {
                                        "type": "string",
                                        "example": "International Prefix (+351)"
                                    },
                                    "code": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/accountActivation/resendCode": {
            "patch": {
                "tags": [
                    "User",
                    "New"
                ],
                "summary": "Endpoint to resend code",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mobile": {
                                        "type": "string",
                                        "example": "Mobile phone"
                                    },
                                    "internationalPrefix": {
                                        "type": "string",
                                        "example": "International Prefix (+351)"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/drivers": {
            "post": {
                "tags": [
                    "Drivers"
                ],
                "summary": "End point to create a pool of drivers\n\n It will not be necessary to use, because at the time of registration by default a pool of drivers is created",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Drivers"
                ],
                "summary": "End point add drivers to a pool of drivers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "drivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "driverId": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Drivers"
                ],
                "summary": "End point to remove drivers from a pool of drivers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "drivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "driverId": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Drivers"
                ],
                "summary": "End point get my pool of drivers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupDrivers": {
            "post": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Create a new group of drivers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group Drivers"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to add new dirver to a group driver",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "listOfDrivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "driverId": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to remove drivers from a group driver",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "listOfDrivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "driverId": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to get all my group drivers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to delete a group driver",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupDrivers/ev": {
            "get": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to get group drivers for an ev (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Id of the group drivers"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupDrivers/otherEvs": {
            "get": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to get the group drivers I belong to (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupDrivers/update": {
            "patch": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to update a group driver",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "imageContent : \n\n if sent empty the image will be removed \n\n if sent in url, nothing will happen \n\n if sent in base 64 the image will be changed"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupDrivers/backOffice": {
            "patch": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to add and remove drivers from a group of drivers. (endpoint for back office) ",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "listOfDrivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "driverId": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                },
                                                "active": {
                                                    "type": "boolean"
                                                },
                                                "new": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "Add drivers: The listOfDrivers array is made up of all the drivers that are already there, plus those that you want to add. Those that want to add the new attribute are true and the rest are false. \n\n Remove drivers: just send the listOfDrivers array with the users we want to keep. \n\n It is possible to add and remove in the same order simply by adding new to true"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupDrivers/leaveGroupDrivers": {
            "patch": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to leave groupDrivers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "_id: Id of the group you want to leave"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupDrivers/putAdmin": {
            "put": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to put an user to admin of the group drivers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "userId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "_id: Id of the group you want to leave\n\n userId: id of the user you want put admin"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupDrivers/removeAdmin": {
            "patch": {
                "tags": [
                    "Group Drivers"
                ],
                "summary": "Endpoint to remove the admin privilege to a user from the group drivers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "userId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "_id: Id of the group you want to leave\n\n userId: id of the user you want remove admin"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupCSUsers": {
            "post": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Create a new group of charger station users",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    },
                                    "listOfUsers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "userId": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Add user to a group of charger station users",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "listOfUsers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "userId": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Remove users from a group of charger station users",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "listOfUsers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "userId": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Delete a group of charger station users",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "Group id to be removed",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Get my groups of charger station users",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupCSUsers/backOffice": {
            "patch": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Endpoint to Add and remove user frontEnd backoffice. (endpoint for back office) ",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "listOfUsers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "userId": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                },
                                                "active": {
                                                    "type": "boolean"
                                                },
                                                "new": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "Add users: The listOfUsers array is made up of all the users that are already there, plus those that you want to add. Those that want to add the new attribute are true and the rest are false. \n\n Remove users: just send the listOfUsers array with the users we want to keep. \n\n It is possible to add and remove in the same order simply by adding new to true"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupCSUsers/update": {
            "patch": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Update group of cherger station users",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "imageContent : \n\n if sent empty the image will be removed \n\n if sent in url, nothing will happen \n\n if sent in base 64 the image will be changed"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupCSUsers/othersGroupsCSUsers": {
            "get": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Get Groups of charger station users that i belong (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupCSUsers/byId": {
            "get": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Get group of charger station users by id (Internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Id of the group of charger station users"
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupCSUsers/map": {
            "get": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Get Groups that i belong for map (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupCSUsers/leaveGroupCSUsers": {
            "patch": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Endpoint to leave Group of charger station users",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "_id: Id of the group you want to leave"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupCSUsers/putAdmin": {
            "put": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Endpoint to put an user to admin of the group of charger station users",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "userId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "_id: Id of the group you want to leave\n\n userId: id of the user you want put admin"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/groupCSUsers/removeAdmin": {
            "patch": {
                "tags": [
                    "Group of Charger Station Users"
                ],
                "summary": "Endpoint to remove the admin privilege to a user from the group of charger station users",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "userId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "_id: Id of the group you want to leave\n\n userId: id of the user you want remove admin privilege"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs": {
            "post": {
                "tags": [
                    "EVs"
                ],
                "summary": "Create a new EV",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fleet": {
                                        "type": "string"
                                    },
                                    "brand": {
                                        "type": "string"
                                    },
                                    "model": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "string"
                                    },
                                    "dateFrom": {
                                        "type": "string"
                                    },
                                    "dateTo": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    },
                                    "licensePlate": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "plugPower": {
                                        "type": "number",
                                        "example": 7.4
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "EVs"
                ],
                "summary": "Edit a EV, make primary EV",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EVs"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "EVs"
                ],
                "summary": "Get all EV of a particular user",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "EVs"
                ],
                "summary": "Delete a EV",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "EVs"
                ],
                "summary": "Endpoint to edit a EV",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EVs"
                            }
                        }
                    },
                    "description": "On imageContent : \n\n If an empty array is sent, the images will be removed; \n\n If an array of urls is sent it will not alter the images; \n\n If base64 encoded images are sent in the array content, they will be added to the charger or will replace existing ones. \n\n If an empty position ('') is sent in the middle of the array, the image of that position will be removed"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/images": {
            "patch": {
                "tags": [
                    "EVs"
                ],
                "summary": "Patch for update image of ev",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "imageContent : image in base64 format"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "EVs"
                ],
                "summary": "Put for add new image a one ev",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "newImage": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "inewImage: List of new images, base64 format"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "EVs"
                ],
                "summary": "Delete a image from one ev",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "imageContent : List of the name of the images to be removed"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/geral": {
            "get": {
                "tags": [
                    "EVs"
                ],
                "summary": "Get all EVs or fill in the options to do a more detailed search",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "description": "Optional options: Enter the id of the EV"
                    },
                    {
                        "in": "query",
                        "name": "brand",
                        "type": "string",
                        "description": "Optional options: Enter the brand of the EV"
                    },
                    {
                        "in": "query",
                        "name": "model",
                        "type": "string",
                        "description": "Optional options: Enter the model of the EV"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "type": "string",
                        "description": "Optional options: Enter the year of the EV"
                    },
                    {
                        "in": "query",
                        "name": "userId",
                        "type": "string",
                        "description": "Optional options: Enter EV owner id (User id)"
                    },
                    {
                        "in": "query",
                        "name": "licensePlate",
                        "type": "string",
                        "description": "Optional options: Enter the licence plate of the EV"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/frontend": {
            "get": {
                "tags": [
                    "EVs"
                ],
                "summary": "Get all EVs or fill in the options to do a more detailed search, for frontend use",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "description": "Optional options: Enter the id of the EV"
                    },
                    {
                        "in": "query",
                        "name": "brand",
                        "type": "string",
                        "description": "Optional options: Enter the brand of the EV"
                    },
                    {
                        "in": "query",
                        "name": "model",
                        "type": "string",
                        "description": "Optional options: Enter the model of the EV"
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "type": "string",
                        "description": "Optional options: Enter the year of the EV"
                    },
                    {
                        "in": "query",
                        "name": "userId",
                        "type": "string",
                        "description": "Optional options: Enter EV owner id (User id)"
                    },
                    {
                        "in": "query",
                        "name": "licensePlate",
                        "type": "string",
                        "description": "Optional options: Enter the licence plate of the EV"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/bygroup": {
            "get": {
                "tags": [
                    "EVs"
                ],
                "summary": "Get all evs from a group",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "description": "Group id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/assigningDrivers": {
            "patch": {
                "tags": [
                    "EVs"
                ],
                "summary": "Assigning drivers or group of drivers to an ev",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "In case of adding a driver to listOfDrivers it is necessary to send the name of the driver",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "evId": {
                                        "type": "string"
                                    },
                                    "listOfGroupDrivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "groupId": {
                                                    "type": "string"
                                                },
                                                "paymenteBy": {
                                                    "type": "string",
                                                    "example": "mySelf/driver"
                                                },
                                                "period": {
                                                    "type": "object",
                                                    "properties": {
                                                        "periodType": {
                                                            "type": "string",
                                                            "example": "always/custom"
                                                        },
                                                        "period": {
                                                            "type": "object",
                                                            "properties": {
                                                                "startDate": {
                                                                    "type": "date"
                                                                },
                                                                "stopDate": {
                                                                    "type": "date"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "listOfDrivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "_id": {
                                                    "type": "string"
                                                },
                                                "userId": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "paymenteBy": {
                                                    "type": "string",
                                                    "example": "mySelf/driver"
                                                },
                                                "period": {
                                                    "type": "object",
                                                    "properties": {
                                                        "periodType": {
                                                            "type": "string",
                                                            "example": "always/custom"
                                                        },
                                                        "period": {
                                                            "type": "object",
                                                            "properties": {
                                                                "startDate": {
                                                                    "type": "date"
                                                                },
                                                                "stopDate": {
                                                                    "type": "date"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/removeDrivers": {
            "patch": {
                "tags": [
                    "EVs"
                ],
                "summary": "Remove drivers from an ev",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "evId": {
                                        "type": "string"
                                    },
                                    "listOfGroupDrivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "listOfDrivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "listOfGroupDrivers: Array of group ids to be removed \n\n listOfDrivers: Array of _id to be removed \n\n Both are mandatory to go on request, they can be empty ([])"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/details": {
            "get": {
                "tags": [
                    "EVs"
                ],
                "summary": "Get details of the evs through a fleet id",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "required": true,
                        "description": "Id of the fleet"
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/ev/details": {
            "get": {
                "tags": [
                    "EVs"
                ],
                "summary": "Get details of an ev by id",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "required": true,
                        "description": "Id of the ev"
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/leaveBeDriver": {
            "patch": {
                "tags": [
                    "EVs"
                ],
                "summary": "Endpoint to stop being an ev driver",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "_id: Id of the ev you want to stop being a driver"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/updateStatus": {
            "patch": {
                "tags": [
                    "EVs"
                ],
                "summary": "Endpoint to update status and number of total sessions (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "evId": {
                                        "type": "string"
                                    },
                                    "userId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "10, 20"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/removeGroupDriver": {
            "patch": {
                "tags": [
                    "EVs"
                ],
                "summary": "Endpoint to remove a groupDriver from the EVS (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "groupDriver": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/removeDriverEv": {
            "patch": {
                "tags": [
                    "EVs"
                ],
                "summary": "Endpoint to remove a user to driver of evs (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/myEvs": {
            "get": {
                "tags": [
                    "EVs"
                ],
                "summary": "Get my evs (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/toPlafond": {
            "get": {
                "tags": [
                    "EVs",
                    "New"
                ],
                "summary": "Get my evs to add plafond",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EVs"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/addPlafondIdToEV": {
            "patch": {
                "tags": [
                    "EVs",
                    "New"
                ],
                "summary": "Endpoint to add plafond to an EV (Internal Endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "evId": {
                                        "type": "string"
                                    },
                                    "plafondId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/removePlafondIdToEV": {
            "patch": {
                "tags": [
                    "EVs",
                    "New"
                ],
                "summary": "Endpoint to remove plafond to an EV (Internal Endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "evId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/fleets": {
            "post": {
                "tags": [
                    "Fleet"
                ],
                "summary": "Create a new Fleet",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Fleets"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Fleet"
                ],
                "summary": "Get my fleets group",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Fleet"
                ],
                "summary": "Add a ev to a fleet group",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "evs": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "evId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "evs : list of evs to add a fleet"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Fleet"
                ],
                "summary": "Update a fleet group",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "imageContent : \n\n if sent empty the image will be removed \n\n if sent in url, nothing will happen \n\n if sent in base 64 the image will be changed"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Fleet"
                ],
                "summary": "Delete a fleet group",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/fleets/toAddOnChargerB2B": {
            "get": {
                "tags": [
                    "Fleet"
                ],
                "summary": "Get all my groups fleets and fleets of my clients (B2B User)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/fleets/removeEv": {
            "patch": {
                "tags": [
                    "Fleet"
                ],
                "summary": "Delete a ev from a fleet group",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "evs": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "evId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "evs : list of evs to remove a fleet"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/fleets/otherEvs": {
            "get": {
                "tags": [
                    "Fleet"
                ],
                "summary": "Get other evs",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/fleets/user": {
            "delete": {
                "tags": [
                    "Fleet"
                ],
                "summary": "Delete fleet fron an user (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/infrastructure": {
            "post": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Create a new Infrastructure (Charging place)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Add a charger to an Infrastructure group",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "chargers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "chargerId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "chargers : list of chargers to add an infrastructure"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Update an Infrastructure group",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "imageContent : \n\n if sent empty the image will be removed \n\n if sent in url, nothing will happen \n\n if sent in base 64 the image will be changed"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Delete an Infrastructure group",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/infrastructure/myInfrastructure": {
            "get": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Get my Infrastructure group",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/infrastructure/othersInfrastructure": {
            "get": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Get others infrastructures",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/infrastructure/removeCharger": {
            "patch": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Remove a charger from an Infrastructure group",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "chargers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "chargerId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "chargers : list of Chargers to remove from an infrastructure \n\n chargerId: chargers id to be removed"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/infrastructure/updateAccessType": {
            "patch": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Update Access Type of an infrastructure",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "accessType": {
                                        "type": "string"
                                    },
                                    "listOfGroups": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "groupName": {
                                                    "type": "string"
                                                },
                                                "groupId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "listOfFleets": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "fleetName": {
                                                    "type": "string"
                                                },
                                                "fleetId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "AccessType: Access Type cam be \\'Public\\', \\'Private\\', \\'Restrict\\';\n\n If the accessType = \\'Restrict\\', it will be necessary to send a list of groups (\\'listOfGroups\\') \n\n The groupId attribute is the id of the group of charger station users that will have access to the infrastructure"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/infrastructure/user": {
            "delete": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Delete Infrastructures from an user (Internal ENdpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/infrastructure/getInfrastructure": {
            "get": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Get infrastructure by id of the charger (Internal endpoint)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chargerId",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers": {
            "post": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Create a new charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "infrastructure: Infrastructure id to which the charger will be added;",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "infrastructure": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "parkingType": {
                                        "type": "string"
                                    },
                                    "vehiclesType": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "vehicle": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "street": {
                                                "type": "string"
                                            },
                                            "number": {
                                                "type": "string"
                                            },
                                            "zipCode": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "geometry": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "default": "Point"
                                            },
                                            "coordinates": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                },
                                                "index": "2dsphere"
                                            }
                                        }
                                    },
                                    "instantBooking": {
                                        "type": "boolean"
                                    },
                                    "plugs": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Plugs"
                                        }
                                    },
                                    "accessType": {
                                        "type": "string"
                                    },
                                    "listOfGroups": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "groupId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "chargerType": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "infoPoints": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Patch for update a charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Charger"
                            }
                        }
                    },
                    "description": "On imageContent :\n\n If an empty array is sent, the images will be removed; \n\n If an array of urls is sent it will not alter the images; \n\n If base64 encoded images are sent in the array content, they will be added to the charger or will replace existing ones. \n\n If an empty position ('') is sent in the middle of the array, the image of that position will be removed"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Delete a charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "Enter information about charger id",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/groupCSUsers": {
            "put": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoit to add new groupsCSUsers to a charger",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "listOfGroups": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "groupName": {
                                                    "type": "string"
                                                },
                                                "groupId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoit to remove groupsCSUsers from a charger",
                "requestBody": {
                    "required": true,
                    "description": "The listOfGroups is a list with the groupId of the groups you want to remove. Just send the value",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "listOfGroups": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/removeGroupCSUsers": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoit to remove groupsCSUsers from chargers (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "groupCSUsers": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/images": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Patch for update image of charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "hdId": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "newImage": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "imageContent : List of the name of the images to be replaced \n\n newImage: List of new images, base64 format"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Put for add new image a one charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "hdId": {
                                        "type": "string"
                                    },
                                    "newImage": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "inewImage: List of new images, base64 format"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Delete a image from one charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "hdId": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "imageContent : List of the name of the images to be removed"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/plugs": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Patch for update a charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "plugs": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "plugId": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/configPlugs": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoint to config plugs on chargers EVIO",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "plugs": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Plugs"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/status": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get for charger status, internal API",
                "parameters": [
                    {
                        "in": "query",
                        "name": "hwId",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Patch for charger status to put the charge status in loading or free and booking with conformation, (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string",
                                        "example": "19080001"
                                    },
                                    "plugId": {
                                        "type": "string",
                                        "example": "19080001"
                                    },
                                    "status": {
                                        "type": "number",
                                        "example": "10"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/multiStatus": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Patch for charger status to put the charge status in loading or free and booking with conformation, multiplugs (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string",
                                        "example": "19080001"
                                    },
                                    "plugId": {
                                        "type": "string",
                                        "example": "19080001"
                                    },
                                    "status": {
                                        "type": "number",
                                        "example": "10"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/chargerStatus": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "update charger Status (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "description": "It can be choose which to send the _id or hwId",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "10, 20, 30, 40, 50"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/map": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get charger Private for map (Internal endpoit to get all charger including private chargers)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/myChargers": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get my charger (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/byId": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get a charger by id (Internal endpoint)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/favorites": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get favorites chargers (Internal EndPoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "$or": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "_id": {
                                                    "type": "string"
                                                },
                                                "hwId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "BaseId is the charger id in the EVIO database, and hwId is the serial number of the charger"
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/parkingSession": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Change if allows parking session after charging session",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "parkingSessionAfterChargingSession": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/infrastructure": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Patch for upgrade infrastructure of one or more chargers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "Internal Server Error"
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chargerId": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "Infrastructure_old": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/groups": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Patch for add users groups to a charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "Enter group id",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/activate": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Patch to activate/disable chargers by infrastructure",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Incorrect request"
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "Enter information about infrastructure",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/rating": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Update rating of charger (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Incorrect request"
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "hwId": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "rating": {
                                        "type": "number",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get charger by rating",
                "parameters": [
                    {
                        "in": "query",
                        "name": "rating",
                        "type": "number",
                        "description": "Minimum rating value",
                        "example": 5,
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/chargerType": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get chargers by charger Type (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chargerType": {
                                        "type": "string",
                                        "example": "002"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Only return an array of hwId"
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n \"Array\""
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/heartBeat": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoint to update hear beat (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string",
                                        "example": "19080003"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n {\n\n    \"auth\": \"Boolean\",\n\n    \"code\": \"string\",\n\n    \"message\": \"string\" \n\n}"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/updateAvailability": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoint to change Availability",
                "requestBody": {
                    "required": true,
                    "description": "Availability can be \\'Always\\' or \\'Custom\\', \n\n If it's \\'Custom\\' for each day it is necessary to indicate whether it is selected \\'isSelected\\', indicate availabilityDay \\'allDay or costum\\'\n\n If availabilityDay equal to \\'allDay\\' it is not necessary to indicate the range\n\n If availabilityDay equal to \\'costum\\' it is necessary to indicate the range",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "availability": {
                                        "$ref": "#/components/schemas/Availability"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/updateAccessType": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoint to change acess Type",
                "requestBody": {
                    "required": true,
                    "description": "AccessType: Access Type cam be \\'Public\\', \\'Private\\', \\'Restrict\\';\n\n If the accessType = \\'Restrict\\', it will be necessary to send a list of groups (\\'listOfGroups\\')\n\n If the accessType = \\'Public\\', you can send list of groups (\\'listOfGroups\\') \n\n The groupId attribute is the id of the group of charger station users that will have access to the charger",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "accessType": {
                                        "type": "string"
                                    },
                                    "listOfGroups": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "groupName": {
                                                    "type": "string"
                                                },
                                                "groupId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "listOfFleets": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "fleetName": {
                                                    "type": "string"
                                                },
                                                "fleetId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "mapVisibility": {
                                        "type": "boolean",
                                        "example": "If accessType Public need to send mapVisibility true or false"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/tariffs": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoint Update a tariff in a plug",
                "requestBody": {
                    "required": true,
                    "description": "The tariff array is to be sent everything that exists. That is, if you have 5 different tariffs and if you only want to change one, the 5 will be sent the same. This way it is possible to edit more than one tariff at the same time. \n\n The groupName attribute corresponds to the group name and the groupId corresponds to the group id that will have that tariff. If the charger is public, the groupName will be \\'Public\\' and the groupId will be empty \\'\\'\n\n The tariffId attribute corresponds to the tariff id. If not assigned it goes empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    },
                                    "tariff": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "groupName": {
                                                    "type": "string"
                                                },
                                                "groupId": {
                                                    "type": "string"
                                                },
                                                "tariffId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoint get a tariff from a plug",
                "parameters": [
                    {
                        "in": "query",
                        "name": "hwId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "plugId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "userId",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/removeTariffs": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoint to remove tariff from chargers (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string"
                                    },
                                    "tariffId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/qrCodeId": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get chargers by charger Qr code ID",
                "parameters": [
                    {
                        "in": "query",
                        "name": "qrCodeId",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n \"Array\""
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/mqttFail": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoint to change status charger evio when mqtt fail (Internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chargerType": {
                                        "type": "string"
                                    },
                                    "hasInfrastructure": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/allowRFID": {
            "patch": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Endpoint to enable and disable RFID card on charger",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "allowRFID": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/chargers": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get all public chargers (Internal endpoit to get all public charger)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lat",
                        "type": "string",
                        "description": "Latitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "type": "string",
                        "description": "Longitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "distance",
                        "type": "string",
                        "description": "Distance radius to search (In meters)",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/chargers/getTariff": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get tariff id (internal endpoint)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "userId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "hwId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "plugId",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/chargers/searchByName": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get charger by name to search (Private)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/chargers/searchByName": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get charger by name to search (Public)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/public/chargers/details": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get details about a charger when not loged",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "description": "Intended charger id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/chargers/details": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get details about a charger when loged",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "description": "Intended charger id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/chargers/opm": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get all charger, internal endpoit for connetor station of operations management",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lat",
                        "type": "string",
                        "description": "Latitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "type": "string",
                        "description": "Longitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "distance",
                        "type": "string",
                        "description": "Distance radius to search (In meters)",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/opm": {
            "get": {
                "tags": [
                    "Chargers"
                ],
                "summary": "Get all charger, internal endpoit for connetor station of operations management",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lat",
                        "type": "string",
                        "description": "Latitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "type": "string",
                        "description": "Longitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "distance",
                        "type": "string",
                        "description": "Distance radius to search (In meters)",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargersEvio": {
            "post": {
                "tags": [
                    "EVIO chargers"
                ],
                "summary": "Create a new charger EVIO",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EVIO charger"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "EVIO chargers"
                ],
                "summary": "Get a EVIO chager by QR code (Hardware Id)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "hwId",
                        "type": "string",
                        "description": "Hardware Id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargersEvio/wifiPairingName": {
            "patch": {
                "tags": [
                    "EVIO chargers"
                ],
                "summary": "Save WiFi name on chargers EVIO",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "wifiPairingName": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargerTypes": {
            "post": {
                "tags": [
                    "Charger Type"
                ],
                "summary": "Create a new charger Type",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Charger Type"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Charger Type"
                ],
                "summary": "Get a charger information by Type",
                "parameters": [
                    {
                        "in": "query",
                        "name": "chargerType",
                        "type": "string",
                        "description": "Charger Type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargerTypes/read": {
            "get": {
                "tags": [
                    "Charger Type"
                ],
                "summary": "Endpoint to get hosts and paths for connection station (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "actions": {
                                        "type": "object",
                                        "properties": {
                                            "$elemMatch": {
                                                "type": "object",
                                                "properties": {
                                                    "command": {
                                                        "type": "string",
                                                        "example": "read"
                                                    },
                                                    "enable": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/start": {
            "post": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Start/create a charging session (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Charging session"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/stop/stat": {
            "post": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Stop a charging session (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Charging session"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession": {
            "patch": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Update charging session (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Charging session"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Get chargers with required action (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "status",
                        "type": "string",
                        "description": "10 - To Start; 20 - Running; 30 - To Stop; 40 - Stopped; 50 - In Pause; 60 - Failed",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/siemens": {
            "get": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Get charging session with by status siemens (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "The query can be built in frontend and sent if followed. The answer is always given depending on the query received.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/frontend": {
            "patch": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Update charging session (Internal endpoint) use only by front-end mobile",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Charging session"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/statistics": {
            "patch": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Update charging session - update reading points(Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Charging session"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/inSession": {
            "get": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Get active sessions (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "userId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "evId",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/rating": {
            "put": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Endpoint to insert rating of the charging session",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "feedBackText": {
                                        "type": "string"
                                    },
                                    "feedBack": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "questionCode": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "number"
                                                },
                                                "auxiliaryText": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "Charging session id and rating value"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Endpoint to get ratings of charging sessions by chargers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "hwId",
                        "type": "string",
                        "required": true,
                        "description": "Hardware Id of the charger",
                        "example": "19080003"
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/stopReason": {
            "put": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Endpoint to insert reason to stop charging session by owner, (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "stopReason": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "reasonCode": {
                                                    "type": "string"
                                                },
                                                "reasonText": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "Charging session id and rating value"
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/myActiveSessions": {
            "get": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Endpoint to get my active sessions",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "totalPower": {
                                                "type": "number"
                                            },
                                            "estimatedPrice": {
                                                "type": "number"
                                            },
                                            "batteryCharged": {
                                                "type": "number"
                                            },
                                            "timeCharged": {
                                                "type": "number"
                                            },
                                            "CO2Saved": {
                                                "type": "number"
                                            },
                                            "stoppedByOwner": {
                                                "type": "boolean"
                                            },
                                            "counter": {
                                                "type": "number"
                                            },
                                            "_id": {
                                                "type": "string"
                                            },
                                            "hwId": {
                                                "type": "string"
                                            },
                                            "evId": {
                                                "$ref": "#/components/schemas/EVs"
                                            },
                                            "tariffId": {
                                                "type": "string"
                                            },
                                            "command": {
                                                "type": "string"
                                            },
                                            "chargerType": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "string"
                                            },
                                            "userId": {
                                                "type": "string"
                                            },
                                            "plugId": {
                                                "type": "string"
                                            },
                                            "idTag": {
                                                "type": "string"
                                            },
                                            "startDate": {
                                                "type": "date"
                                            },
                                            "parkingStartDate": {
                                                "type": "date"
                                            },
                                            "parkingStopDate": {
                                                "type": "date"
                                            },
                                            "readingPoints": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "readDate": {
                                                            "type": "date"
                                                        },
                                                        "totalPower": {
                                                            "type": "number"
                                                        },
                                                        "instantPower": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            },
                                            "bookingId": {
                                                "type": "string"
                                            },
                                            "tariff": {
                                                "$ref": "#/components/schemas/Sales Tariff"
                                            },
                                            "createdAt": {
                                                "type": "date"
                                            },
                                            "updatedAt": {
                                                "type": "date"
                                            },
                                            "downtime": {
                                                "type": "number"
                                            },
                                            "uptime": {
                                                "type": "number"
                                            },
                                            "address": {
                                                "type": "object",
                                                "properties": {
                                                    "street": {
                                                        "type": "string"
                                                    },
                                                    "number": {
                                                        "type": "string"
                                                    },
                                                    "zipCode": {
                                                        "type": "string"
                                                    },
                                                    "city": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    },
                                                    "country": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/activeSessionsMyChargers": {
            "get": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Endpoint to get active sessions of my chargers",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/summary": {
            "get": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Endpoint to get charging sessions summary (end session)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n {\n\n    \"charger\":{object charger},\n\n    \"ev\":{object ev or empty},\n\n    \"booking\":{object booking or empty}\n\n    \"chargingSession\":{object chargingSession}\n\n    \"contract\":{object contract or empty}\n\n    \"parking\":{empty}\n\n}"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/autoStop": {
            "patch": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Update charging session autoStop reason (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "query": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "autoStop": {
                                        "type": "object",
                                        "properties": {
                                            "uom": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/mqttFail": {
            "patch": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Endpoint to change status charging session on chargers evio when mqtt fail (Internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chargerType": {
                                        "type": "string"
                                    },
                                    "hasInfrastructure": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/myChargingSessions": {
            "get": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Get charging session given a date (Internal endpoint)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/invoiceId": {
            "patch": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Endpoint add invoiceId and invoice Status (Internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "invoiceId": {
                                        "type": "string"
                                    },
                                    "invoiceStatus": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargingSession/invoice": {
            "patch": {
                "tags": [
                    "Charging Session"
                ],
                "summary": "Endpoint change invoice Status (Internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "invoiceId": {
                                        "type": "string"
                                    },
                                    "invoiceStatus": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/hostIssues": {
            "post": {
                "tags": [
                    "Host Issues"
                ],
                "summary": "Endpoint to create a new host issue",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chargerId": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "hostId": {
                                        "type": "string"
                                    },
                                    "reasonCode": {
                                        "type": "string"
                                    },
                                    "reasonText": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Host Issues"
                ],
                "summary": "Endpoint to get all issues that were reported to me",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Host Issues"
                ],
                "summary": "Endpoint to Update the status of the issue",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/hostIssues/byCharger": {
            "get": {
                "tags": [
                    "Host Issues"
                ],
                "summary": "Endpoint to get all issues that were reported to me by charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "hwId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "chargerId",
                        "type": "string",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/hostIssues/byId": {
            "get": {
                "tags": [
                    "Host Issues"
                ],
                "summary": "Endpoint to get issue by Id",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/hostIssues/filter": {
            "get": {
                "tags": [
                    "Host Issues"
                ],
                "summary": "Endpoint to get all issues that were reported to me by charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "chargerId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "hwId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "issuedUserId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "reasonCode",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/hostIssues/reportedByMe": {
            "get": {
                "tags": [
                    "Host Issues"
                ],
                "summary": "Endpoint to get all issues reported by me",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/hostIssues/reportedByMe/byCharger": {
            "get": {
                "tags": [
                    "Host Issues"
                ],
                "summary": "Endpoint to get all issues reported by me by charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "hwId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "chargerId",
                        "type": "string",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/hostIssues/reportedByMe/filter": {
            "get": {
                "tags": [
                    "Host Issues"
                ],
                "summary": "Endpoint to get all issues that were reported to me by charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "chargerId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "hwId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "hostId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "reasonCode",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evioIssues": {
            "post": {
                "tags": [
                    "EVIO Issues"
                ],
                "summary": "Endpoint to create a new EVIO issue",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chargerId": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "reasonCode": {
                                        "type": "string"
                                    },
                                    "reasonText": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "EVIO Issues"
                ],
                "summary": "Endpoint to get all issues",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "EVIO Issues"
                ],
                "summary": "Endpoint to Update the status of the issue",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evioIssues/byCharger": {
            "get": {
                "tags": [
                    "EVIO Issues"
                ],
                "summary": "Endpoint to get all issues of a charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "hwId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "chargerId",
                        "type": "string",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evioIssues/byId": {
            "get": {
                "tags": [
                    "EVIO Issues"
                ],
                "summary": "Endpoint to get issue by Id",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evioIssues/filter": {
            "get": {
                "tags": [
                    "EVIO Issues"
                ],
                "summary": "Endpoint to get issue using filters",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "chargerId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "hwId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "issuedUserId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "reasonCode",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evioIssues/reportedByMe": {
            "get": {
                "tags": [
                    "EVIO Issues"
                ],
                "summary": "Endpoint to get all issues reported by me",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evioIssues/reportedByMe/byCharger": {
            "get": {
                "tags": [
                    "EVIO Issues"
                ],
                "summary": "Endpoint to get all issues reported by me by charger",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "hwId",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "chargerId",
                        "type": "string",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evioIssues/reportedByMe/filter": {
            "get": {
                "tags": [
                    "EVIO Issues"
                ],
                "summary": "Endpoint to get issue using filters",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "chargerId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "hwId",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "reasonCode",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "Only send the attribute if it is used in the search",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation": {
            "post": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "Endpoint to make communication with the charger stations/HMD",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "When the stop is given through the owner of the charger, in the situation of the stop when there is reason, (assest of the rating),\n\nIt is also necessary to send the completed _id and stopReason attributes, in the remaining existing cases it is not necessary to send the attributes\n\n_id -> is the _id of the session you want to end\n\n resonCode -> is the code for the reason you want to end\n\nrestonText -> is the text written by the user when the resonCode is \\'other\\'",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chargerId": {
                                        "type": "string",
                                        "example": "19080001"
                                    },
                                    "evId": {
                                        "type": "string"
                                    },
                                    "tariffId": {
                                        "type": "string"
                                    },
                                    "action": {
                                        "type": "string",
                                        "example": "Start/Stop"
                                    },
                                    "plugId": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "chargerType": {
                                        "type": "string",
                                        "example": "007"
                                    },
                                    "idTag": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "street": {
                                                "type": "string"
                                            },
                                            "number": {
                                                "type": "string"
                                            },
                                            "zipCode": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "fees": {
                                        "type": "object",
                                        "properties": {
                                            "IEC": {
                                                "type": "number"
                                            },
                                            "IVA": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "stopReason": {
                                        "type": "object",
                                        "properties": {
                                            "reasonCode": {
                                                "type": "string"
                                            },
                                            "reasonText": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/language/translation": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Endpoint to get all Languages",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Language"
                ],
                "summary": "Endpoint to create a Language",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Language"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Language"
                ],
                "summary": "Endpoint to add or edit a translation to a language",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Language"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Language"
                ],
                "summary": "Endpoint to delete a translation to a language",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "translations": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/public/language": {
            "delete": {
                "tags": [
                    "Language"
                ],
                "summary": "Endpoint to delete a language",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/public/language/checktranslation": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Endpoint to get language from language code",
                "parameters": [
                    {
                        "in": "query",
                        "name": "languageCode",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/evio_device/status": {
            "get": {
                "tags": [
                    "SonOff Client"
                ],
                "summary": "Endpoint to get status of a sonoff",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/evio_device/start": {
            "post": {
                "tags": [
                    "SonOff Client"
                ],
                "summary": "Endpoint to start the sonoff (turn on the sonoff)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "evId": {
                                        "type": "string"
                                    },
                                    "sessionPrice": {
                                        "type": "string"
                                    },
                                    "chargerId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    },
                                    "idTag": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/evio_device/stop": {
            "post": {
                "tags": [
                    "SonOff Client"
                ],
                "summary": "Endpoint to stop the sonoff (turn off the sonoff)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string",
                                        "example": "19080001"
                                    },
                                    "evId": {
                                        "type": "string"
                                    },
                                    "chargerId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/evio_device/config": {
            "post": {
                "tags": [
                    "SonOff Client"
                ],
                "summary": "Endpoint to configure sonoff",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string",
                                        "example": "19080001"
                                    },
                                    "period": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/monthlyBilling": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Endpoint to get monthly billing B2B",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "startDate": {
                                        "type": "string",
                                        "example": "2021-02-01"
                                    },
                                    "endDate": {
                                        "type": "string",
                                        "example": "2021-02-28"
                                    },
                                    "userId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_device/transactionFailed": {
            "post": {
                "tags": [
                    "SonOff Client"
                ],
                "summary": "Endpoint to cancel/stop charging session when start fail",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string",
                                        "example": "19080001"
                                    },
                                    "evId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string",
                                        "example": "19080001"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_device/addToList": {
            "post": {
                "tags": [
                    "SonOff Client"
                ],
                "summary": "Endpoint to add chargers to the list of existing subscribers. (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string",
                                        "example": "19080001"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/connectionstation/chargers": {
            "post": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "Endpoint to link with the search for evio and public chargers to make them appear on the map, which allows interaction with filters. Endpoint that is used when not logged in to the app",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lat",
                        "type": "string",
                        "description": "Latitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "type": "string",
                        "description": "Longitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "distance",
                        "type": "string",
                        "description": "Distance radius to search (In meters)",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filters"
                            }
                        }
                    },
                    "description": "Available Stations: (10 = Available; 20 = In Use; 30 = Booked)"
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/chargers": {
            "post": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "Endpoint to link with the search for evio and public chargers to make them appear on the map, which allows interaction with filters. Endpoint that is used when logged in to the app",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lat",
                        "type": "string",
                        "description": "Latitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "type": "string",
                        "description": "Longitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "distance",
                        "type": "string",
                        "description": "Distance radius to search (In meters)",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filters"
                            }
                        }
                    },
                    "description": "Available Stations: (10 = Available; 20 = In Use; 30 = Booked)"
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/connectionstation/chargerDetails": {
            "get": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "Get details about a charger when not loged",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "description": "Intended charger id",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "chargerType",
                        "type": "string",
                        "description": "Charger type from charger",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/chargerDetails": {
            "get": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "Get details about a charger when loged",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "description": "Intended charger id",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "chargerType",
                        "type": "string",
                        "description": "Charger type from charger",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/myActiveSessions": {
            "get": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "New endpoint to get my active sessions, EVIO Network and Public Network",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "totalPower": {
                                                "type": "number"
                                            },
                                            "estimatedPrice": {
                                                "type": "number"
                                            },
                                            "batteryCharged": {
                                                "type": "number"
                                            },
                                            "timeCharged": {
                                                "type": "number"
                                            },
                                            "CO2Saved": {
                                                "type": "number"
                                            },
                                            "stoppedByOwner": {
                                                "type": "boolean"
                                            },
                                            "counter": {
                                                "type": "number"
                                            },
                                            "_id": {
                                                "type": "string"
                                            },
                                            "hwId": {
                                                "type": "string"
                                            },
                                            "evId": {
                                                "$ref": "#/components/schemas/EVs"
                                            },
                                            "tariffId": {
                                                "type": "string"
                                            },
                                            "command": {
                                                "type": "string"
                                            },
                                            "chargerType": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "string"
                                            },
                                            "userId": {
                                                "type": "string"
                                            },
                                            "plugId": {
                                                "type": "string"
                                            },
                                            "idTag": {
                                                "type": "string"
                                            },
                                            "startDate": {
                                                "type": "date"
                                            },
                                            "parkingStartDate": {
                                                "type": "date"
                                            },
                                            "parkingStopDate": {
                                                "type": "date"
                                            },
                                            "readingPoints": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "readDate": {
                                                            "type": "date"
                                                        },
                                                        "totalPower": {
                                                            "type": "number"
                                                        },
                                                        "instantPower": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            },
                                            "bookingId": {
                                                "type": "string"
                                            },
                                            "tariff": {
                                                "$ref": "#/components/schemas/Sales Tariff"
                                            },
                                            "createdAt": {
                                                "type": "date"
                                            },
                                            "updatedAt": {
                                                "type": "date"
                                            },
                                            "downtime": {
                                                "type": "number"
                                            },
                                            "uptime": {
                                                "type": "number"
                                            },
                                            "address": {
                                                "type": "object",
                                                "properties": {
                                                    "street": {
                                                        "type": "string"
                                                    },
                                                    "number": {
                                                        "type": "string"
                                                    },
                                                    "zipCode": {
                                                        "type": "string"
                                                    },
                                                    "city": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    },
                                                    "country": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/activeSessionsMyChargers": {
            "get": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "New endpoint to get active sessions my chargers, EVIO Network and Public Network",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/summary": {
            "get": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "New endpoint to get charging session Summary, EVIO Network and Public Network",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "chargerType",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/hostIssues": {
            "post": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "New endpoint to report host issues",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chargerId": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "hostId": {
                                        "type": "string"
                                    },
                                    "reasonCode": {
                                        "type": "string"
                                    },
                                    "reasonText": {
                                        "type": "string"
                                    },
                                    "chargerType": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/getKPIs": {
            "get": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "New endpoint to get KPIs to Op Management (only for Op Management)",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "numberOfUsers": {
                                            "type": "number"
                                        },
                                        "numberOfChargers": {
                                            "type": "number"
                                        },
                                        "chargers": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Charger"
                                            }
                                        },
                                        "totalPower": {
                                            "type": "number"
                                        },
                                        "averageChargingTime": {
                                            "type": "number"
                                        },
                                        "totalNumberOfSessions": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/smsNotifications": {
            "post": {
                "tags": [
                    "SMS Notifications"
                ],
                "summary": "Endpoint to send invitation SMS to join a group (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mobile": {
                                        "type": "string"
                                    },
                                    "groupName": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/smsNotifications/activation": {
            "post": {
                "tags": [
                    "SMS Notifications"
                ],
                "summary": "Endpoint to send activation SMS (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mobile": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/smsNotifications/drivers": {
            "post": {
                "tags": [
                    "SMS Notifications"
                ],
                "summary": "Endpoint to send activation SMS when add to a pool driver (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "mobile": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/smsNotifications/MBReferenceSMS": {
            "post": {
                "tags": [
                    "SMS Notifications"
                ],
                "summary": "Endpoint to send MB reference by SMS (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internationalPrefix": {
                                        "type": "string"
                                    },
                                    "mobile": {
                                        "type": "string"
                                    },
                                    "MBReference": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/smsNotifications/sendSMS": {
            "post": {
                "tags": [
                    "SMS Notifications"
                ],
                "summary": "Endpoint to send invitation SMS to join a group (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    },
                                    "user": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/notifications/notification": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Endpoint to create a notification - check message configs on https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "notificationType": {
                                        "type": "string"
                                    },
                                    "isToSend": {
                                        "type": "boolean",
                                        "default": "true",
                                        "example": "true"
                                    },
                                    "sent": {
                                        "type": "boolean",
                                        "default": "false",
                                        "example": "false"
                                    },
                                    "message": {
                                        "type": "object",
                                        "properties": {
                                            "notification": {
                                                "type": "object",
                                                "properties": {
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "body": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "android": {
                                                "type": "object",
                                                "example": "AndroidConfig"
                                            },
                                            "apns": {
                                                "type": "object",
                                                "example": "ApnsConfig"
                                            },
                                            "webpush": {
                                                "type": "object",
                                                "example": "WebpushConfig"
                                            },
                                            "data": {
                                                "type": "object",
                                                "properties": {
                                                    "any": {
                                                        "type": "any",
                                                        "example": "any"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "sendTo": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/notifications/configureInterval": {
            "patch": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Endpoint to change cronjob interval (time spent before polling for new notifications again)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "interval": {
                                        "type": "string",
                                        "example": "Cronjob expression"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/salesTariff": {
            "post": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Create a new sales tariff",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "tariffType": {
                                        "type": "string"
                                    },
                                    "billingType": {
                                        "type": "string"
                                    },
                                    "tariff": {
                                        "type": "object",
                                        "properties": {
                                            "activationFee": {
                                                "type": "number"
                                            },
                                            "bookingAmount": {
                                                "type": "object",
                                                "properties": {
                                                    "uom": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "chargingAmount": {
                                                "type": "object",
                                                "properties": {
                                                    "uom": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "parkingDuringChargingAmount": {
                                                "type": "object",
                                                "properties": {
                                                    "uom": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "parkingAmount": {
                                                "type": "object",
                                                "properties": {
                                                    "uom": {
                                                        "type": "string",
                                                        "example": "s - seconds, min - minutes, h - hours"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "evioCommission": {
                                                "type": "object",
                                                "properties": {
                                                    "minAmount": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uom": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "transaction": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uom": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Get my sales tariffs",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Edit sales tariff",
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "tariffType": {
                                        "type": "string"
                                    },
                                    "billingType": {
                                        "type": "string"
                                    },
                                    "tariff": {
                                        "type": "object",
                                        "properties": {
                                            "activationFee": {
                                                "type": "number"
                                            },
                                            "bookingAmount": {
                                                "type": "object",
                                                "properties": {
                                                    "uom": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "chargingAmount": {
                                                "type": "object",
                                                "properties": {
                                                    "uom": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "parkingDuringChargingAmount": {
                                                "type": "object",
                                                "properties": {
                                                    "uom": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "parkingAmount": {
                                                "type": "object",
                                                "properties": {
                                                    "uom": {
                                                        "type": "string",
                                                        "example": "s - seconds, min - minutes, h - hours"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "evioCommission": {
                                                "type": "object",
                                                "properties": {
                                                    "minAmount": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uom": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    },
                                                    "transaction": {
                                                        "type": "object",
                                                        "properties": {
                                                            "uom": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Delte a sales tariff",
                "requestBody": {
                    "description": "_id - id of the sales tariff you want delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/salesTariff/byId": {
            "get": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Get sales tariff by id",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "required": true,
                        "description": "Id of the sales tariff"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/salesTariff/byUser": {
            "delete": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Delte all tariff of an user (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/mobie": {
            "post": {
                "tags": [
                    "Mobi.e"
                ],
                "summary": "Connecyion to mobi.e",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/chargingSchedule": {
            "post": {
                "tags": [
                    "Charging Schedule"
                ],
                "summary": "Create a new charging schedule",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Charging Schedule"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Charging Schedule"
                ],
                "summary": "Get all schedules of a particular user by userId",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Charging Schedule"
                ],
                "summary": "Update or change a schedule by id of schedule",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    },
                                    "evId": {
                                        "type": "string"
                                    },
                                    "scheduleStartDate": {
                                        "type": "date",
                                        "example": "2020-01-06 14:00"
                                    },
                                    "scheduleStopDate": {
                                        "type": "date",
                                        "example": "2020-01-06 14:00"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Charging Schedule"
                ],
                "summary": "Delete schedules by id of schedule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/generateApikey": {
            "post": {
                "tags": [
                    "API Keys"
                ],
                "summary": "Generate API Keys",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "clientType": {
                                        "type": "string"
                                    },
                                    "clientName": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/openChargeMap": {
            "get": {
                "tags": [
                    "Open Charge Map"
                ],
                "summary": "Endpoint to make request to Open Charge Map repository (Internal api for get charger for the map)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lat",
                        "type": "string",
                        "description": "Latitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "type": "string",
                        "description": "Longitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "distance",
                        "type": "string",
                        "description": "Distance radius to search (In KM)",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "plugs": {
                                        "type": "object",
                                        "properties": {
                                            "type": "object",
                                            "$elemMatch": {
                                                "type": "object",
                                                "properties": {
                                                    "status": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "number"
                                                        }
                                                    },
                                                    "$or": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "power": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "$lte": {
                                                                            "type": "number"
                                                                        }
                                                                    }
                                                                },
                                                                "power1": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "$gte": {
                                                                            "type": "number"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "connectorType": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "Where is power1, it is to be replaced by power when sending information"
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/questions": {
            "post": {
                "tags": [
                    "Questions"
                ],
                "summary": "Endpoint to create a new question",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "questionCode": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "default": true
                                    },
                                    "answers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "answer": {
                                                    "type": "string"
                                                },
                                                "active": {
                                                    "type": "boolean",
                                                    "default": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Endpoint to get questions. Adapted filter.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "active",
                        "type": "boolean",
                        "description": "Search for active or inactive",
                        "example": "true, false"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "description": "Search by Type of question.",
                        "example": "001, 002"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Questions"
                ],
                "summary": "Endpoint to update/edit a question",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "questionCode": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "answers": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "_id": {
                                                    "type": "string"
                                                },
                                                "answer": {
                                                    "type": "string"
                                                },
                                                "active": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Questions"
                ],
                "summary": "Endpoint to Delete a question (Put it inactive)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/questions": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Endpoint to get questions. Adapted filter.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "active",
                        "type": "boolean",
                        "description": "Search for active or inactive",
                        "example": "true, false"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "description": "Search by Type of question.",
                        "example": "001, 002"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/opManagement/authenticate": {
            "post": {
                "tags": [
                    "Operations Management"
                ],
                "summary": "Login",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "refreshtoken": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        },
                                        "imageContent": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "Enter your username"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Enter your password"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/favorites": {
            "get": {
                "tags": [
                    "Open Charge Map",
                    "Mobi.e"
                ],
                "summary": "Internal api to get chager favorites from public services like Open Charge Map, Mobi.e",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "baseId": {
                                        "type": "string",
                                        "example": "Id of the charger"
                                    },
                                    "hwId": {
                                        "type": "string",
                                        "example": "Serial number of charger"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/public/connectionstation/opManagement": {
            "post": {
                "tags": [
                    "Operations Management"
                ],
                "summary": "Endpoint to link with the search for evio and public chargers to make them appear on the map, which allows interaction with filters. Endpoint that is used when not logged in to the app (Only for Operations management)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lat",
                        "type": "string",
                        "description": "Latitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "type": "string",
                        "description": "Longitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "distance",
                        "type": "string",
                        "description": "Distance radius to search (In meters)",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filters"
                            }
                        }
                    },
                    "description": "Available Stations: (10 = Available; 20 = In Use; 30 = Booked)"
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/opManagement": {
            "post": {
                "tags": [
                    "Operations Management"
                ],
                "summary": "Endpoint to link with the search for evio and public chargers to make them appear on the map, which allows interaction with filters. Endpoint that is used when logged in to the app (Only for Operations management)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lat",
                        "type": "string",
                        "description": "Latitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "lng",
                        "type": "string",
                        "description": "Longitude",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "distance",
                        "type": "string",
                        "description": "Distance radius to search (In meters)",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filters"
                            }
                        }
                    },
                    "description": "Available Stations: (10 = Available; 20 = In Use; 30 = Booked)"
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/booking": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to create a new booking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "infrasctructure": {
                                        "type": "string"
                                    },
                                    "chargerId": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    },
                                    "evId": {
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "type": "date"
                                    },
                                    "stopDate": {
                                        "type": "date"
                                    },
                                    "bookingPrice": {
                                        "type": "object",
                                        "properties": {
                                            "uom": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "limitBookedTime": {
                                        "type": "number"
                                    },
                                    "canceledBeforeTime": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n \"Object\""
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to edit a booking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "type": "date"
                                    },
                                    "stopDate": {
                                        "type": "date"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n {\n\n    \"auth\": \"Boolean\",\n\n    \"code\": \"string\",\n\n    \"message\": \"string\" \n\n}"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to get a booking by user id (my bookings) and can use filters",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filters Booking"
                            }
                        }
                    },
                    "description": "Only send the attributes you want to search for. If filters are not used, nothing is sent in body"
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n \"Object\""
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to delete a booking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n {\n\n    \"auth\": \"Boolean\",\n\n    \"code\": \"string\",\n\n    \"message\": \"string\" \n\n}"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/booking/myChargers": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to get all bookings of my chargers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Filters Booking"
                            }
                        }
                    },
                    "description": "Only send the attributes you want to search for. If filters are not used, nothing is sent in body"
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n \"Object\""
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/booking/byCharger": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to get all bookings by charger (internal endpoint)",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/booking/cancel": {
            "patch": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to cancel a booking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "canceledReasonCode": {
                                        "type": "string"
                                    },
                                    "canceledReasonText": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n {\n\n    \"auth\": \"Boolean\",\n\n    \"code\": \"string\",\n\n    \"message\": \"string\" \n\n}"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/booking/close": {
            "patch": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to close booking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/booking/closeByPlug": {
            "patch": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to close booking by plugId (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "plugId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/booking/closeAutomatically": {
            "patch": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to close booking automatically",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/booking/myBookings": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get my bookings given a date(Internal endpoint)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/automaticBooking": {
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to create a new automatic booking (To be in standby until the plug is available)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "infrasctructure": {
                                        "type": "string"
                                    },
                                    "chargerId": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    },
                                    "evId": {
                                        "type": "string"
                                    },
                                    "bookingPrice": {
                                        "type": "object",
                                        "properties": {
                                            "uom": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "limitBookedTime": {
                                        "type": "number"
                                    },
                                    "canceledBeforeTime": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n \"Object\""
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to delete a automatic booking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n {\n\n    \"auth\": \"Boolean\",\n\n    \"code\": \"string\",\n\n    \"message\": \"string\" \n\n}"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to verify if existe automatic booking (internal endpoint)",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "plugId": {
                                        "type": "string"
                                    },
                                    "userId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "Only send the attributes you want to search for. If filters are not used, nothing is sent in body"
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n \"Array\""
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/automaticBooking/makeBooking": {
            "patch": {
                "tags": [
                    "Booking"
                ],
                "summary": "Endpoint to make a booking when plug are available (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n \"Boolean\""
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/notifymeHistory": {
            "post": {
                "tags": [
                    "Notify me"
                ],
                "summary": "Endpoint to send create an entry to notify the user",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "topic": {
                                        "type": "string"
                                    },
                                    "chargerId": {
                                        "type": "string"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Notify me"
                ],
                "summary": "Endpoint to prepare for sending notifications (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts": {
            "post": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to create a new contract",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "CEME": {
                                        "type": "string"
                                    },
                                    "imageCEME": {
                                        "type": "string"
                                    },
                                    "cards": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "idTag": {
                                                    "type": "string"
                                                },
                                                "imageCard": {
                                                    "type": "string"
                                                },
                                                "licensePlate": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "tariff": {
                                        "type": "object",
                                        "properties": {
                                            "planId": {
                                                "type": "string"
                                            },
                                            "power": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to edit a contract",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "The attributes name and ceme are to be sent mandatorily, if they are blank or null it will be saved like this in the database",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "CEME": {
                                        "type": "string"
                                    },
                                    "imageCEME": {
                                        "type": "string"
                                    },
                                    "cards": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "idTag": {
                                                    "type": "string"
                                                },
                                                "active": {
                                                    "type": "boolean",
                                                    "default": true
                                                },
                                                "imageCard": {
                                                    "type": "string"
                                                },
                                                "licensePlate": {
                                                    "type": "string"
                                                },
                                                "expirationDate": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to get all contracts of given user.",
                "parameters": [
                    {
                        "required": false,
                        "in": "query",
                        "name": "contractType",
                        "type": "string",
                        "description": "fleet/user"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to remove a contract, (Encript data and change active to false)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/byEv": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to get all contracts of given EV.",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "evId",
                        "type": "string",
                        "description": "Ev id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/idTag": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to check if a given idTag is valid (internal endpoint).",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "userId",
                        "type": "string",
                        "description": "User id"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "idTag",
                        "type": "string",
                        "description": "Tag id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/checkIdTag": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to check if given idTag belongs to a user - internal endpoint.",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "idTag",
                        "type": "string",
                        "description": "Tag id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/setDefault": {
            "patch": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to set a contract as default",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/checkIdTagRFIDMobiE": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to check idTag on token RFID on MobiE network",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "idTag",
                        "type": "string",
                        "description": "Tag id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/cancelRFID": {
            "patch": {
                "tags": [
                    "Contracts",
                    "New"
                ],
                "summary": "Endpoint to cancel physical card",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "contractId": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "reason": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/paymentMethod": {
            "patch": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to update payment method for all contracts",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "contractId": {
                                        "type": "string"
                                    },
                                    "paymentMethod": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/contract": {
            "post": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Public endpoint to create a new contract",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "street": {
                                                "type": "string"
                                            },
                                            "zipCode": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "nif": {
                                        "type": "string"
                                    },
                                    "mobile": {
                                        "type": "string"
                                    },
                                    "internationalPrefix": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/associatePhysicalCard": {
            "patch": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to associate physical card B2B users",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "idTagDec": {
                                        "type": "string"
                                    },
                                    "idTagHexa": {
                                        "type": "string"
                                    },
                                    "idTagHexaInv": {
                                        "type": "string"
                                    },
                                    "cardNumber": {
                                        "type": "string"
                                    },
                                    "contractId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/editAssociatePhysicalCard": {
            "patch": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint edit physical card when it is an associated card by the user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "idTagDec": {
                                        "type": "string"
                                    },
                                    "idTagHexa": {
                                        "type": "string"
                                    },
                                    "idTagHexaInv": {
                                        "type": "string"
                                    },
                                    "cardNumber": {
                                        "type": "string"
                                    },
                                    "contractId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/validateCard": {
            "patch": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Public endpoint to create a new contract",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "cardNumber": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/requestPhysicalCard": {
            "patch": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Endpoint to request physical Card",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "paymentMethod": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "street": {
                                                "type": "string"
                                            },
                                            "number": {
                                                "type": "string"
                                            },
                                            "zipCode": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/cemeTariff": {
            "post": {
                "tags": [
                    "CEME Tariff"
                ],
                "summary": "Endpoint to create a new CEME Tariff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "CEME": {
                                        "type": "string"
                                    },
                                    "imageCEME": {
                                        "type": "string"
                                    },
                                    "cards": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "imageCard": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "tariff": {
                                        "type": "object",
                                        "properties": {
                                            "planId": {
                                                "type": "string"
                                            },
                                            "power": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        },
                                        "default": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "CEME": {
                                            "type": "string"
                                        },
                                        "imageCEME": {
                                            "type": "string"
                                        },
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "imageCard": {
                                                        "type": "string"
                                                    },
                                                    "active": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        },
                                        "tariff": {
                                            "type": "object",
                                            "properties": {
                                                "planId": {
                                                    "type": "string"
                                                },
                                                "power": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "userId": {
                                            "type": "string"
                                        },
                                        "tariffInfo": {
                                            "type": "object",
                                            "properties": {
                                                "plan": {
                                                    "$ref": "#/components/schemas/Tariff CEME"
                                                },
                                                "schedule": {
                                                    "$ref": "#/components/schemas/Schedules CEME"
                                                },
                                                "tar": {
                                                    "$ref": "#/components/schemas/Tariff TAR"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "CEME Tariff"
                ],
                "summary": "Endpoint to get all CEME Tariff of given user.",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string"
                                            },
                                            "active": {
                                                "type": "boolean"
                                            },
                                            "default": {
                                                "type": "boolean"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "CEME": {
                                                "type": "string"
                                            },
                                            "imageCEME": {
                                                "type": "string"
                                            },
                                            "cards": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "imageCard": {
                                                            "type": "string"
                                                        },
                                                        "active": {
                                                            "type": "boolean"
                                                        }
                                                    }
                                                }
                                            },
                                            "tariff": {
                                                "type": "object",
                                                "properties": {
                                                    "planId": {
                                                        "type": "string"
                                                    },
                                                    "power": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "userId": {
                                                "type": "string"
                                            },
                                            "tariffInfo": {
                                                "type": "object",
                                                "properties": {
                                                    "plan": {
                                                        "$ref": "#/components/schemas/Tariff CEME"
                                                    },
                                                    "schedule": {
                                                        "$ref": "#/components/schemas/Schedules CEME"
                                                    },
                                                    "tar": {
                                                        "$ref": "#/components/schemas/Tariff TAR"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CEME Tariff"
                ],
                "summary": "Endpoint to edit a CEME Tariff",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        },
                                        "default": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "CEME": {
                                            "type": "string"
                                        },
                                        "imageCEME": {
                                            "type": "string"
                                        },
                                        "cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "imageCard": {
                                                        "type": "string"
                                                    },
                                                    "active": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        },
                                        "tariff": {
                                            "type": "object",
                                            "properties": {
                                                "planId": {
                                                    "type": "string"
                                                },
                                                "power": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "userId": {
                                            "type": "string"
                                        },
                                        "tariffInfo": {
                                            "type": "object",
                                            "properties": {
                                                "plan": {
                                                    "$ref": "#/components/schemas/Tariff CEME"
                                                },
                                                "schedule": {
                                                    "$ref": "#/components/schemas/Schedules CEME"
                                                },
                                                "tar": {
                                                    "$ref": "#/components/schemas/Tariff TAR"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "CEME": {
                                        "type": "string"
                                    },
                                    "imageCEME": {
                                        "type": "string"
                                    },
                                    "cards": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "imageCard": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CEME Tariff"
                ],
                "summary": "Endpoint to remove a CEME Tariff",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/cemeTariff/setDefault": {
            "patch": {
                "tags": [
                    "CEME Tariff"
                ],
                "summary": "Endpoint to make default CEME Tariff",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "_id": {
                                                "type": "string"
                                            },
                                            "active": {
                                                "type": "boolean"
                                            },
                                            "default": {
                                                "type": "boolean"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "CEME": {
                                                "type": "string"
                                            },
                                            "imageCEME": {
                                                "type": "string"
                                            },
                                            "cards": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "imageCard": {
                                                            "type": "string"
                                                        },
                                                        "active": {
                                                            "type": "boolean"
                                                        }
                                                    }
                                                }
                                            },
                                            "tariff": {
                                                "type": "object",
                                                "properties": {
                                                    "planId": {
                                                        "type": "string"
                                                    },
                                                    "power": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "userId": {
                                                "type": "string"
                                            },
                                            "tariffInfo": {
                                                "type": "object",
                                                "properties": {
                                                    "plan": {
                                                        "$ref": "#/components/schemas/Tariff CEME"
                                                    },
                                                    "schedule": {
                                                        "$ref": "#/components/schemas/Schedules CEME"
                                                    },
                                                    "tar": {
                                                        "$ref": "#/components/schemas/Tariff TAR"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/listCEME": {
            "post": {
                "tags": [
                    "List CEME"
                ],
                "summary": "Endpoint to create a new CEME Operator",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "CEME": {
                                        "type": "string"
                                    },
                                    "imageCEME": {
                                        "type": "string"
                                    },
                                    "imageCard": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "List CEME"
                ],
                "summary": "Endpoint to edit a CEME Operator",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "The attributes name and ceme are to be sent mandatorily, if they are blank or null it will be saved like this in the database",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "CEME": {
                                        "type": "string"
                                    },
                                    "imageCEME": {
                                        "type": "string"
                                    },
                                    "imageCard": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "List CEME"
                ],
                "summary": "Endpoint to get all CEME operators.",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "List CEME"
                ],
                "summary": "Endpoint to remove a CEME Operator",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/evio_box/start": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to start the evio_box, (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "evId": {
                                        "type": "string"
                                    },
                                    "sessionPrice": {
                                        "type": "string"
                                    },
                                    "chargerId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    },
                                    "idTag": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/evio_box/stop": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to stop the evio_box, (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "evId": {
                                        "type": "string"
                                    },
                                    "chargerId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/transactionFailed": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to cancel/stop charging session when start fail",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "evId": {
                                        "type": "string"
                                    },
                                    "plugId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/wiFiConfig": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to config wifi on EVIO BOX",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "ssid": {
                                        "type": "string"
                                    },
                                    "pass": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/mqttConfig": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to config mqtt on EVIO BOX",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "ip": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "string"
                                    },
                                    "user": {
                                        "type": "string"
                                    },
                                    "pass": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/addToList": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to add a new evio box to a heart beat, (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/autoTurnoff": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to config Behavior when current < threshold 500mA",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "'0' - Plug​ keeps turned on when current < 500 mA, '1'- Plug turns off when current < 500 mA"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/keepCharging": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to config Behavior when connection to WiFi / MQTT fails",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "'0' - Plug turns off when WiFi/MQTT connections fails, '1'- Plug keeps turned on when WiFi/MQTT​ connections fails"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/fota": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to update firmware EVIO BOX",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "userId": {
                                            "type": "string"
                                        },
                                        "sessionId": {
                                            "type": "string"
                                        },
                                        "amount": {
                                            "type": "object",
                                            "properties": {
                                                "currency": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "date"
                                        },
                                        "updatedAt": {
                                            "type": "date"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "evio_qa_v1.2.bin"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/telePeriod": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to change tele period of the EVIO BOX",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "period": {
                                            "type": "string",
                                            "example": "15, value in seconds (s)"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/heartbeatPeriod": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to change heartbeat period of the EVIO BOX",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payments"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "period": {
                                            "type": "string",
                                            "example": "15, value in seconds (s)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/loadState": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to set which state is loaded on device startup or WiFi/MQTT (re)connection.",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Payments"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/factoryReset": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to factory reset de EVIO BOX.",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "hwId": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/restart": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to restart de EVIO BOX",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "hwId": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evio_box/definitions": {
            "get": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to get definitions of the EVIO BOX",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "hwId",
                        "type": "string",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/evio_box/config": {
            "post": {
                "tags": [
                    "EVIO BOX"
                ],
                "summary": "Endpoint to config EVIO BOX. (To use this endpoint you have to use the path '/api/private/connectionstation' with the settings below)",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "The configuration attribute will send information about what you want to configure (perido, wifi, mqtt). \n\n if period: you have to send the period attribute filled in seconds \n\n if wifi: the wifi object must be sent, filled in with the network name and password \n\n if mqtt: the mqtt object filled with the ip, port, user and password must be sent",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "action": {
                                        "type": "string",
                                        "example": "config"
                                    },
                                    "configuration": {
                                        "type": "string",
                                        "example": "period, wifi, mqtt"
                                    },
                                    "period": {
                                        "type": "string",
                                        "example": "15, value in seconds (s)"
                                    },
                                    "wifi": {
                                        "type": "object",
                                        "properties": {
                                            "ssid": {
                                                "type": "string"
                                            },
                                            "pass": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "mqtt": {
                                        "type": "object",
                                        "properties": {
                                            "ip": {
                                                "type": "string"
                                            },
                                            "port": {
                                                "type": "string"
                                            },
                                            "user": {
                                                "type": "string"
                                            },
                                            "pass": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/payments": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Endpoint to create a new payment (Internal endpoint call when stop a session)",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "userId": {
                                            "type": "string"
                                        },
                                        "sessionId": {
                                            "type": "string"
                                        },
                                        "amount": {
                                            "type": "object",
                                            "properties": {
                                                "currency": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "date"
                                        },
                                        "updatedAt": {
                                            "type": "date"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string"
                                    },
                                    "sessionId": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "object",
                                        "properties": {
                                            "currency": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Payments"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string",
                        "description": "The query can be created through the request frontend"
                    }
                ],
                "summary": "Endpoint to get payments",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Payments"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/payments/byId": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Endpoint to get payments by id",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payments"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/payments/byUser": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Endpoint to get payments by User, (Filters can be made through the query)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string",
                        "description": "The query can be created through the request frontend"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Payments"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/payments/pendingPayments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Endpoint to get pending payments (Validate start session)",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Payments"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/payments/validatePaymentConditions": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Endpoint to validate payment conditions before start session (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string"
                                    },
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "hwId": {
                                                "type": "string"
                                            },
                                            "plugId": {
                                                "type": "string"
                                            },
                                            "evId": {
                                                "type": "string"
                                            },
                                            "tariffId": {
                                                "type": "string"
                                            },
                                            "chargerType": {
                                                "type": "string"
                                            },
                                            "fees": {
                                                "type": "object",
                                                "properties": {
                                                    "IEC": {
                                                        "type": "number"
                                                    },
                                                    "IVA": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "tariff": {
                                                "$ref": "#/components/schemas/Sales Tariff"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "paymentMethod": {
                                            "type": "string",
                                            "example": "wallet, card"
                                        },
                                        "paymentMethodId": {
                                            "type": "string"
                                        },
                                        "walletAmount": {
                                            "type": "number"
                                        },
                                        "reservedAmount": {
                                            "type": "number"
                                        },
                                        "confirmationAmount": {
                                            "type": "number"
                                        },
                                        "userIdWillPay": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "redirect": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/payments/monthly": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Endpoint to create a new payment (Monthly - MobiE)",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payments"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string"
                                    },
                                    "chargerType": {
                                        "type": "string"
                                    },
                                    "paymentMethod": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "object",
                                        "properties": {
                                            "currency": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/qrCode": {
            "post": {
                "tags": [
                    "QR Code"
                ],
                "summary": "Endpoit to Create Qr Code id",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "qrCode": {
                                        "type": "object",
                                        "properties": {
                                            "hwId": {
                                                "type": "string"
                                            },
                                            "plugId": {
                                                "type": "string"
                                            },
                                            "chargerType": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "QR Code"
                ],
                "summary": "Endpoint to get qrCodeId validated",
                "parameters": [
                    {
                        "in": "query",
                        "name": "qrCodeId",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/appVersions": {
            "post": {
                "tags": [
                    "APP Version"
                ],
                "summary": "Endpoit to save app version android",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "APP Version"
                ],
                "summary": "Endpoint to get versions android",
                "parameters": [
                    {
                        "in": "query",
                        "name": "version",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "APP Version"
                ],
                "summary": "Endpoint to delete a versions android",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/insights": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Endpoint to get insights of on user",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n If any of the components do not exist, they will not be sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Insights"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/insights/backOffice": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Endpoint to get insights to web client",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "insights": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "session": {
                                                        "$ref": "#/components/schemas/Charging session"
                                                    },
                                                    "charger": {
                                                        "$ref": "#/components/schemas/Charger"
                                                    },
                                                    "user": {
                                                        "$ref": "#/components/schemas/User"
                                                    },
                                                    "ev": {
                                                        "$ref": "#/components/schemas/EVs"
                                                    },
                                                    "contract": {
                                                        "$ref": "#/components/schemas/Contracts"
                                                    }
                                                }
                                            }
                                        },
                                        "myChargers": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Charger"
                                            }
                                        },
                                        "myEvs": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EVs"
                                            }
                                        },
                                        "myInfrastructure": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Infrastructure"
                                            }
                                        },
                                        "myContracts": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Contracts"
                                            }
                                        },
                                        "evsIOwn": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EVs"
                                            }
                                        },
                                        "listEVsMyClients": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EVs"
                                            }
                                        },
                                        "fleetsMyClients": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Fleets"
                                            }
                                        },
                                        "myFleets": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Fleets"
                                            }
                                        },
                                        "myUser": {
                                            "type": "object",
                                            "properties": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/insights_v2": {
            "get": {
                "tags": [
                    "Statistics V2",
                    "New"
                ],
                "summary": "Endpoint to get insights of on user",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n If any of the components do not exist, they will not be sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Insights V2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/insights_v2/byEV": {
            "get": {
                "tags": [
                    "Statistics V2",
                    "New"
                ],
                "summary": "Endpoint to get insights of on user by EV",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "evId",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "driverId",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n If any of the components do not exist, they will not be sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "number"
                                        },
                                        "totalChargingTime": {
                                            "type": "number"
                                        },
                                        "totalCO2Saved": {
                                            "type": "number"
                                        },
                                        "totalSpend": {
                                            "type": "number"
                                        },
                                        "totalEnergy": {
                                            "type": "number"
                                        },
                                        "averageChargingTimeSession": {
                                            "type": "number"
                                        },
                                        "averageEnergyChargedSession": {
                                            "type": "number"
                                        },
                                        "evId": {
                                            "type": "string"
                                        },
                                        "ev": {
                                            "$ref": "#/components/schemas/EVs"
                                        },
                                        "mostUsedCharger": {
                                            "type": "string"
                                        },
                                        "insightsByDate": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "startDate": {
                                                        "type": "date"
                                                    },
                                                    "totalPower": {
                                                        "type": "number"
                                                    },
                                                    "timeCharged": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/insights_v2/byCharger": {
            "get": {
                "tags": [
                    "Statistics V2",
                    "New"
                ],
                "summary": "Endpoint to get insights of on user by Charger",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "hwId",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n If any of the components do not exist, they will not be sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "sessions": {
                                            "type": "number"
                                        },
                                        "totalChargingTime": {
                                            "type": "number"
                                        },
                                        "totalCO2Saved": {
                                            "type": "number"
                                        },
                                        "income": {
                                            "type": "number"
                                        },
                                        "totalEnergy": {
                                            "type": "number"
                                        },
                                        "averageChargingTimeSession": {
                                            "type": "number"
                                        },
                                        "averageEnergyChargedSession": {
                                            "type": "number"
                                        },
                                        "mostUsedPlug": {
                                            "type": "string"
                                        },
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "insightsByDate": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "startDate": {
                                                        "type": "date"
                                                    },
                                                    "totalPower": {
                                                        "type": "number"
                                                    },
                                                    "timeCharged": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        },
                                        "charger": {
                                            "$ref": "#/components/schemas/Charger"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/history": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Endpoint to get history of on user",
                "parameters": [
                    {
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n If any of the components do not exist, they will not be sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/History"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/history_v2": {
            "get": {
                "tags": [
                    "Statistics V2",
                    "New"
                ],
                "summary": "Endpoint to get history of on user",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "example": "EVS/CHARGERS"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "fleet": {
                                    "type": "string"
                                },
                                "evId": {
                                    "type": "string"
                                },
                                "network": {
                                    "type": "string"
                                },
                                "driverId": {
                                    "type": "string"
                                },
                                "groupDriverId": {
                                    "type": "string"
                                },
                                "infrastructure": {
                                    "type": "string"
                                },
                                "hwId": {
                                    "type": "string"
                                },
                                "csUserId": {
                                    "type": "string"
                                },
                                "csGroupId": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n If any of the components do not exist, they will not be sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/History V2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/history_v2/byEV": {
            "get": {
                "tags": [
                    "Statistics V2",
                    "New"
                ],
                "summary": "Endpoint to get session by an EV",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "evId",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n If any of the components do not exist, they will not be sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "type": "date"
                                        },
                                        "stopDate": {
                                            "type": "date"
                                        },
                                        "network": {
                                            "type": "string"
                                        },
                                        "timeCharged": {
                                            "type": "number"
                                        },
                                        "totalPrice": {
                                            "type": "object",
                                            "properties": {
                                                "excl_vat": {
                                                    "type": "number"
                                                },
                                                "incl_vat": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "charger": {
                                            "type": "object",
                                            "properties": {
                                                "chargerType": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "object",
                                                    "properties": {
                                                        "street": {
                                                            "type": "number"
                                                        },
                                                        "zipCode": {
                                                            "type": "number"
                                                        },
                                                        "city": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/reports": {
            "get": {
                "tags": [
                    "Statistics V2",
                    "New"
                ],
                "summary": "Endpoint to get reports",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "example": "EVS/CHARGERS"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "groupBy",
                        "type": "string",
                        "example": "BYNETWORK/BYUSER/BYEV/BYFLEET/CHARGER/INFRASTRUCTURE"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n If any of the components do not exist, they will not be sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reports"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evsdb/brands": {
            "get": {
                "tags": [
                    "EV Database"
                ],
                "summary": "Get the available ev brands",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {},
                                    "required": []
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evsdb/models": {
            "get": {
                "tags": [
                    "EV Database"
                ],
                "summary": "Get the available models for a brand",
                "parameters": [
                    {
                        "in": "query",
                        "name": "brand",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {},
                                    "required": []
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evsdb/versions": {
            "get": {
                "tags": [
                    "EV Database"
                ],
                "summary": "Get the available versions for a brand and model",
                "parameters": [
                    {
                        "in": "query",
                        "name": "brand",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "model",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "brand": {
                                                "type": "string"
                                            },
                                            "model": {
                                                "type": "string"
                                            },
                                            "version": {
                                                "type": "string"
                                            },
                                            "evType": {
                                                "type": "string"
                                            },
                                            "dateFrom": {
                                                "type": "string"
                                            },
                                            "dateTo": {
                                                "type": "string"
                                            },
                                            "plugs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "plugType": {
                                                            "type": "string"
                                                        },
                                                        "plugPower": {
                                                            "type": "number"
                                                        },
                                                        "plugPowerAux": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "plugPower": {
                                                                        "type": "number"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "imageContent": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/schedulesCEME": {
            "post": {
                "tags": [
                    "Schedules CEME"
                ],
                "summary": "Endpoit to create a new schedules of CEME",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Schedules CEME"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Schedules CEME"
                ],
                "summary": "Endpoit to edit schedules of CEME",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Schedules CEME"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Schedules CEME"
                ],
                "summary": "Endpoit to delete a schedule of CEME",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Schedules CEME"
                ],
                "summary": "Endpoit to get a schedule of CEME",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "description": "A query can be created by the front end."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/tariffCEME": {
            "post": {
                "tags": [
                    "Tariff CEME"
                ],
                "summary": "Endpoit to create a new tariff of CEME",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tariff CEME"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Tariff CEME"
                ],
                "summary": "Endpoit to edit a Tariff of CEME",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tariff CEME"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tariff CEME"
                ],
                "summary": "Endpoit to delete an tariff of CEME",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Tariff CEME"
                ],
                "summary": "Endpoit to get a Tariff of CEME",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "description": "A query can be created by the front end."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/tariffCEME/CEME": {
            "get": {
                "tags": [
                    "Tariff CEME"
                ],
                "summary": "Endpoit to get a Tariff of CEME by CEME",
                "parameters": [
                    {
                        "in": "query",
                        "name": "CEME",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/tariffCEME/byId": {
            "get": {
                "tags": [
                    "Tariff CEME"
                ],
                "summary": "Endpoit to get a Tariff of CEME by ID",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/tariffsOPC": {
            "post": {
                "tags": [
                    "Tariff OPC"
                ],
                "summary": "Endpoit to create a new tariff of OPC",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tariff OPC"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Tariff OPC"
                ],
                "summary": "Endpoit to get a Tariff of OPC",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "type": "string",
                        "description": "A query can be created by the front end."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/config/appVersions": {
            "post": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to create app version in the database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to get an app version in the database",
                "parameters": [
                    {
                        "in": "query",
                        "name": "version",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "version": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to delete app version in the database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "version": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/config/mailNotification": {
            "post": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to create the mail notifications configurations in the database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "smtp_host": {
                                        "type": "string"
                                    },
                                    "smtp_port": {
                                        "type": "number"
                                    },
                                    "mail_auth_user": {
                                        "type": "string"
                                    },
                                    "mail_auth_pass": {
                                        "type": "string"
                                    },
                                    "mailList": {
                                        "type": "array"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to get the mail notifications configurations in the database",
                "parameters": {},
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "smtp_host": {
                                            "type": "string"
                                        },
                                        "smtp_port": {
                                            "type": "number"
                                        },
                                        "mail_auth_user": {
                                            "type": "string"
                                        },
                                        "mail_auth_pass": {
                                            "type": "string"
                                        },
                                        "mailList": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to delete the mail notifications configurations in the database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/config/openChargeMap": {
            "post": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to create the OCM configurations in the database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hostOCM": {
                                        "type": "string"
                                    },
                                    "listCountryCodes": {
                                        "type": "array"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to get the OCM configurations in the database",
                "parameters": {},
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hostOCM": {
                                            "type": "string"
                                        },
                                        "listCountryCodes": {
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to delete the OCM configurations in the database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/connectionstation/landingPage": {
            "get": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "Endpoint to check if you need to update the app and to redirect to a specific page",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "needUpdate": {
                                            "type": "boolean"
                                        },
                                        "language": {
                                            "type": "object",
                                            "properties": {
                                                "auth": {
                                                    "type": "boolean"
                                                },
                                                "translationHash": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "userAccount": {
                                            "type": "object",
                                            "example": "Object type user"
                                        },
                                        "evs": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": "Object type evs"
                                            }
                                        },
                                        "contracts": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": "Object type contract"
                                            }
                                        },
                                        "myActiveSessions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": "Object type sessions"
                                            }
                                        },
                                        "myBookings": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": "Object type Booking"
                                            }
                                        },
                                        "messages": {
                                            "type": "object",
                                            "properties": {
                                                "warnings": {
                                                    "type": "object",
                                                    "properties": {
                                                        "warningActive": {
                                                            "type": "boolean"
                                                        },
                                                        "warningsMessage": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "_id": {
                                                                        "type": "string"
                                                                    },
                                                                    "active": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "stop": {
                                                    "type": "object",
                                                    "properties": {
                                                        "stopActive": {
                                                            "type": "boolean"
                                                        },
                                                        "stopMessage": {
                                                            "type": "object",
                                                            "properties": {
                                                                "_id": {
                                                                    "type": "string"
                                                                },
                                                                "active": {
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                },
                                                                "startDateStopMessage": {
                                                                    "type": "date"
                                                                },
                                                                "endDateStopMessage": {
                                                                    "type": "date"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "infoActive": {
                                                            "type": "boolean"
                                                        },
                                                        "infoMessage": {
                                                            "type": "object",
                                                            "properties": {
                                                                "_id": {
                                                                    "type": "string"
                                                                },
                                                                "active": {
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "infoMessage": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "title": {
                                                                                "type": "string"
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            },
                                                                            "image": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "landindPage": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/public/connectionstation/landingPage": {
            "get": {
                "tags": [
                    "Connection Station"
                ],
                "summary": "Endpoint to check if you need to update the app and to redirect to a specific page",
                "parameters": [
                    {
                        "in": "query",
                        "name": "languageCode",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "needUpdate": {
                                            "type": "boolean"
                                        },
                                        "language": {
                                            "type": "object",
                                            "properties": {
                                                "auth": {
                                                    "type": "boolean"
                                                },
                                                "translationHash": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "messages": {
                                            "type": "object",
                                            "properties": {
                                                "warnings": {
                                                    "type": "object",
                                                    "properties": {
                                                        "warningActive": {
                                                            "type": "boolean"
                                                        },
                                                        "warningsMessage": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "_id": {
                                                                        "type": "string"
                                                                    },
                                                                    "active": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "stop": {
                                                    "type": "object",
                                                    "properties": {
                                                        "stopActive": {
                                                            "type": "boolean"
                                                        },
                                                        "stopMessage": {
                                                            "type": "object",
                                                            "properties": {
                                                                "_id": {
                                                                    "type": "string"
                                                                },
                                                                "active": {
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "message": {
                                                                    "type": "string"
                                                                },
                                                                "startDateStopMessage": {
                                                                    "type": "date"
                                                                },
                                                                "endDateStopMessage": {
                                                                    "type": "date"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "infoActive": {
                                                            "type": "boolean"
                                                        },
                                                        "infoMessage": {
                                                            "type": "object",
                                                            "properties": {
                                                                "_id": {
                                                                    "type": "string"
                                                                },
                                                                "active": {
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "infoMessage": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "title": {
                                                                                "type": "string"
                                                                            },
                                                                            "message": {
                                                                                "type": "string"
                                                                            },
                                                                            "image": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "landindPage": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/versionCompatibility": {
            "post": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoit to create a new Version Compatibility",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Version Compatibility"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Version Compatibility"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoit to get Version Compatibility (internal endpoit)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "iOSVersion",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "androidVersion",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "operationsManagementVersion",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "webClientVersion",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "backendVersion",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/notificationsSettings": {
            "post": {
                "tags": [
                    "Notifications Settings"
                ],
                "summary": "Endpoit to create a new Notification Definition for an user (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string"
                                    },
                                    "clientType": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notifications Settings"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Notifications Settings"
                ],
                "summary": "Endpoit to get user notifications settings",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notifications Settings"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Notifications Settings"
                ],
                "summary": "Endpoit to remove a Notification Definition when user is removed (internal endpoint)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Notifications Settings"
                ],
                "summary": "Endpoit to get user notifications settings",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notifications Settings"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notifications Settings"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/history/myChargers": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Endpoint to get history of on user",
                "parameters": [
                    {
                        "required": true,
                        "in": "query",
                        "name": "startDate",
                        "type": "date"
                    },
                    {
                        "required": true,
                        "in": "query",
                        "name": "endDate",
                        "type": "date"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request \n\n If any of the components do not exist, they will not be sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/History My Chargers"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/config/fees": {
            "post": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to create fees in the database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "countryCode": {
                                        "type": "string"
                                    },
                                    "fees": {
                                        "type": "object",
                                        "properties": {
                                            "IEC": {
                                                "type": "number"
                                            },
                                            "TAC": {
                                                "type": "number"
                                            },
                                            "IVA": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to get fees for a country",
                "parameters": [
                    {
                        "in": "query",
                        "name": "countryCode",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "IEC": {
                                            "type": "number"
                                        },
                                        "TAC": {
                                            "type": "number"
                                        },
                                        "IVA": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/billingProfile": {
            "post": {
                "tags": [
                    "Billing Profile"
                ],
                "summary": "Endpoint to create an empty billing profile",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string"
                                    },
                                    "nif": {
                                        "type": "string"
                                    },
                                    "billingName": {
                                        "type": "string"
                                    },
                                    "billingAddress": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string"
                                            },
                                            "postCode": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            },
                                            "countryCode": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Billing Profile"
                ],
                "summary": "Endpoint to retrieve the billing profile of a user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "nif": {
                                            "type": "string"
                                        },
                                        "billingName": {
                                            "type": "string"
                                        },
                                        "billingAddress": {
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "string"
                                                },
                                                "postCode": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "type": "string"
                                                },
                                                "countryCode": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "userId",
                        "schema": {
                            "type": "string"
                        },
                        "description": "User id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Billing Profile"
                ],
                "summary": "Endpoint to update the billing profile of a user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "userId": {
                                            "type": "string"
                                        },
                                        "nif": {
                                            "type": "string"
                                        },
                                        "billingName": {
                                            "type": "string"
                                        },
                                        "billingAddress": {
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "string"
                                                },
                                                "postCode": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "type": "string"
                                                },
                                                "countryCode": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "required": true
                                    },
                                    "nif": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "billingName": {
                                        "type": "string"
                                    },
                                    "billingAddress": {
                                        "type": "object",
                                        "properties": {
                                            "address": {
                                                "type": "string"
                                            },
                                            "postCode": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            },
                                            "countryCode": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Billing Profile"
                ],
                "summary": "Endpoint to delete the billing profile of a user",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Billing Profile id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/billingProfile/monthlyBilling": {
            "patch": {
                "tags": [
                    "Billing Profile",
                    "New"
                ],
                "summary": "Endpoint to update the monthly billing in billing profile of a user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Billing Profile"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "monthlyBilling": {
                                        "type": "boolean",
                                        "required": true
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Billing Profile",
                    "New"
                ],
                "summary": "Endpoint to get all monthly billing in true state (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Billing Profile"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/support": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Endpoint to send support requests",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "mobile": {
                                        "type": "string"
                                    },
                                    "subject": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/tariffTar": {
            "post": {
                "tags": [
                    "Tariff TAR"
                ],
                "summary": "Endpoint to create a TAR Tariff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tariff TAR"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tariff TAR"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Tariff TAR"
                ],
                "summary": "Endpoint to get TAR Tariff",
                "parameters": [
                    {
                        "in": "query",
                        "name": "_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "You can create the desired query by sending information to the query by parameters"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tariff TAR"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Tariff TAR"
                ],
                "summary": "Endpoint to edit a TAR Tariff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "tariffType": {
                                        "type": "string"
                                    },
                                    "tariff": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "uom": {
                                                    "type": "string"
                                                },
                                                "tariffType": {
                                                    "type": "string"
                                                },
                                                "voltageLevel": {
                                                    "type": "string",
                                                    "example": "BTN/BTE/MT"
                                                },
                                                "price": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tariff TAR"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsAdyen/makePayment": {
            "post": {
                "tags": [
                    "Payment Adyen"
                ],
                "summary": "Endpoit to create a new payment with Adyen",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "paymentId": {
                                        "type": "string"
                                    },
                                    "sessionId": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "number"
                                            },
                                            "currency": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "paymentMethod": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "scheme"
                                            },
                                            "encryptedCardNumber": {
                                                "type": "string",
                                                "example": "Send when payment is made with an unsaved card"
                                            },
                                            "encryptedExpiryMonth": {
                                                "type": "string",
                                                "example": "Send when payment is made with an unsaved card"
                                            },
                                            "encryptedExpiryYear": {
                                                "type": "string",
                                                "example": "Send when payment is made with an unsaved card"
                                            },
                                            "encryptedSecurityCode": {
                                                "type": "string",
                                                "example": "Send when payment is made with an unsaved card"
                                            },
                                            "holderName": {
                                                "type": "string",
                                                "example": "Send when payment is made with an unsaved card"
                                            },
                                            "storedPaymentMethodId": {
                                                "type": "string",
                                                "example": "Send when payment is made with a previously saved card, (recurringDetailReference)"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "pspReference": {
                                            "type": "string"
                                        },
                                        "resultCode": {
                                            "type": "string"
                                        },
                                        "amount": {
                                            "type": "object",
                                            "properties": {
                                                "value": {
                                                    "type": "number"
                                                },
                                                "currency": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "merchantReference": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsAdyen/addCard": {
            "post": {
                "tags": [
                    "Payment Adyen"
                ],
                "summary": "Endpoit to add card to Adyen",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "paymentMethod": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "scheme"
                                            },
                                            "encryptedCardNumber": {
                                                "type": "string"
                                            },
                                            "encryptedExpiryMonth": {
                                                "type": "string"
                                            },
                                            "encryptedExpiryYear": {
                                                "type": "string"
                                            },
                                            "encryptedSecurityCode": {
                                                "type": "string"
                                            },
                                            "holderName": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "brand": {
                                                "type": "string"
                                            },
                                            "expiryMonth": {
                                                "type": "string"
                                            },
                                            "expiryYear": {
                                                "type": "string"
                                            },
                                            "holderName": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "lastFour": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "supportedShopperInteractions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "defaultPaymentMethod": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsAdyen/removeCard": {
            "delete": {
                "tags": [
                    "Payment Adyen"
                ],
                "summary": "Endpoit to remove card from Adyen",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "recurringDetailReference": {
                                        "type": "string",
                                        "example": "refers to the id that comes in get request"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "brand": {
                                                "type": "string"
                                            },
                                            "expiryMonth": {
                                                "type": "string"
                                            },
                                            "expiryYear": {
                                                "type": "string"
                                            },
                                            "holderName": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "lastFour": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "supportedShopperInteractions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "defaultPaymentMethod": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsAdyen/editCard": {
            "patch": {
                "tags": [
                    "Payment Adyen"
                ],
                "summary": "Endpoit to edit a card from Adyen",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "paymentMethod": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "scheme"
                                            },
                                            "encryptedExpiryMonth": {
                                                "type": "string"
                                            },
                                            "encryptedExpiryYear": {
                                                "type": "string"
                                            },
                                            "holderName": {
                                                "type": "string"
                                            },
                                            "storedPaymentMethodId": {
                                                "type": "string",
                                                "example": "refers to the id that comes in get request"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "brand": {
                                                "type": "string"
                                            },
                                            "expiryMonth": {
                                                "type": "string"
                                            },
                                            "expiryYear": {
                                                "type": "string"
                                            },
                                            "holderName": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "lastFour": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "supportedShopperInteractions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "defaultPaymentMethod": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsAdyen/makeDefaultPaymentMethod": {
            "put": {
                "tags": [
                    "Payment Adyen"
                ],
                "summary": "Endpoit to define default card",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "recurringDetailReference": {
                                        "type": "string",
                                        "example": "refers to the id that comes in get request"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "brand": {
                                                "type": "string"
                                            },
                                            "expiryMonth": {
                                                "type": "string"
                                            },
                                            "expiryYear": {
                                                "type": "string"
                                            },
                                            "holderName": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "lastFour": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "supportedShopperInteractions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "defaultPaymentMethod": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsAdyen/addBalanceCard": {
            "post": {
                "tags": [
                    "Payment Adyen"
                ],
                "summary": "Endpoit to add balance to wallet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "number"
                                            },
                                            "currency": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "paymentMethod": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "scheme"
                                            },
                                            "encryptedCardNumber": {
                                                "type": "string",
                                                "example": "Send when payment is made with an unsaved card"
                                            },
                                            "encryptedExpiryMonth": {
                                                "type": "string",
                                                "example": "Send when payment is made with an unsaved card"
                                            },
                                            "encryptedExpiryYear": {
                                                "type": "string",
                                                "example": "Send when payment is made with an unsaved card"
                                            },
                                            "encryptedSecurityCode": {
                                                "type": "string",
                                                "example": "Send when payment is made with an unsaved card"
                                            },
                                            "holderName": {
                                                "type": "string",
                                                "example": "Send when payment is made with an unsaved card"
                                            },
                                            "storedPaymentMethodId": {
                                                "type": "string",
                                                "example": "Send when payment is made with a previously saved card, (recurringDetailReference)"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transactions"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsAdyen/paymentMethods": {
            "get": {
                "tags": [
                    "Payment Adyen"
                ],
                "summary": "Endpoit to Get paymentMethods by user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "brand": {
                                                "type": "string"
                                            },
                                            "expiryMonth": {
                                                "type": "string"
                                            },
                                            "expiryYear": {
                                                "type": "string"
                                            },
                                            "holderName": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "lastFour": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "supportedShopperInteractions": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "defaultPaymentMethod": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsAdyen/validateCard": {
            "get": {
                "tags": [
                    "Payment Adyen"
                ],
                "summary": "Endpoit to Verify if card valid",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "paymentMethod": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "scheme"
                                            },
                                            "encryptedCardNumber": {
                                                "type": "string"
                                            },
                                            "encryptedExpiryMonth": {
                                                "type": "string"
                                            },
                                            "encryptedExpiryYear": {
                                                "type": "string"
                                            },
                                            "encryptedSecurityCode": {
                                                "type": "string"
                                            },
                                            "holderName": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "example": "true/false"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsAdyen/validatePaymentMethods": {
            "get": {
                "tags": [
                    "Payment Adyen"
                ],
                "summary": "Endpoit to Validate paymentMethods adyen",
                "parameters": [
                    {
                        "in": "query",
                        "name": "countryCode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "channel",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Android, iOS, Web"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "shopperLocale",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "types": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "paymentMethods": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "brands": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/adyen/notificationWebhooks": {
            "post": {
                "tags": [
                    "Payment Adyen"
                ],
                "summary": "Endpoint for receiving Adyen notifications",
                "responses": {
                    "200": {
                        "description": "[accepted]"
                    },
                    "400": {
                        "description": "[not accepted]"
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/api/private/paymentsLusoPay/sendMBWayRequest": {
            "post": {
                "tags": [
                    "Payment LusoPay"
                ],
                "summary": "Endpoit to add balance to wallet using MBWay",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "cellPhoneNumber": {
                                        "type": "number"
                                    },
                                    "amount": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "number"
                                            },
                                            "currency": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "string"
                                        },
                                        "currencyCode": {
                                            "type": "string"
                                        },
                                        "merchantOperationID": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "statusCode": {
                                            "type": "string"
                                        },
                                        "statusMessage": {
                                            "type": "string"
                                        },
                                        "timeStamp": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsLusoPay/generateNeWDynamicReference": {
            "post": {
                "tags": [
                    "Payment LusoPay"
                ],
                "summary": "Endpoit to add balance to wallet using MB reference and PayShop reference",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "number"
                                            },
                                            "currency": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "entityMB": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "referenceMB": {
                                            "type": "string"
                                        },
                                        "referencePS": {
                                            "type": "string"
                                        },
                                        "amount": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsLusoPay/generateDynamicReference": {
            "post": {
                "tags": [
                    "Payment LusoPay"
                ],
                "summary": "Endpoit to add balance to wallet using MB reference and PayShop reference",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "number"
                                            },
                                            "currency": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "entityMB": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "referenceMB": {
                                            "type": "string"
                                        },
                                        "referencePS": {
                                            "type": "string"
                                        },
                                        "amount": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsLusoPay/getMovementsByUser": {
            "get": {
                "tags": [
                    "Payment LusoPay",
                    "Updated"
                ],
                "summary": "Endpoit to get movements by user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "movementType": {
                                        "type": "string",
                                        "examples": "All, Credit, Debit"
                                    },
                                    "numOfItemsPerPage": {
                                        "type": "number"
                                    },
                                    "pageNumber": {
                                        "type": "number"
                                    },
                                    "startDate": {
                                        "type": "date",
                                        "examples": "2021-11-01T00:00:00Z"
                                    },
                                    "endDate": {
                                        "type": "date",
                                        "examples": "2021-11-01T00:00:00Z"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsLusoPay/getNewDynamicMovementsByDates": {
            "get": {
                "tags": [
                    "Payment LusoPay"
                ],
                "summary": "Endpoit to get new dynamic by date",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "startDate": {
                                        "type": "date"
                                    },
                                    "endDate": {
                                        "type": "date"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request \n\n\n Object sent by LusoPay"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsLusoPay/getBalanceByUser": {
            "get": {
                "tags": [
                    "Payment LusoPay"
                ],
                "summary": "Endpoit to get Balance By User",
                "responses": {
                    "200": {
                        "description": "Successful request \n\n\n Object sent by LusoPay"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentsLusoPay/sendSMS": {
            "patch": {
                "tags": [
                    "Payment LusoPay"
                ],
                "summary": "Endpoit to send the ATM reference by SMS ",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "internationalPrefix": {
                                        "type": "string"
                                    },
                                    "mobile": {
                                        "type": "string"
                                    },
                                    "MBReference": {
                                        "type": "string",
                                        "example": "Entidade: 11024 \n Referência: 626278748\n Valor: 60.00 EUR"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/lusoPay/notificationsMBRefPayshop": {
            "post": {
                "tags": [
                    "Payment LusoPay"
                ],
                "summary": "Endpoit to received notifications webservice MB ref and Payshop (Only works with IPS 62.48.250.246 and 94.46.13.92)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "ent",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "ref",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "valor",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "dpagamento",
                        "type": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "descricao",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "nif",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": []
            }
        },
        "/api/lusoPay/notificationsMBWay": {
            "post": {
                "tags": [
                    "Payment LusoPay"
                ],
                "summary": "Endpoit to received notifications webservice MB Way (Only works with IPS 94.46.13.92)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "descricao",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "statuscode",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "data",
                        "type": "date",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "valor",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": []
            }
        },
        "/api/private/transactions": {
            "get": {
                "tags": [
                    "Transactions",
                    "Update"
                ],
                "summary": "Endpoint to get transactions",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "amount": {
                                                "type": "object",
                                                "properties": {
                                                    "currency": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "_id": {
                                                "type": "string"
                                            },
                                            "userId": {
                                                "type": "string"
                                            },
                                            "transactionType": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "string"
                                            },
                                            "provider": {
                                                "type": "string"
                                            },
                                            "sessionId": {
                                                "type": "string"
                                            },
                                            "paymentId": {
                                                "type": "string"
                                            },
                                            "createdAt": {
                                                "type": "date"
                                            },
                                            "updatedAt": {
                                                "type": "date"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/transactions/byUser": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Endpoint to get transactions by user, (Filters can be made through the query)",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string",
                        "description": "The query can be created through the request frontend"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transactions"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentPeriods": {
            "post": {
                "tags": [
                    "Payments",
                    "New"
                ],
                "summary": "Endpoit to create new payments periods (Internal API only B2B)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment Periods"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment Periods"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Payments",
                    "New"
                ],
                "summary": "Endpoit to update payments periods list (Internal API only used by admin)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "paymentPeriod": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment Periods"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Payments",
                    "New"
                ],
                "summary": "Endpoint to get payment periods by user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "userId": {
                                            "type": "string"
                                        },
                                        "paymentPeriod": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentPeriods/listPaymentPeriods": {
            "get": {
                "tags": [
                    "Payments",
                    "New"
                ],
                "summary": "Endpoint to get payment periods list mapping",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "paymentPeriod": {
                                                "type": "string"
                                            },
                                            "translationKey": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/wallet": {
            "post": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Endpoit to create a Wallet",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Wallet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Endpoit to delete a Wallet (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/wallet/makePayment": {
            "patch": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Endpoit to make a payment using wallet",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sessionId": {
                                        "type": "string"
                                    },
                                    "paymentId": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "object",
                                        "properties": {
                                            "currency": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payments"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/wallet/byUser": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Endpoit to get wallet by user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "userId": {
                                            "type": "string"
                                        },
                                        "amount": {
                                            "type": "object",
                                            "properties": {
                                                "currency": {
                                                    "type": "string",
                                                    "default": "EUR"
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "default": 0
                                                }
                                            }
                                        },
                                        "transactionsList": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "transactionId": {
                                                        "type": "string"
                                                    },
                                                    "transaction": {
                                                        "type": "object",
                                                        "properties": {
                                                            "_id": {
                                                                "type": "string"
                                                            },
                                                            "userId": {
                                                                "type": "string"
                                                            },
                                                            "transactionType": {
                                                                "type": "string",
                                                                "examples": "Type credit, debit or refund"
                                                            },
                                                            "status": {
                                                                "type": "string"
                                                            },
                                                            "provider": {
                                                                "type": "string",
                                                                "examples": "If credit providers are MBWay, MBRef/PSNet, MBRef, PSNet or Card if debit providers are wallet or Card"
                                                            },
                                                            "amount": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "currency": {
                                                                        "type": "string",
                                                                        "default": "EUR"
                                                                    },
                                                                    "value": {
                                                                        "type": "number"
                                                                    }
                                                                }
                                                            },
                                                            "sessionId": {
                                                                "type": "string"
                                                            },
                                                            "paymentId": {
                                                                "type": "string"
                                                            },
                                                            "data": {
                                                                "type": "object",
                                                                "properties": {},
                                                                "description": "Object received when a request is made"
                                                            },
                                                            "dataReceived": {
                                                                "type": "object",
                                                                "properties": {},
                                                                "description": "Object received in notification when it approves or declines"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/wallet/validateBalance": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Endpoit to verify if have balance on wallet",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/wallet/autoRecharger": {
            "patch": {
                "tags": [
                    "Wallet",
                    "New"
                ],
                "summary": "Endpoit to enable or disable auto top up",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "autoRecharger": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "userId": {
                                            "type": "string"
                                        },
                                        "amount": {
                                            "type": "object",
                                            "properties": {
                                                "currency": {
                                                    "type": "string",
                                                    "default": "EUR"
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "default": 0
                                                }
                                            }
                                        },
                                        "autoRecharger": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/wallet/totalValue": {
            "get": {
                "tags": [
                    "Wallet",
                    "New"
                ],
                "summary": "Endpoit to get total wallet in date",
                "parameters": [
                    {
                        "in": "query",
                        "name": "date",
                        "schema": {
                            "type": "date"
                        },
                        "description": "2021-10-01T00:00:00Z",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "totalAmount": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/config/managementPOIs": {
            "post": {
                "tags": [
                    "Config Management POIs"
                ],
                "summary": "Endpoit to create a new configuration to management POIs",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "daysToUpdate": {
                                        "type": "number"
                                    },
                                    "numberOfPois": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "daysToUpdate": {
                                            "type": "number"
                                        },
                                        "numberOfPois": {
                                            "type": "number"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        },
                                        "userId": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Config Management POIs"
                ],
                "summary": "Endpoit to get configuration of management POIs",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "daysToUpdate": {
                                            "type": "number"
                                        },
                                        "numberOfPois": {
                                            "type": "number"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        },
                                        "userId": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/company/authenticate": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Login as company",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "refreshtoken": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        },
                                        "imageContent": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "Enter your username (email)"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Enter your password"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/adminUser/authenticate": {
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Login as admin on webClient",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "refreshtoken": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        },
                                        "imageContent": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "Enter your username (admin)"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Enter your password"
                                    },
                                    "clientEmail": {
                                        "type": "string",
                                        "example": "Enter client email"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": []
                    }
                ]
            }
        },
        "/api/private/config/messages": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Endpoit to create Messages",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "warning, stop, info"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Send when the type is warning or stop"
                                    },
                                    "startDateStopMessage": {
                                        "type": "date",
                                        "example": "Send when the type is stop"
                                    },
                                    "endDateStopMessage": {
                                        "type": "date",
                                        "example": "Send when the type is stop"
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": "If true, it is not necessary to send an activation date"
                                    },
                                    "infoMessage": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "title": {
                                                    "type": "string",
                                                    "example": "Send when the type is info"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Send when the type is info"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "example": "Send when the type is info, in base 64"
                                                }
                                            }
                                        }
                                    },
                                    "dateToDeactivate": {
                                        "type": "date",
                                        "example": "2020-12-17T00:00:00.000Z"
                                    },
                                    "dateToActivate": {
                                        "type": "date",
                                        "example": "2020-12-17T00:00:00.000Z"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Messages"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "Endpoit to get all messages, (The query can be built in the frontend)",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Messages"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/config/messages/landingPage": {
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "Endpoit to get all messages actives, (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "warnings": {
                                            "type": "object",
                                            "properties": {
                                                "warningActive": {
                                                    "type": "boolean"
                                                },
                                                "warningsMessage": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "_id": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "message": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "stop": {
                                            "type": "object",
                                            "properties": {
                                                "stopActive": {
                                                    "type": "boolean"
                                                },
                                                "stopMessage": {
                                                    "type": "object",
                                                    "properties": {
                                                        "_id": {
                                                            "type": "string"
                                                        },
                                                        "active": {
                                                            "type": "boolean"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "message": {
                                                            "type": "string"
                                                        },
                                                        "startDateStopMessage": {
                                                            "type": "date"
                                                        },
                                                        "endDateStopMessage": {
                                                            "type": "date"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "info": {
                                            "type": "object",
                                            "properties": {
                                                "infoActive": {
                                                    "type": "boolean"
                                                },
                                                "infoMessage": {
                                                    "type": "object",
                                                    "properties": {
                                                        "_id": {
                                                            "type": "string"
                                                        },
                                                        "active": {
                                                            "type": "boolean"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        },
                                                        "infoMessage": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "title": {
                                                                        "type": "string"
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    },
                                                                    "image": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/createBillingDocument": {
            "post": {
                "tags": [
                    "Billing"
                ],
                "summary": "Endpoint to send information regarding payments to create incoice",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "headers": {
                                        "type": "object",
                                        "properties": {
                                            "userId": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "payments": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "payment": {
                                                    "type": "number"
                                                },
                                                "paymentRef": {
                                                    "type": "string"
                                                },
                                                "currency": {
                                                    "type": "string"
                                                },
                                                "iva": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/getBillingDocument": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Endpoint to retrieve an invoice",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "documentId",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Invoice document id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/createTopUpEmail": {
            "post": {
                "tags": [
                    "Billing"
                ],
                "summary": "Endpoint to send information regarding payments to create incoice",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "headers": {
                                        "type": "object",
                                        "properties": {
                                            "userId": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "payment": {
                                        "type": "number"
                                    },
                                    "paymentRef": {
                                        "type": "string"
                                    },
                                    "currency": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentMethods": {
            "get": {
                "tags": [
                    "Payment Methods",
                    "Update"
                ],
                "summary": "Endpoint to get list of payment methods by user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "userId": {
                                            "type": "string"
                                        },
                                        "paymentMethod": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Payment Methods",
                    "Update"
                ],
                "summary": "Endpoint to update list of payment methods from an user",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "card, MBRef, transfer"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "userId": {
                                            "type": "string"
                                        },
                                        "paymentMethod": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/paymentMethods/paymentMethodsMapping": {
            "get": {
                "tags": [
                    "Payment Methods",
                    "New"
                ],
                "summary": "Endpoint to get list of payment methods to mapping",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "paymentMethod": {
                                                "type": "string"
                                            },
                                            "translationKey": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/imagesDependencies": {
            "post": {
                "tags": [
                    "Images Dependencies"
                ],
                "summary": "Endpoint to create new image dependencie",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Images Dependencies"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chargerId": {
                                        "type": "string",
                                        "example": "_id from the charger"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "chargerType": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string",
                                        "example": "On base64"
                                    },
                                    "createdBy": {
                                        "type": "string",
                                        "example": "Name of the user"
                                    },
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "street": {
                                                "type": "string"
                                            },
                                            "number": {
                                                "type": "string"
                                            },
                                            "zipCode": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "geometry": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "default": "Point"
                                            },
                                            "coordinates": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                },
                                                "index": "2dsphere"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Images Dependencies"
                ],
                "summary": "Endpoint to get all open image dependencie",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Images Dependencies"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Images Dependencies"
                ],
                "summary": "Endpoint to accepte or refuse image dependencie by operation management",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Images Dependencies"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "chargerId": {
                                        "type": "string",
                                        "example": "_id from the charger"
                                    },
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "chargerType": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string",
                                        "example": "On base64"
                                    },
                                    "userId": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "ACCEPTED, REFUSED"
                                    },
                                    "createdBy": {
                                        "type": "string",
                                        "example": "Name of the user"
                                    },
                                    "address": {
                                        "type": "object",
                                        "properties": {
                                            "street": {
                                                "type": "string"
                                            },
                                            "number": {
                                                "type": "string"
                                            },
                                            "zipCode": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "geometry": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "default": "Point"
                                            },
                                            "coordinates": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                },
                                                "index": "2dsphere"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/publicNetwork/addImage": {
            "put": {
                "tags": [
                    "Images Dependencies"
                ],
                "summary": "Endpoint to add image to charger public network",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "hwId": {
                                        "type": "string"
                                    },
                                    "chargerType": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "On base64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/evs/evUser": {
            "get": {
                "tags": [
                    "EVs"
                ],
                "summary": "Get userId from EV (Internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "userId": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "evId",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/cpModelsWithNoAvailableStatusNotification": {
            "post": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to add new Charger point model With No Available Status Notification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "chargerModel": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CP Models"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to enable or disable Charger point model With No Available Status Notification",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "active": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CP Models"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Configurations"
                ],
                "summary": "Endpoint to gel all active Charger point model With No Available Status Notification",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CP Models"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/otherEvs": {
            "get": {
                "tags": [
                    "Other EVs"
                ],
                "summary": "Endpoint to retrieve other types of evs mapping",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "evType": {
                                                "type": "string"
                                            },
                                            "showLicense": {
                                                "type": "string"
                                            },
                                            "billingName": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Other EVs"
                ],
                "summary": "Endpoint to retrieve other types of evs mapping",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fleet": {
                                        "type": "string"
                                    },
                                    "brand": {
                                        "type": "string"
                                    },
                                    "model": {
                                        "type": "string"
                                    },
                                    "batteryCapacity": {
                                        "type": "string"
                                    },
                                    "evType": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    },
                                    "licensePlate": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "plugs": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "plugType": {
                                                    "type": "string"
                                                },
                                                "plugPower": {
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Other EVs"
                ],
                "summary": "Endpoint to retrieve other types of evs mapping",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "primaryEV": {
                                            "type": "boolean"
                                        },
                                        "hasFleet": {
                                            "type": "boolean"
                                        },
                                        "fleet": {
                                            "type": "string"
                                        },
                                        "brand": {
                                            "type": "string"
                                        },
                                        "model": {
                                            "type": "string"
                                        },
                                        "evType": {
                                            "type": "string"
                                        },
                                        "imageContent": {
                                            "type": "string"
                                        },
                                        "country": {
                                            "type": "string"
                                        },
                                        "licensePlate": {
                                            "type": "string"
                                        },
                                        "sessions": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "listOfGroupDrivers": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "listOfDrivers": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "userId": {
                                            "type": "string"
                                        },
                                        "evInfo": {
                                            "type": "object",
                                            "properties": {
                                                "maxBatteryCapacity": {
                                                    "type": "number"
                                                },
                                                "internalChargerPower": {
                                                    "type": "number"
                                                },
                                                "maxFastChargingPower": {
                                                    "type": "number"
                                                },
                                                "plugs": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "plugType": {
                                                                "type": "string"
                                                            },
                                                            "plugPower": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "primaryEV": {
                                        "type": "boolean"
                                    },
                                    "hasFleet": {
                                        "type": "boolean"
                                    },
                                    "fleet": {
                                        "type": "string"
                                    },
                                    "brand": {
                                        "type": "string"
                                    },
                                    "model": {
                                        "type": "string"
                                    },
                                    "evType": {
                                        "type": "string"
                                    },
                                    "imageContent": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "licensePlate": {
                                        "type": "string"
                                    },
                                    "sessions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "listOfGroupDrivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "listOfDrivers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "userId": {
                                        "type": "string"
                                    },
                                    "evInfo": {
                                        "type": "object",
                                        "properties": {
                                            "maxBatteryCapacity": {
                                                "type": "number"
                                            },
                                            "internalChargerPower": {
                                                "type": "number"
                                            },
                                            "maxFastChargingPower": {
                                                "type": "number"
                                            },
                                            "plugs": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "plugType": {
                                                            "type": "string"
                                                        },
                                                        "plugPower": {
                                                            "type": "number"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/requestedPhysicalStateCards": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Request to get all contracts that solicitated physical cards",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contract"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/inactiveNetwork": {
            "patch": {
                "tags": [
                    "Contracts",
                    "New"
                ],
                "summary": "Endpoint to inactive network from a contract",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contracts"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "contractId": {
                                        "type": "string"
                                    },
                                    "network": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/contracts/activeNetwork": {
            "patch": {
                "tags": [
                    "Contracts",
                    "New"
                ],
                "summary": "Endpoint to activate network from a contract",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contracts"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "contractId": {
                                        "type": "string"
                                    },
                                    "network": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/notifyUsersByMail": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Request to notify all users by mail",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "mesasge": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "number"
                                        },
                                        "mesasge": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "messageSubject": {
                                        "type": "string"
                                    },
                                    "messageTitle": {
                                        "type": "string"
                                    },
                                    "messageHeader": {
                                        "type": "string"
                                    },
                                    "messageBody": {
                                        "type": "string"
                                    },
                                    "messageFooter": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/billing/createCDRsDocument": {
            "post": {
                "tags": [
                    "Billing"
                ],
                "summary": "Endpoint to create the CDRs csv document",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "cdr_start_date": {
                                        "type": "string",
                                        "default": "YYYY-MM-DD"
                                    },
                                    "cdr_end_date": {
                                        "type": "string",
                                        "default": "YYYY-MM-DD"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/billing/getInvoiceDocument": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Endpoint to retrieve the pdf invoice",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "invoiceId",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Invoice document id",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/purchaseTariff": {
            "get": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Get my purchase tariffs",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "tariffType": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "weekSchedule": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "weekDay": {
                                                            "type": "string"
                                                        },
                                                        "scheduleTime": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "startTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "stopTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "number"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Create a new purchase tariff",
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tariffType": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "weekSchedule": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "weekDay": {
                                                    "type": "string"
                                                },
                                                "scheduleTime": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "startTime": {
                                                                "type": "string"
                                                            },
                                                            "stopTime": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Edit sales tariff",
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tariffType": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "weekSchedule": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "weekDay": {
                                                    "type": "string"
                                                },
                                                "scheduleTime": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "startTime": {
                                                                "type": "string"
                                                            },
                                                            "stopTime": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Delete a purchase tariff",
                "requestBody": {
                    "description": "_id - id of the sales tariff you want delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful request"
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/purchaseTariff/byId": {
            "get": {
                "tags": [
                    "Tariffs"
                ],
                "summary": "Get the purchase tariff by id",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tariffType": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "weekSchedule": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "weekDay": {
                                                        "type": "string"
                                                    },
                                                    "scheduleTime": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "startTime": {
                                                                    "type": "string"
                                                                },
                                                                "stopTime": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "number"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/addPurchaseTariff": {
            "patch": {
                "tags": [
                    "Chargers",
                    "New"
                ],
                "summary": "Patch for add/update purchase tariff to charger",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Charger"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    },
                                    "purchaseTariff": {
                                        "$ref": "#/components/schemas/Purchase Tariff"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/removePurchaseTariff": {
            "delete": {
                "tags": [
                    "Chargers",
                    "New"
                ],
                "summary": "Patch to remove purchase tariff to charger",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Charger"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/chargers/updatePurchaseTariff": {
            "patch": {
                "tags": [
                    "Chargers",
                    "New"
                ],
                "summary": "Patch to update purchase tariff to multi chargers (internal endpoint)",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Charger"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchase Tariff"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/plafond": {
            "post": {
                "tags": [
                    "Plafonds",
                    "New"
                ],
                "summary": "Create a new Plafond",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plafonds"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "evId": {
                                        "type": "string"
                                    },
                                    "ev": {
                                        "type": "object",
                                        "properties": {
                                            "brand": {
                                                "type": "string"
                                            },
                                            "model": {
                                                "type": "string"
                                            },
                                            "imageContent": {
                                                "type": "string"
                                            },
                                            "licensePlate": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "userId": {
                                                    "type": "string"
                                                },
                                                "imageContent": {
                                                    "type": "string"
                                                },
                                                "mobile": {
                                                    "type": "string"
                                                },
                                                "internationalPrefix": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "groups": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "groupId": {
                                                    "type": "string"
                                                },
                                                "imageContent": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "monthlyPlafond": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "number"
                                            },
                                            "currency": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "minimumChargingValue": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "number"
                                            },
                                            "currency": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "monthlyBalanceAddition": {
                                        "type": "boolean"
                                    },
                                    "actionMinimumValue": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Plafonds",
                    "New"
                ],
                "summary": "Edit a Plafond",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plafonds"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "plafondId": {
                                        "type": "string"
                                    },
                                    "monthlyPlafond": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "number"
                                            },
                                            "currency": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "minimumChargingValue": {
                                        "type": "object",
                                        "properties": {
                                            "value": {
                                                "type": "number"
                                            },
                                            "currency": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "monthlyBalanceAddition": {
                                        "type": "boolean"
                                    },
                                    "actionMinimumValue": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Plafonds",
                    "New"
                ],
                "summary": "Remove a Plafond",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "plafondId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/plafond/byUser": {
            "get": {
                "tags": [
                    "Plafonds",
                    "New"
                ],
                "summary": "Get the plafonds by user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Plafonds"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/plafond/ev/transactions": {
            "get": {
                "tags": [
                    "Plafonds",
                    "New"
                ],
                "summary": "Get the transactions on plafonds",
                "parameters": [
                    {
                        "in": "query",
                        "name": "plafondId",
                        "type": "string",
                        "example": "_id of the plafond",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "date",
                        "type": "string",
                        "example": "2021-10 (Only year and month)",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "sessionId": {
                                                "type": "string"
                                            },
                                            "chargerType": {
                                                "type": "string"
                                            },
                                            "source": {
                                                "type": "string"
                                            },
                                            "amount": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "number",
                                                        "default": 0
                                                    },
                                                    "currency": {
                                                        "type": "string",
                                                        "default": "EUR"
                                                    }
                                                }
                                            },
                                            "startDate": {
                                                "type": "date"
                                            },
                                            "stopDate": {
                                                "type": "date"
                                            },
                                            "charger": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "hwId": {
                                                        "type": "string"
                                                    },
                                                    "address": {
                                                        "type": "object",
                                                        "properties": {
                                                            "street": {
                                                                "type": "string"
                                                            },
                                                            "number": {
                                                                "type": "string"
                                                            },
                                                            "zipCode": {
                                                                "type": "string"
                                                            },
                                                            "city": {
                                                                "type": "string"
                                                            },
                                                            "state": {
                                                                "type": "string"
                                                            },
                                                            "country": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "status": {
                                                "type": "string"
                                            },
                                            "notes": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/guestUsers": {
            "post": {
                "tags": [
                    "Guest users",
                    "New"
                ],
                "summary": "Create a new guest user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guest Users"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "ownerId": {
                                        "type": "string"
                                    },
                                    "accessPlatform": {
                                        "type": "object",
                                        "properties": {
                                            "api": {
                                                "type": "boolean",
                                                "default": true
                                            },
                                            "webclient": {
                                                "type": "boolean",
                                                "default": true
                                            },
                                            "mobile": {
                                                "type": "boolean",
                                                "default": true
                                            }
                                        }
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Guest users",
                    "New"
                ],
                "summary": "Edit a guest user by owner user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guest Users"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "ownerId": {
                                        "type": "string"
                                    },
                                    "accessPlatform": {
                                        "type": "object",
                                        "properties": {
                                            "api": {
                                                "type": "boolean",
                                                "default": true
                                            },
                                            "webclient": {
                                                "type": "boolean",
                                                "default": true
                                            },
                                            "mobile": {
                                                "type": "boolean",
                                                "default": true
                                            }
                                        }
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Guest users",
                    "New"
                ],
                "summary": "Get all guest user by owner user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Guest Users"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Guest users",
                    "New"
                ],
                "summary": "Remove a guest user",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "guestUserId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/guestUsers/byId": {
            "get": {
                "tags": [
                    "Guest users",
                    "New"
                ],
                "summary": "Get an guest user byidr",
                "parameters": [
                    {
                        "in": "query",
                        "name": "guestUserId",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Guest User id",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guest Users"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        },
        "/api/private/config/customization": {
            "post": {
                "tags": [
                    "Customization",
                    "New"
                ],
                "summary": "Create a new customization",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customization"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "get": {
                "tags": [
                    "Customization",
                    "New"
                ],
                "summary": "Get customization by brand",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customization"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customization",
                    "New"
                ],
                "summary": "Remove a customization",
                "responses": {
                    "200": {
                        "description": "Successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "auth": {
                                            "type": "boolean"
                                        },
                                        "code": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error \n\n \"string\""
                    }
                },
                "requestBody": {
                    "required": true,
                    "description": "All fields are mandatory if no values can be empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "brandName": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apikey": [],
                        "token": [],
                        "refreshtoken": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apikey": {
                "type": "apiKey",
                "description": "API key to authorize requests. If you don't have an EVIO API key, use `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRUeXBlIjoiUG9zdG1hbiIsImNsaWVudE5hbWUiOiJFVklPIiwiaWF0IjoxNTgwMTIxNDMxLCJleHAiOjE2MTYxMjE0MzF9.gLlgFSAB765oWiW_n8R84etVt5N_OFVrjqGh3OJL4V8`.",
                "in": "header",
                "name": "apikey",
                "use": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRUeXBlIjoiUG9zdG1hbiIsImNsaWVudE5hbWUiOiJFVklPIiwiaWF0IjoxNTgwMTIxNDMxLCJleHAiOjE2MTYxMjE0MzF9.gLlgFSAB765oWiW_n8R84etVt5N_OFVrjqGh3OJL4V8"
            },
            "token": {
                "type": "apiKey",
                "description": "Token received after login. Required to be able to use the rest of the features. \n Example: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZGNkNzg2MmI0OGIwZDAwMmMzN2U0ZTkiLCJ1c2VybmFtZSI6IjkzODc1NDg2OSIsImxhbmd1YWdlIjoiZW4iLCJpYXQiOjE2MDgwNDg5NzksImV4cCI6MTY0NDA0ODk3OX0.tPRoew4cdoyT_ZfVJ2up2h_5lMh2BaaeSMPkgqx-Hiw`",
                "in": "header",
                "name": "token"
            },
            "refreshtoken": {
                "type": "apiKey",
                "description": "Refresh token received after login. Required to be able to use the rest of the features. \n Example: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZGNkNzg2MmI0OGIwZDAwMmMzN2U0ZTkiLCJ1c2VybmFtZSI6IjkzODc1NDg2OSIsImxhbmd1YWdlIjoiZW4iLCJpYXQiOjE2MDgwNDg5NzksImV4cCI6MTY0NDA0ODk3OX0.tPRoew4cdoyT_ZfVJ2up2h_5lMh2BaaeSMPkgqx-Hiw`",
                "in": "header",
                "name": "refreshtoken"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean",
                        "default": false
                    },
                    "validated": {
                        "type": "boolean",
                        "default": false
                    },
                    "licenseAgreement": {
                        "type": "boolean",
                        "default": false
                    },
                    "licenseMarketing": {
                        "type": "boolean",
                        "default": false
                    },
                    "licenseServices": {
                        "type": "boolean",
                        "default": false
                    },
                    "licenseProducts": {
                        "type": "boolean",
                        "default": false
                    },
                    "country": {
                        "type": "string",
                        "default": "PT"
                    },
                    "language": {
                        "type": "string",
                        "default": "en"
                    },
                    "internationalPrefix": {
                        "type": "string",
                        "default": "+351"
                    },
                    "createDate": {
                        "type": "date"
                    },
                    "imageContent": {
                        "type": "string"
                    },
                    "favorites": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "baseId": {
                                    "type": "string"
                                },
                                "hwId": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "referencePlaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reference places"
                        }
                    },
                    "accessType": {
                        "type": "string",
                        "default": "limited",
                        "example": "all, limited"
                    },
                    "userPackage": {
                        "type": "object",
                        "properties": {
                            "packageName": {
                                "type": "string",
                                "default": "FREE"
                            },
                            "packageType": {
                                "type": "string",
                                "default": "FREE"
                            },
                            "rfidCardsLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "fleetsLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "evsLimit": {
                                "type": "number",
                                "default": 5
                            },
                            "driversLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "groupOfDriversLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "driversInGroupDriversLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "chargingAreasLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "evioBoxLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "chargersLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "tariffsLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "chargersGroupsLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "userInChargerGroupsLimit": {
                                "type": "number",
                                "default": 1
                            },
                            "searchLocationsLimit": {
                                "type": "string",
                                "default": "UNLIMITED"
                            },
                            "searchChargersLimit": {
                                "type": "string",
                                "default": "UNLIMITED"
                            },
                            "comparatorLimit": {
                                "type": "string",
                                "default": "UNLIMITED"
                            },
                            "routerLimit": {
                                "type": "string",
                                "default": "UNLIMITED"
                            }
                        }
                    },
                    "clientType": {
                        "type": "string",
                        "default": "b2c",
                        "example": "b2c, b2b"
                    },
                    "devUser": {
                        "type": "boolean",
                        "default": "false"
                    },
                    "blocked": {
                        "type": "boolean",
                        "default": "false"
                    },
                    "paymentPeriod": {
                        "type": "string",
                        "default": "transaction",
                        "example": "transaction, monthly"
                    },
                    "clientList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "userId": {
                                    "type": "string"
                                },
                                "clientType": {
                                    "type": "string",
                                    "example": "fleet, infrastructure, both"
                                }
                            }
                        }
                    },
                    "paymentMethodB2B": {
                        "type": "string"
                    },
                    "needChangePassword": {
                        "type": "boolean",
                        "default": false
                    },
                    "isBankTransferEnabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "isMBRefEnabled": {
                        "type": "boolean",
                        "default": "false"
                    },
                    "partyId": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "operatorContact": {
                        "type": "string"
                    },
                    "operatorEmail": {
                        "type": "string"
                    },
                    "evioCommission": {
                        "type": "object",
                        "properties": {
                            "minAmount": {
                                "type": "object",
                                "properties": {
                                    "uom": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "number"
                                    }
                                }
                            },
                            "transaction": {
                                "type": "object",
                                "properties": {
                                    "uom": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "required": [
                    "username",
                    "password",
                    "email",
                    "mobile",
                    "name",
                    "country",
                    "licenseAgreement",
                    "licenseMarketing"
                ]
            },
            "Reference places": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "street": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "zipCode": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            }
                        }
                    },
                    "geometry": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "default": "Point"
                            },
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                },
                                "index": "2dsphere"
                            }
                        }
                    }
                }
            },
            "Drivers": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "poolOfDrivers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "driverId": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "mobile": {
                                    "type": "string"
                                },
                                "internationalPrefix": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            },
            "Drivers Dependencies": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "drivers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "mobile": {
                                    "type": "string"
                                },
                                "internationalPrefix": {
                                    "type": "string"
                                },
                                "registered": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                }
            },
            "Group Drivers": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "createUser": {
                        "type": "string"
                    },
                    "imageContent": {
                        "type": "string"
                    },
                    "listOfDrivers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "driverId": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "mobile": {
                                    "type": "string"
                                },
                                "internationalPrefix": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                },
                                "admin": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                }
            },
            "Group Drivers Dependencies": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "drivers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "mobile": {
                                    "type": "string"
                                },
                                "internationalPrefix": {
                                    "type": "string"
                                },
                                "registered": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                }
            },
            "Group of Charger Station Users": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "createUser": {
                        "type": "string"
                    },
                    "imageContent": {
                        "type": "string"
                    },
                    "listOfUsers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "userId": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "mobile": {
                                    "type": "string"
                                },
                                "internationalPrefix": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean"
                                },
                                "admin": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                }
            },
            "Group of Charger Station Users Dependencies": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "mobile": {
                                    "type": "string"
                                },
                                "internationalPrefix": {
                                    "type": "string"
                                },
                                "registered": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                }
            },
            "CEME Tariff": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "CEME": {
                        "type": "string"
                    },
                    "cards": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "idTag": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean",
                                    "default": true
                                },
                                "imageCard": {
                                    "type": "string"
                                },
                                "fontCardBlack": {
                                    "type": "boolean"
                                },
                                "licensePlate": {
                                    "type": "string"
                                },
                                "expirationDate": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "activer": {
                        "type": "boolean",
                        "default": true
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "imageCEME": {
                        "type": "string"
                    },
                    "tariff": {
                        "type": "object",
                        "properties": {
                            "planId": {
                                "type": "string"
                            },
                            "power": {
                                "type": "string"
                            }
                        }
                    }
                },
                "required": [
                    "userId",
                    "name",
                    "ceme"
                ]
            },
            "EVs": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "evInfo": {
                        "type": "object",
                        "properties": {
                            "databaseVehicleId": {
                                "type": "string"
                            },
                            "yearFrom": {
                                "type": "string"
                            },
                            "yearTo": {
                                "type": "string"
                            },
                            "range": {
                                "type": "number"
                            },
                            "useableBatteryCapacity": {
                                "type": "number"
                            },
                            "maxBatteryCapacity": {
                                "type": "number"
                            },
                            "eletricMotorPower": {
                                "type": "number"
                            },
                            "internalChargerPower": {
                                "type": "number"
                            },
                            "internalChargerChargeTime": {
                                "type": "number"
                            },
                            "internalChargerChargeSpeed": {
                                "type": "number"
                            },
                            "maxFastChargingPower": {
                                "type": "number"
                            },
                            "avgFastChargingPower": {
                                "type": "number"
                            },
                            "fastchargeChargeTime": {
                                "type": "number"
                            },
                            "fastchargeChargeSpeed": {
                                "type": "number"
                            },
                            "evEfficiency": {
                                "type": "number"
                            },
                            "evType": {
                                "type": "string"
                            },
                            "consumptionCity": {
                                "type": "number"
                            },
                            "consumptionHighway": {
                                "type": "number"
                            },
                            "plugs": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "plugType": {
                                            "type": "string"
                                        },
                                        "plugPower": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            "plugsChargingTable": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "plugType": {
                                            "type": "string"
                                        },
                                        "chargePhaseVolt": {
                                            "type": "number"
                                        },
                                        "chargePhaseAmp": {
                                            "type": "number"
                                        },
                                        "chargePhase": {
                                            "type": "number"
                                        },
                                        "chargePower": {
                                            "type": "number"
                                        }
                                    }
                                }
                            },
                            "plugsFastChargingTable": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "plugType": {
                                            "type": "string"
                                        },
                                        "fastChargePower": {
                                            "type": "number"
                                        },
                                        "fastChargeTime": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "imageContent": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "primaryEV": {
                        "type": "boolean",
                        "default": false
                    },
                    "status": {
                        "type": "string",
                        "default": "10"
                    },
                    "sessions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "userId": {
                                    "type": "string"
                                },
                                "numberOfSessions": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "chargerId": {
                        "type": "string"
                    },
                    "batteryChargingSession": {
                        "type": "number"
                    },
                    "consumptionChargingSession": {
                        "type": "number"
                    },
                    "paymentChargingSession": {
                        "type": "number"
                    },
                    "hasFleet": {
                        "type": "boolean",
                        "default": true
                    },
                    "fleet": {
                        "type": "string"
                    },
                    "licensePlate": {
                        "type": "string"
                    },
                    "usageNumber": {
                        "type": "number",
                        "default": 0
                    },
                    "listOfGroupDrivers": {
                        "$ref": "#/components/schemas/List of drivers"
                    },
                    "listOfDrivers": {
                        "$ref": "#/components/schemas/List of drivers"
                    },
                    "paymenteBy": {
                        "type": "string",
                        "example": "mySelf/driver"
                    }
                },
                "required": [
                    "brand",
                    "model",
                    "year",
                    "connectorType",
                    "licensePlate"
                ]
            },
            "List of drivers": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "paymenteBy": {
                        "type": "string",
                        "example": "mySelf/driver"
                    },
                    "period": {
                        "type": "object",
                        "properties": {
                            "periodType": {
                                "type": "string",
                                "example": "always/custom"
                            },
                            "period": {
                                "type": "object",
                                "properties": {
                                    "startDate": {
                                        "type": "date"
                                    },
                                    "stopDate": {
                                        "type": "date"
                                    }
                                }
                            }
                        }
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "internationalPrefix": {
                        "type": "string"
                    }
                }
            },
            "Fleets": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "imageContent": {
                        "type": "string"
                    },
                    "listEvs": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "evId": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "createUserId": {
                        "type": "string"
                    },
                    "sharedWithOPC": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "Charger": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "hwId": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "meterValueSampleInterval": {
                        "type": "string"
                    },
                    "vendor": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parkingType": {
                        "type": "string"
                    },
                    "vehiclesType": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "vehicle": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "street": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "zipCode": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            }
                        }
                    },
                    "geometry": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "default": "Point"
                            },
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                },
                                "index": "2dsphere"
                            }
                        }
                    },
                    "instantBooking": {
                        "type": "boolean"
                    },
                    "availability": {
                        "$ref": "#/components/schemas/Availability"
                    },
                    "plugs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plugs"
                        }
                    },
                    "accessType": {
                        "type": "string"
                    },
                    "mapVisibility": {
                        "type": "boolean"
                    },
                    "listOfGroups": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "groupId": {
                                    "type": "string"
                                },
                                "groupName": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "default": true
                    },
                    "rating": {
                        "type": "number",
                        "default": 0
                    },
                    "numberOfSessions": {
                        "type": "number",
                        "default": 0
                    },
                    "chargerType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "default": "10"
                    },
                    "netStatus": {
                        "type": "boolean",
                        "default": false
                    },
                    "infrastructure": {
                        "type": "string"
                    },
                    "hasInfrastructure": {
                        "type": "boolean"
                    },
                    "chargingDistance": {
                        "type": "boolean",
                        "default": "50"
                    },
                    "imageContent": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultImage": {
                        "type": "string"
                    },
                    "createUser": {
                        "type": "string"
                    },
                    "modifyUser": {
                        "type": "string"
                    },
                    "infoPoints": {
                        "type": "string"
                    },
                    "heartBeat": {
                        "type": "date"
                    },
                    "heartBeatInterval": {
                        "type": "number",
                        "default": 300
                    },
                    "requireConfirmation": {
                        "type": "boolean"
                    },
                    "allowRFID": {
                        "type": "boolean",
                        "default": false
                    },
                    "wifiPairingName": {
                        "type": "string"
                    },
                    "parkingSessionAfterChargingSession": {
                        "type": "boolean",
                        "default": true
                    },
                    "network": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "operatorContact": {
                        "type": "string"
                    },
                    "operatorEmail": {
                        "type": "string"
                    },
                    "stationIdentifier": {
                        "type": "string"
                    },
                    "manufacturer": {
                        "type": "string"
                    },
                    "partyId": {
                        "type": "string"
                    },
                    "listOfFleets": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "fleetId": {
                                    "type": "string"
                                },
                                "fleetName": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "purchaseTariff": {
                        "type": "object",
                        "properties": {
                            "tariffType": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "purchaseTariffId": {
                                "type": "string"
                            },
                            "weekSchedule": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "weekDay": {
                                            "type": "string"
                                        },
                                        "scheduleTime": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "startTime": {
                                                        "type": "string"
                                                    },
                                                    "stopTime": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": [
                    "hwId",
                    "name",
                    "parkingType",
                    "vehiclesType",
                    "plugs",
                    "chargerType",
                    "plugs",
                    "address",
                    "geometry",
                    "accessType"
                ]
            },
            "Availability": {
                "type": "object",
                "properties": {
                    "availabilityType": {
                        "type": "string"
                    },
                    "monday": {
                        "$ref": "#/components/schemas/Day"
                    },
                    "tuesday": {
                        "$ref": "#/components/schemas/Day"
                    },
                    "wednesday": {
                        "$ref": "#/components/schemas/Day"
                    },
                    "thursday": {
                        "$ref": "#/components/schemas/Day"
                    },
                    "friday": {
                        "$ref": "#/components/schemas/Day"
                    },
                    "saturday": {
                        "$ref": "#/components/schemas/Day"
                    },
                    "sunday": {
                        "$ref": "#/components/schemas/Day"
                    }
                }
            },
            "Day": {
                "type": "object",
                "properties": {
                    "isSelected": {
                        "type": "boolean",
                        "example": "true/false"
                    },
                    "availabilityDay": {
                        "type": "string",
                        "example": "allDay/costum"
                    },
                    "ranges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ranges"
                        }
                    }
                }
            },
            "Ranges": {
                "type": "object",
                "properties": {
                    "startTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    }
                }
            },
            "Plugs": {
                "type": "object",
                "properties": {
                    "plugId": {
                        "type": "string"
                    },
                    "qrCodeId": {
                        "type": "string"
                    },
                    "tariff": {
                        "type": "object",
                        "properties": {
                            "groupName": {
                                "type": "string",
                                "default": "Private"
                            },
                            "groupId": {
                                "type": "string",
                                "default": "\\'\\'"
                            },
                            "tariffId": {
                                "type": "string",
                                "default": "\\'\\'"
                            },
                            "fleetId": {
                                "type": "string"
                            },
                            "fleetName": {
                                "type": "string"
                            }
                        }
                    },
                    "connectorType": {
                        "type": "string"
                    },
                    "voltage": {
                        "type": "number"
                    },
                    "amperage": {
                        "type": "number"
                    },
                    "power": {
                        "type": "number"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string",
                        "default": "10"
                    },
                    "serviceCost": {
                        "$ref": "#/components/schemas/ServiceCost"
                    },
                    "canBeNotified": {
                        "type": "boolean"
                    },
                    "canBeAutomaticallyBooked": {
                        "type": "boolean"
                    },
                    "mySession": {
                        "type": "string"
                    }
                }
            },
            "ServiceCost": {
                "type": "object",
                "properties": {
                    "initialCost": {
                        "type": "number"
                    },
                    "costByTime": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CostByTime"
                        }
                    },
                    "costByPower": {
                        "$ref": "#/components/schemas/CostByPower"
                    }
                }
            },
            "CostByTime": {
                "type": "object",
                "properties": {
                    "minTime": {
                        "type": "number"
                    },
                    "maxTime": {
                        "type": "number",
                        "Example": "In maxtime the maximum time is 1000 minutes"
                    },
                    "cost": {
                        "type": "number"
                    },
                    "uom": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "CostByPower": {
                "type": "object",
                "properties": {
                    "cost": {
                        "type": "number"
                    },
                    "uom": {
                        "type": "string"
                    }
                }
            },
            "Infrastructure": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "imageContent": {
                        "type": "string"
                    },
                    "listChargers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "chargerId": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "createUserId": {
                        "type": "string"
                    }
                }
            },
            "QrCode": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "qrCodeNumber": {
                        "type": "number"
                    },
                    "qrCodeId": {
                        "type": "string"
                    },
                    "qrCode": {
                        "type": "object",
                        "properties": {
                            "hwId": {
                                "type": "string"
                            },
                            "plugId": {
                                "type": "string"
                            },
                            "chargerType": {
                                "type": "string"
                            },
                            "chargingDistance": {
                                "type": "string"
                            },
                            "geometry": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "default": "Point"
                                    },
                                    "coordinates": {
                                        "type": "array",
                                        "items": {
                                            "type": "number"
                                        },
                                        "index": "2dsphere"
                                    }
                                }
                            }
                        }
                    },
                    "createUserId": {
                        "type": "string"
                    }
                }
            },
            "EVIO charger": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "hwId": {
                        "type": "string"
                    },
                    "vendor": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "vehiclesType": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "vehicle": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "chargerType": {
                        "type": "string"
                    },
                    "plugs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plugs"
                        }
                    },
                    "imageContent": {
                        "type": "string"
                    },
                    "createUser": {
                        "type": "string"
                    },
                    "wifiPairingName": {
                        "type": "string"
                    },
                    "manufacturer": {
                        "type": "string"
                    }
                },
                "required": [
                    "hwId",
                    "vehiclesType",
                    "plugs",
                    "chargerType",
                    "plugs"
                ]
            },
            "Charger Type": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "chargerType": {
                        "type": "string"
                    },
                    "manufacturer": {
                        "type": "string"
                    },
                    "model": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "command": {
                                    "type": "string"
                                },
                                "enabled": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "required": [
                    "chargerType",
                    "manufacturer",
                    "model",
                    "protocol",
                    "host",
                    "path",
                    "actions"
                ]
            },
            "Charging session": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "sessionId": {
                        "type": "number"
                    },
                    "hwId": {
                        "type": "string"
                    },
                    "plugId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "evId": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "date",
                        "default": "date.now"
                    },
                    "stopDate": {
                        "type": "date"
                    },
                    "command": {
                        "type": "string"
                    },
                    "chargerType": {
                        "type": "string"
                    },
                    "meterStart": {
                        "type": "number"
                    },
                    "meterStop": {
                        "type": "number"
                    },
                    "totalPower": {
                        "type": "number"
                    },
                    "sessionPrice": {
                        "type": "number"
                    },
                    "tariffId": {
                        "type": "string"
                    },
                    "tariff": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "tariffType": {
                                "type": "string"
                            },
                            "billingType": {
                                "type": "string"
                            },
                            "tariff": {
                                "type": "object",
                                "properties": {
                                    "activationFee": {
                                        "type": "number"
                                    },
                                    "bookingAmount": {
                                        "type": "object",
                                        "properties": {
                                            "uom": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "chargingAmount": {
                                        "type": "object",
                                        "properties": {
                                            "uom": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "parkingDuringChargingAmount": {
                                        "type": "object",
                                        "properties": {
                                            "uom": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "parkingAmount": {
                                        "type": "object",
                                        "properties": {
                                            "uom": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "evioCommission": {
                                        "type": "object",
                                        "properties": {
                                            "minAmount": {
                                                "type": "object",
                                                "properties": {
                                                    "uom": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            },
                                            "transaction": {
                                                "type": "object",
                                                "properties": {
                                                    "uom": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "estimatedPrice": {
                        "type": "number"
                    },
                    "finalPrice": {
                        "type": "number"
                    },
                    "batteryCharged": {
                        "type": "number"
                    },
                    "timeLeft": {
                        "type": "number"
                    },
                    "timeCharged": {
                        "type": "number"
                    },
                    "CO2Saved": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string"
                    },
                    "rating": {
                        "type": "number"
                    },
                    "bookingId": {
                        "type": "string"
                    },
                    "readingPoints": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "totalPower": {
                                    "type": "number"
                                },
                                "instantPower": {
                                    "type": "number"
                                },
                                "readDate": {
                                    "type": "date",
                                    "default": "date.now"
                                },
                                "batteryCharged": {
                                    "type": "number"
                                },
                                "instantVoltage": {
                                    "type": "number"
                                },
                                "instantAmperage": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "feedBack": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "questionCode": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "number"
                                },
                                "auxiliaryText": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "feedBackText": {
                        "type": "string"
                    },
                    "stopReason": {
                        "type": "object",
                        "properties": {
                            "reasonCOde": {
                                "type": "string"
                            },
                            "resonTest": {
                                "type": "string"
                            }
                        }
                    },
                    "autoStop": {
                        "type": "object",
                        "properties": {
                            "uom": {
                                "type": "string"
                            },
                            "value": {
                                "type": "number"
                            }
                        }
                    },
                    "downtime": {
                        "type": "number"
                    },
                    "uptime": {
                        "type": "number"
                    },
                    "paymentId": {
                        "type": "string"
                    },
                    "chargerOwner": {
                        "type": "string"
                    },
                    "evOwner": {
                        "type": "string"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "example": "wallet, card, notPay"
                    },
                    "paymentMethodId": {
                        "type": "string"
                    },
                    "walletAmount": {
                        "type": "number"
                    },
                    "reservedAmount": {
                        "type": "number"
                    },
                    "confirmationAmount": {
                        "type": "number"
                    },
                    "userIdWillPay": {
                        "type": "string"
                    },
                    "adyenReference": {
                        "type": "string"
                    },
                    "transactionId": {
                        "type": "string"
                    },
                    "paymentStatus": {
                        "type": "string",
                        "example": "PAID, UNPAID, NA, CANCELED"
                    },
                    "paymentNotificationStatus": {
                        "type": "bollean"
                    }
                },
                "required": [
                    "hwId",
                    "plugId",
                    "userId",
                    "evId",
                    "startDate",
                    "command",
                    "chargerType",
                    "status"
                ]
            },
            "Group": {
                "type": "object",
                "description": "Data model shared by user groups, infrastructures and fleets. Not all attributes are used by all different groups.",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "groupType": {
                        "type": "number",
                        "description": "10 for user group, \n 20 for infrastructure, \n 30 for fleet"
                    },
                    "imageContent": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "paymentId": {
                        "type": "string",
                        "description": "Attribute used only in fleets"
                    },
                    "paymentBy": {
                        "type": "string",
                        "description": "Attribute used only in fleets"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "accessType": {
                        "type": "string"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Children"
                        },
                        "description": "Attribute used in fleets and user groups"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Groups"
                        },
                        "description": "Attribute used only in infrastructures"
                    },
                    "discount": {
                        "type": "string"
                    },
                    "createUser": {
                        "type": "string"
                    },
                    "modifyUser": {
                        "type": "string"
                    }
                }
            },
            "Children": {
                "type": "object",
                "properties": {
                    "baseId": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "active": {
                        "type": "string"
                    },
                    "admin": {
                        "type": "string",
                        "default": false
                    },
                    "createUser": {
                        "type": "string"
                    },
                    "modifyUser": {
                        "type": "string"
                    }
                },
                "required": [
                    "baseId"
                ]
            },
            "Groups": {
                "type": "object",
                "properties": {
                    "baseId": {
                        "type": "string"
                    },
                    "groupsType": {
                        "type": "number",
                        "description": "10 for user group"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "createUser": {
                        "type": "string"
                    },
                    "modifyUser": {
                        "type": "string"
                    }
                },
                "required": [
                    "baseId",
                    "groupsType",
                    "groupName"
                ]
            },
            "Groups dependencies": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "users": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string"
                            },
                            "mobile": {
                                "type": "string"
                            },
                            "registered": {
                                "type": "boolean",
                                "default": false
                            },
                            "createDate": {
                                "type": "date",
                                "default": "date.now"
                            }
                        }
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "createUser": {
                        "type": "string"
                    },
                    "modifyUser": {
                        "type": "string"
                    }
                }
            },
            "Language": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "languageCode": {
                        "type": "string"
                    },
                    "languageName": {
                        "type": "string"
                    },
                    "translations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "Activation": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "used": {
                        "type": "boolean"
                    }
                }
            },
            "Password Recoveries": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "used": {
                        "type": "boolean"
                    }
                }
            },
            "Sales Tariff": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "index": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "tariffType": {
                        "type": "string"
                    },
                    "tariff": {
                        "type": "object",
                        "properties": {
                            "activationFee": {
                                "type": "number"
                            },
                            "bookingAmount": {
                                "type": "object",
                                "properties": {
                                    "uom": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "number"
                                    }
                                }
                            },
                            "chargingAmount": {
                                "type": "object",
                                "properties": {
                                    "uom": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "number"
                                    }
                                }
                            },
                            "parkingDuringChargingAmount": {
                                "type": "object",
                                "properties": {
                                    "uom": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "number"
                                    }
                                }
                            },
                            "parkingAmount": {
                                "type": "object",
                                "properties": {
                                    "uom": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "number"
                                    }
                                }
                            },
                            "evioCommission": {
                                "type": "object",
                                "properties": {
                                    "minAmount": {
                                        "type": "object",
                                        "properties": {
                                            "uom": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    },
                                    "transaction": {
                                        "type": "object",
                                        "properties": {
                                            "uom": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "createUser": {
                        "type": "string"
                    },
                    "modifyUser": {
                        "type": "string"
                    },
                    "billingType": {
                        "type": "string"
                    }
                }
            },
            "Purchase Tariff": {
                "type": "object",
                "properties": {
                    "tariffType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "weekSchedule": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "weekDay": {
                                    "type": "string"
                                },
                                "scheduleTime": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "startTime": {
                                                "type": "string"
                                            },
                                            "stopTime": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Charging Schedule": {
                "type": "object",
                "properties": {
                    "hwId": {
                        "type": "string"
                    },
                    "plugId": {
                        "type": "string"
                    },
                    "evId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "scheduleStartDate": {
                        "type": "date",
                        "example": "2020-01-06 14:00"
                    },
                    "scheduleStopDate": {
                        "type": "date",
                        "example": "2020-01-06 14:00"
                    }
                }
            },
            "Request History": {
                "type": "object",
                "properties": {
                    "clientType": {
                        "type": "string"
                    },
                    "clientName": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "mobileBrand": {
                        "type": "string"
                    },
                    "mobileModel": {
                        "type": "string"
                    },
                    "mobileVersion": {
                        "type": "string"
                    },
                    "evioAppVersion": {
                        "type": "string"
                    },
                    "reqID": {
                        "type": "string"
                    }
                }
            },
            "Filters": {
                "type": "object",
                "properties": {
                    "availableStations": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "example": [
                            10,
                            20,
                            30
                        ]
                    },
                    "priceRange": {
                        "$ref": "#/components/schemas/Range Metric"
                    },
                    "powerRange": {
                        "$ref": "#/components/schemas/Range Metric"
                    },
                    "connectorType": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "CCS 1",
                            "CCS 2",
                            "CHADEMO",
                            "J1772",
                            "SCHUKO EU",
                            "TYPE 2",
                            "TESLA",
                            "TESLA R",
                            "NEMA 5-15",
                            "TYPE 3C",
                            "TYPE 3A"
                        ]
                    },
                    "rating": {
                        "type": "number",
                        "example": "0,1,2,3,4,5",
                        "discription": "Minimum value"
                    },
                    "parkingType": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "OutdoorGarage",
                            "CoverParking",
                            "Street",
                            "PrivateGarage",
                            "OutdoorParking"
                        ]
                    },
                    "vehicles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "Car",
                            "Truck",
                            "Bicycle",
                            "Motorcycle"
                        ]
                    },
                    "stations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "public",
                            "evio",
                            "private"
                        ]
                    }
                }
            },
            "Range Metric": {
                "type": "object",
                "properties": {
                    "min": {
                        "type": "number"
                    },
                    "max": {
                        "type": "number"
                    },
                    "uom": {
                        "type": "string"
                    }
                }
            },
            "Questions": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "index": true
                    },
                    "questionCode": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean",
                        "default": true
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "answer": {
                                    "type": "string"
                                },
                                "active": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    "createUser": {
                        "type": "string"
                    },
                    "modifyUser": {
                        "type": "string"
                    }
                },
                "required": [
                    "questionCode",
                    "type"
                ]
            },
            "Host Issues": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "index": true
                    },
                    "chargerId": {
                        "type": "string"
                    },
                    "hwId": {
                        "type": "string"
                    },
                    "hostId": {
                        "type": "string"
                    },
                    "issuedUserId": {
                        "type": "string"
                    },
                    "reasonCode": {
                        "type": "string"
                    },
                    "reasonText": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "default": "Open"
                    }
                },
                "required": [
                    "chargerId",
                    "hwId",
                    "hostId",
                    "reasonCode"
                ]
            },
            "EVIO Issues": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "index": true
                    },
                    "chargerId": {
                        "type": "string"
                    },
                    "hwId": {
                        "type": "string"
                    },
                    "issuedUserId": {
                        "type": "string"
                    },
                    "reasonCode": {
                        "type": "string"
                    },
                    "reasonText": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "default": "Open"
                    }
                },
                "required": [
                    "chargerId",
                    "hwId",
                    "reasonCode"
                ]
            },
            "Notify me History": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "index": true
                    },
                    "topic": {
                        "type": "string"
                    },
                    "listOfUsers": {
                        "type": "array",
                        "items": {
                            "userId": {
                                "type": "string"
                            }
                        }
                    },
                    "chargerId": {
                        "type": "string"
                    },
                    "hwId": {
                        "type": "string"
                    },
                    "plugId": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "chargerId",
                    "hwId",
                    "plugId"
                ]
            },
            "Booking": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "index": true
                    },
                    "userId": {
                        "type": "string"
                    },
                    "infrasctructure": {
                        "type": "string"
                    },
                    "chargerId": {
                        "type": "string"
                    },
                    "hwId": {
                        "type": "string"
                    },
                    "plugId": {
                        "type": "string"
                    },
                    "evId": {
                        "type": "string"
                    },
                    "idTag": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "date"
                    },
                    "stopDate": {
                        "type": "date"
                    },
                    "status": {
                        "type": "string",
                        "example": "Open, Canceled, Closed, ClosedAutomatically"
                    },
                    "totalBooking": {
                        "type": "number"
                    },
                    "bookingPrice": {
                        "type": "object",
                        "properties": {
                            "uom": {
                                "type": "string"
                            },
                            "value": {
                                "type": "number"
                            }
                        }
                    },
                    "totalPrice": {
                        "type": "number"
                    },
                    "sessionId": {
                        "type": "string"
                    },
                    "limitBookedTime": {
                        "type": "number"
                    },
                    "canceledBeforeTime": {
                        "type": "number"
                    },
                    "canceledReasonCode": {
                        "type": "string"
                    },
                    "canceledReasonText": {
                        "type": "string"
                    }
                },
                "required": [
                    "chargerId",
                    "hwId",
                    "plugId",
                    "startDate",
                    "stopDate",
                    "bookingPrice",
                    "limitBookedTime",
                    "canceledBeforeTime"
                ]
            },
            "Automatic Booking": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "index": true
                    },
                    "userId": {
                        "type": "string"
                    },
                    "infrasctructure": {
                        "type": "string"
                    },
                    "chargerId": {
                        "type": "string"
                    },
                    "hwId": {
                        "type": "string"
                    },
                    "plugId": {
                        "type": "string"
                    },
                    "evId": {
                        "type": "string"
                    },
                    "bookingPrice": {
                        "type": "object",
                        "properties": {
                            "uom": {
                                "type": "string"
                            },
                            "value": {
                                "type": "number"
                            }
                        }
                    },
                    "limitBookedTime": {
                        "type": "number"
                    },
                    "canceledBeforeTime": {
                        "type": "number"
                    },
                    "canceledReasonCode": {
                        "type": "string"
                    },
                    "canceledReasonText": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "default": "WaitingForAvailability"
                    }
                },
                "required": [
                    "chargerId",
                    "hwId",
                    "plugId",
                    "bookingPrice",
                    "limitBookedTime",
                    "canceledBeforeTime"
                ]
            },
            "Filters Booking": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Bookings ID or booking id you want to receive"
                    },
                    "status": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of status (open, canceled...)"
                    },
                    "hwId": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of hwId od the chargers"
                    }
                }
            },
            "Payments": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "sessionId": {
                        "type": "string",
                        "example": "Only when paymentType was transaction"
                    },
                    "listOfSessions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Only when paymentType was monthly"
                        }
                    },
                    "hwId": {
                        "type": "string"
                    },
                    "chargerType": {
                        "type": "string"
                    },
                    "transactionId": {
                        "type": "string"
                    },
                    "paymentAdyenId": {
                        "type": "string"
                    },
                    "paymentType": {
                        "type": "string",
                        "default": "transaction",
                        "example": "monthly, transaction"
                    },
                    "paymentMethodId": {
                        "type": "string"
                    },
                    "paymentMethod": {
                        "type": "string",
                        "example": "wallet, card, notPay"
                    },
                    "amount": {
                        "type": "object",
                        "properties": {
                            "currency": {
                                "type": "string",
                                "default": "EUR"
                            },
                            "value": {
                                "type": "number"
                            }
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "object",
                        "properties": {},
                        "description": "Object received when payment for wallet declined"
                    },
                    "data": {
                        "type": "object",
                        "properties": {},
                        "description": "Object received when a request is made to adyen to make payment"
                    },
                    "dataReceived": {
                        "type": "object",
                        "properties": {},
                        "description": "Object received in the Adyen notification when it approves or declines payment"
                    },
                    "reservedAmount": {
                        "type": "string"
                    }
                }
            },
            "App Version": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                }
            },
            "List CEME": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "CEME": {
                        "type": "string"
                    },
                    "imageCEME": {
                        "type": "string"
                    },
                    "imageCard": {
                        "type": "string"
                    },
                    "fontCardBlack": {
                        "type": "boolean",
                        "default": false
                    },
                    "order": {
                        "type": "number"
                    }
                }
            },
            "Insights": {
                "type": "object",
                "properties": {
                    "myEvs": {
                        "type": "object",
                        "properties": {
                            "totalChargingTime": {
                                "type": "number"
                            },
                            "totalSessions": {
                                "type": "number"
                            },
                            "totalCost": {
                                "type": "number"
                            },
                            "totalEnergy": {
                                "type": "number"
                            },
                            "evs": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "primaryEV": {
                                            "type": "boolean"
                                        },
                                        "brand": {
                                            "type": "string"
                                        },
                                        "model": {
                                            "type": "string"
                                        },
                                        "licensePlate": {
                                            "type": "string"
                                        },
                                        "imageContent": {
                                            "type": "string"
                                        },
                                        "sessions": {
                                            "type": "number"
                                        },
                                        "totalEnergy": {
                                            "type": "number"
                                        },
                                        "totalChargingTime": {
                                            "type": "number"
                                        },
                                        "totalSpend": {
                                            "type": "number"
                                        },
                                        "averageChargingTimeSession": {
                                            "type": "number"
                                        },
                                        "averageEnergyChargedSession": {
                                            "type": "number"
                                        },
                                        "favouriteCharger": {
                                            "type": "object",
                                            "properties": {
                                                "_id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "hwId": {
                                                    "type": "string"
                                                },
                                                "rating": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "statistics": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "day": {
                                                        "type": "date"
                                                    },
                                                    "energy": {
                                                        "type": "number"
                                                    },
                                                    "timeCharged": {
                                                        "type": "number"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "myChargers": {
                        "type": "object",
                        "properties": {
                            "totalChargingTime": {
                                "type": "number"
                            },
                            "totalSessions": {
                                "type": "number"
                            },
                            "income": {
                                "type": "number"
                            },
                            "totalEnergy": {
                                "type": "number"
                            },
                            "chargers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "boolean"
                                        },
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "numberOfPlugs": {
                                            "type": "number"
                                        },
                                        "defaultImage": {
                                            "type": "string"
                                        },
                                        "rating": {
                                            "type": "number"
                                        },
                                        "myChargersSessions": {
                                            "type": "number"
                                        },
                                        "totalEnergy": {
                                            "type": "number"
                                        },
                                        "totalChargingTime": {
                                            "type": "number"
                                        },
                                        "totalIncime": {
                                            "type": "number"
                                        },
                                        "averageChargingTimeSession": {
                                            "type": "number"
                                        },
                                        "averageEnergyChargedSession": {
                                            "type": "number"
                                        },
                                        "mostUsedPlug": {
                                            "type": "object",
                                            "properties": {
                                                "plugId": {
                                                    "type": "string"
                                                },
                                                "connectorType": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "statistics": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "day": {
                                                        "type": "date"
                                                    },
                                                    "energy": {
                                                        "type": "number"
                                                    },
                                                    "timeCharged": {
                                                        "type": "number"
                                                    },
                                                    "plugId": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "myRating": {
                        "type": "number"
                    }
                }
            },
            "Insights V2": {
                "type": "object",
                "properties": {
                    "myEvs": {
                        "type": "object",
                        "properties": {
                            "totalSessions": {
                                "type": "number"
                            },
                            "totalChargingTime": {
                                "type": "number"
                            },
                            "totalCO2Saved": {
                                "type": "number"
                            },
                            "totalCost": {
                                "type": "number"
                            },
                            "totalEnergy": {
                                "type": "number"
                            },
                            "numberOfEVs": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "evId": {
                                            "type": "string"
                                        },
                                        "ev": {
                                            "$ref": "#/components/schemas/EVs"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "myChargers": {
                        "type": "object",
                        "properties": {
                            "totalSessions": {
                                "type": "number"
                            },
                            "totalChargingTime": {
                                "type": "number"
                            },
                            "totalCO2Saved": {
                                "type": "number"
                            },
                            "income": {
                                "type": "number"
                            },
                            "totalEnergy": {
                                "type": "number"
                            },
                            "numberOfChargers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "charger": {
                                            "$ref": "#/components/schemas/Charger"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "mostUsedEV": {
                        "$ref": "#/components/schemas/EVs"
                    },
                    "mostUsedCharger": {
                        "$ref": "#/components/schemas/Charger"
                    },
                    "lastUsedCharger": {
                        "$ref": "#/components/schemas/Charger"
                    },
                    "mostUsedChargerByMe": {
                        "$ref": "#/components/schemas/Charger"
                    },
                    "myRating": {
                        "type": "number"
                    }
                }
            },
            "History": {
                "type": "object",
                "properties": {
                    "charging": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string"
                                },
                                "evId": {
                                    "type": "string"
                                },
                                "startDate": {
                                    "type": "date"
                                },
                                "stopDate": {
                                    "type": "date"
                                },
                                "ev": {
                                    "type": "string"
                                },
                                "timeCharged": {
                                    "type": "number"
                                },
                                "CO2Saved": {
                                    "type": "number"
                                },
                                "totalPower": {
                                    "type": "number"
                                },
                                "estimatedPrice": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "booking": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string"
                                },
                                "chargerId": {
                                    "type": "string"
                                },
                                "chargerType": {
                                    "type": "string"
                                },
                                "startDate": {
                                    "type": "date"
                                },
                                "stopDate": {
                                    "type": "date"
                                },
                                "infrastructureName": {
                                    "type": "string"
                                },
                                "chargerName": {
                                    "type": "string"
                                },
                                "totalBooking": {
                                    "type": "number"
                                },
                                "power": {
                                    "type": "number"
                                },
                                "plugId": {
                                    "type": "string"
                                },
                                "plugConnectorType": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "History V2": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Charging session"
                }
            },
            "Schedules CEME": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "tariffType": {
                        "type": "string"
                    },
                    "cycleType": {
                        "type": "string"
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "period": {
                                    "type": "string"
                                },
                                "weekDays": {
                                    "type": "string"
                                },
                                "season": {
                                    "type": "string"
                                },
                                "tariffType": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "Tariff CEME": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "CEME": {
                        "type": "string"
                    },
                    "tariffType": {
                        "type": "string"
                    },
                    "cycleType": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "tariff": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "power": {
                                    "type": "string"
                                },
                                "uom": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "number"
                                },
                                "tariffType": {
                                    "type": "string"
                                },
                                "voltageLevel": {
                                    "type": "string",
                                    "example": "BTN/BTE/MT"
                                }
                            }
                        }
                    }
                }
            },
            "Tariff OPC": {
                "type": "object",
                "properties": {
                    "station": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "initialCost": {
                        "type": "number"
                    },
                    "costByTime": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "minTime": {
                                    "type": "number"
                                },
                                "maxTime": {
                                    "type": "number"
                                },
                                "cost": {
                                    "type": "number"
                                },
                                "uom": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "costByPower": {
                        "type": "object",
                        "properties": {
                            "cost": {
                                "type": "number"
                            },
                            "uom": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "Version Compatibility": {
                "type": "object",
                "properties": {
                    "iOSVersion": {
                        "type": "string"
                    },
                    "androidVersion": {
                        "type": "string"
                    },
                    "operationsManagementVersion": {
                        "type": "string"
                    },
                    "webClientVersion": {
                        "type": "string"
                    },
                    "backendVersion": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Notifications Settings": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "clientType": {
                        "type": "string"
                    },
                    "global": {
                        "type": "object",
                        "properties": {
                            "translationKey": {
                                "type": "string"
                            },
                            "enabled": {
                                "type": "boolean"
                            }
                        }
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "notificationType": {
                                    "type": "string"
                                },
                                "translationKey": {
                                    "type": "string"
                                },
                                "enabled": {
                                    "type": "boolean"
                                },
                                "chargers": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "imageContent": {
                                                "type": "string"
                                            },
                                            "hwId": {
                                                "type": "string"
                                            },
                                            "plugId": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "History My Chargers": {
                "type": "object",
                "properties": {
                    "charging": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string"
                                },
                                "evId": {
                                    "type": "string"
                                },
                                "userId": {
                                    "type": "string"
                                },
                                "idTag": {
                                    "type": "string"
                                },
                                "hwId": {
                                    "type": "string"
                                },
                                "plugId": {
                                    "type": "string"
                                },
                                "infrastructureName": {
                                    "type": "string"
                                },
                                "chargerName": {
                                    "type": "string"
                                },
                                "plugConnectorType": {
                                    "type": "string"
                                },
                                "ev": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                },
                                "contract": {
                                    "type": "string"
                                },
                                "timeCharged": {
                                    "type": "number"
                                },
                                "totalPower": {
                                    "type": "number"
                                },
                                "estimatedPrice": {
                                    "type": "number"
                                },
                                "CO2Saved": {
                                    "type": "number"
                                },
                                "startDate": {
                                    "type": "date"
                                },
                                "stopDate": {
                                    "type": "date"
                                }
                            }
                        }
                    },
                    "booking": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string"
                                },
                                "evId": {
                                    "type": "string"
                                },
                                "userId": {
                                    "type": "string"
                                },
                                "hwId": {
                                    "type": "string"
                                },
                                "plugId": {
                                    "type": "string"
                                },
                                "idTag": {
                                    "type": "string"
                                },
                                "infrastructureName": {
                                    "type": "string"
                                },
                                "chargerName": {
                                    "type": "string"
                                },
                                "plugConnectorType": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                },
                                "contract": {
                                    "type": "string"
                                },
                                "ev": {
                                    "type": "string"
                                },
                                "estimatedPrice": {
                                    "type": "number"
                                },
                                "totalBooking": {
                                    "type": "number"
                                },
                                "power": {
                                    "type": "number"
                                },
                                "CO2Saved": {
                                    "type": "number"
                                },
                                "startDate": {
                                    "type": "date"
                                },
                                "stopDate": {
                                    "type": "date"
                                }
                            }
                        }
                    }
                }
            },
            "Tariff TAR": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "tariffType": {
                        "type": "string"
                    },
                    "tariff": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uom": {
                                    "type": "string"
                                },
                                "tariffType": {
                                    "type": "string"
                                },
                                "voltageLevel": {
                                    "type": "string",
                                    "example": "BTN/BTE/MT"
                                },
                                "price": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                }
            },
            "Request History Logs": {
                "description": "Logs of all orders placed in the payments microservice",
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "reqID": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "clientType": {
                        "type": "string"
                    },
                    "requestType": {
                        "type": "string"
                    },
                    "queryData": {
                        "type": "object",
                        "properties": {},
                        "description": "Query parameters content when sent"
                    },
                    "paramsData": {
                        "type": "object",
                        "properties": {},
                        "description": "Parameter content when sent"
                    },
                    "bodyData": {
                        "type": "object",
                        "properties": {},
                        "description": "Body content when sent"
                    },
                    "responseStatus": {
                        "type": "string"
                    },
                    "responseBody": {
                        "type": "object",
                        "properties": {},
                        "description": "Request response body content"
                    }
                }
            },
            "Transactions": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "transactionType": {
                        "type": "string",
                        "examples": "Type credit, debit or refund"
                    },
                    "status": {
                        "type": "string"
                    },
                    "provider": {
                        "type": "string",
                        "examples": "If credit providers are MBWay, MBRef/PSNet, MBRef, PSNet or Card if debit providers are wallet or Card"
                    },
                    "amount": {
                        "type": "object",
                        "properties": {
                            "currency": {
                                "type": "string",
                                "default": "EUR"
                            },
                            "value": {
                                "type": "number"
                            }
                        }
                    },
                    "sessionId": {
                        "type": "string"
                    },
                    "paymentId": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {},
                        "description": "Object received when a request is made"
                    },
                    "dataReceived": {
                        "type": "object",
                        "properties": {},
                        "description": "Object received in notification when it approves or declines"
                    },
                    "adyenReference": {
                        "type": "string"
                    },
                    "listOfSessions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Wallet": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "object",
                        "properties": {
                            "currency": {
                                "type": "string",
                                "default": "EUR"
                            },
                            "value": {
                                "type": "number",
                                "default": 0
                            }
                        }
                    },
                    "transactionsList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "transactionId": {
                                    "type": "string"
                                },
                                "transactionType": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "Config Management POIs": {
                "type": "object",
                "properties": {
                    "daysToUpdate": {
                        "type": "number"
                    },
                    "numberOfPois": {
                        "type": "number"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "userId": {
                        "type": "string"
                    }
                }
            },
            "Messages": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "startDateStopMessage": {
                        "type": "date"
                    },
                    "endDateStopMessage": {
                        "type": "date"
                    },
                    "infoMessage": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "image": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "dateToDeactivate": {
                        "type": "date"
                    },
                    "dateToActivate": {
                        "type": "date"
                    }
                }
            },
            "Contract": {
                "type": "object",
                "properties": {
                    "cardNumber": {
                        "type": "string"
                    },
                    "cardName": {
                        "type": "string"
                    },
                    "cardPhysicalState": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "nif": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "internationalPrefix": {
                        "type": "string"
                    },
                    "cardType": {
                        "type": "string"
                    },
                    "fontCardBlack": {
                        "type": "boolean"
                    },
                    "imageCard": {
                        "type": "string"
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "street": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "zipCode": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            }
                        }
                    },
                    "status": {
                        "type": "string"
                    },
                    "imageCEME": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "paymentMethod": {
                                    "type": "string"
                                },
                                "tokens": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "idTagHexa": {
                                                "type": "string"
                                            },
                                            "idTagHexaInv": {
                                                "type": "string"
                                            },
                                            "idTagDec": {
                                                "type": "string"
                                            },
                                            "refId": {
                                                "type": "string"
                                            },
                                            "tokenType": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "string"
                                            },
                                            "wasAssociated": {
                                                "type": "boolean",
                                                "default": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "tariff": {
                        "type": "object",
                        "properties": {
                            "planId": {
                                "type": "string"
                            },
                            "power": {
                                "type": "string"
                            }
                        }
                    },
                    "tariffRomming": {
                        "type": "object",
                        "properties": {
                            "planId": {
                                "type": "string"
                            },
                            "power": {
                                "type": "string"
                            },
                            "network": {
                                "type": "string"
                            }
                        }
                    },
                    "contractType": {
                        "type": "string",
                        "example": "user/fleet"
                    },
                    "evId": {
                        "type": "string"
                    },
                    "fleetId": {
                        "type": "string"
                    }
                }
            },
            "Payment Method": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "userType": {
                        "type": "string"
                    },
                    "paymentMethod": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Packages": {
                "type": "object",
                "properties": {
                    "packageName": {
                        "type": "string",
                        "default": "FREE"
                    },
                    "packageType": {
                        "type": "string",
                        "default": "FREE"
                    },
                    "rfidCardsLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "fleetsLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "evsLimit": {
                        "type": "number",
                        "default": 5
                    },
                    "driversLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "groupOfDriversLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "driversInGroupDriversLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "chargingAreasLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "evioBoxLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "chargersLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "tariffsLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "chargersGroupsLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "userInChargerGroupsLimit": {
                        "type": "number",
                        "default": 1
                    },
                    "searchLocationsLimit": {
                        "type": "string",
                        "default": "UNLIMITED"
                    },
                    "searchChargersLimit": {
                        "type": "string",
                        "default": "UNLIMITED"
                    },
                    "comparatorLimit": {
                        "type": "string",
                        "default": "UNLIMITED"
                    },
                    "routerLimit": {
                        "type": "string",
                        "default": "UNLIMITED"
                    }
                }
            },
            "Images Dependencies": {
                "type": "object",
                "properties": {
                    "chargerId": {
                        "type": "string"
                    },
                    "hwId": {
                        "type": "string"
                    },
                    "chargerType": {
                        "type": "string"
                    },
                    "imageContent": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "default": "OPEN"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "street": {
                                "type": "string"
                            },
                            "number": {
                                "type": "string"
                            },
                            "zipCode": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            }
                        }
                    },
                    "geometry": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "default": "Point"
                            },
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                },
                                "index": "2dsphere"
                            }
                        }
                    }
                }
            },
            "CP Models": {
                "type": "object",
                "properties": {
                    "chargerModel": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean",
                        "default": "true"
                    }
                }
            },
            "Reports": {
                "type": "object",
                "properties": {
                    "totals": {
                        "type": "object",
                        "properties": {
                            "totalSessions": {
                                "type": "number"
                            },
                            "totalCO2Saved": {
                                "type": "number"
                            },
                            "totalPower": {
                                "type": "number"
                            },
                            "totalPrice": {
                                "type": "number"
                            },
                            "timeCharged": {
                                "type": "number"
                            }
                        }
                    },
                    "totalsGroupBy": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "totalSessions": {
                                    "type": "number"
                                },
                                "totalCO2Saved": {
                                    "type": "number"
                                },
                                "totalPower": {
                                    "type": "number"
                                },
                                "totalPrice": {
                                    "type": "number"
                                },
                                "timeCharged": {
                                    "type": "number"
                                },
                                "network": {
                                    "type": "string"
                                },
                                "userId": {
                                    "type": "string"
                                },
                                "evId": {
                                    "type": "string"
                                },
                                "fleet": {
                                    "type": "string"
                                },
                                "hwId": {
                                    "type": "string"
                                },
                                "infrastructure": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "listGroupBy": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "totalSessions": {
                                    "type": "number"
                                },
                                "totalCO2Saved": {
                                    "type": "number"
                                },
                                "totalPower": {
                                    "type": "number"
                                },
                                "totalPrice": {
                                    "type": "number"
                                },
                                "timeCharged": {
                                    "type": "number"
                                },
                                "network": {
                                    "type": "string"
                                },
                                "userId": {
                                    "type": "string"
                                },
                                "evId": {
                                    "type": "string"
                                },
                                "fleet": {
                                    "type": "string"
                                },
                                "hwId": {
                                    "type": "string"
                                },
                                "infrastructure": {
                                    "type": "string"
                                },
                                "list": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "totalPower": {
                                                "type": "number"
                                            },
                                            "estimatedPrice": {
                                                "type": "number"
                                            },
                                            "timeCharged": {
                                                "type": "number"
                                            },
                                            "_id": {
                                                "type": "string"
                                            },
                                            "startDate": {
                                                "type": "date"
                                            },
                                            "network": {
                                                "type": "string"
                                            },
                                            "ev": {
                                                "type": "object",
                                                "properties": {
                                                    "brand": {
                                                        "type": "string"
                                                    },
                                                    "model": {
                                                        "type": "string"
                                                    },
                                                    "version": {
                                                        "type": "string"
                                                    },
                                                    "licensePlate": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "charger": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "address": {
                                                        "type": "object",
                                                        "properties": {
                                                            "city": {
                                                                "type": "string"
                                                            },
                                                            "number": {
                                                                "type": "string"
                                                            },
                                                            "zipCode": {
                                                                "type": "string"
                                                            },
                                                            "country": {
                                                                "type": "string"
                                                            },
                                                            "street": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "infrastructure": {
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "user": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "Billing Profile": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "billingName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "nif": {
                        "type": "string"
                    },
                    "billingAddress": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "type": "string"
                            },
                            "postCode": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string"
                            },
                            "countryCode": {
                                "type": "string"
                            }
                        }
                    },
                    "viesVAT": {
                        "type": "boolean"
                    },
                    "monthlyBilling": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "Plafonds": {
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "default": true
                    },
                    "userId": {
                        "type": "string"
                    },
                    "userIdWillPay": {
                        "type": "string"
                    },
                    "evId": {
                        "type": "string"
                    },
                    "ev": {
                        "type": "object",
                        "properties": {
                            "brand": {
                                "type": "string"
                            },
                            "model": {
                                "type": "string"
                            },
                            "imageContent": {
                                "type": "string"
                            },
                            "licensePlate": {
                                "type": "string"
                            }
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "userId": {
                                    "type": "string"
                                },
                                "imageContent": {
                                    "type": "string"
                                },
                                "mobile": {
                                    "type": "string"
                                },
                                "internationalPrefix": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "groupId": {
                                    "type": "string"
                                },
                                "imageContent": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "monthlyPlafond": {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "default": 0
                            },
                            "currency": {
                                "type": "string",
                                "default": "EUR"
                            }
                        }
                    },
                    "amount": {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "default": 0
                            },
                            "currency": {
                                "type": "string",
                                "default": "EUR"
                            }
                        }
                    },
                    "spentCurrentMonth": {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "default": 0
                            },
                            "currency": {
                                "type": "string",
                                "default": "EUR"
                            }
                        }
                    },
                    "transactionsList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "sessionId": {
                                    "type": "string"
                                },
                                "chargerType": {
                                    "type": "string"
                                },
                                "source": {
                                    "type": "string"
                                },
                                "amount": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "number",
                                            "default": 0
                                        },
                                        "currency": {
                                            "type": "string",
                                            "default": "EUR"
                                        }
                                    }
                                },
                                "startDate": {
                                    "type": "date"
                                },
                                "stopDate": {
                                    "type": "date"
                                },
                                "charger": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "address": {
                                            "type": "object",
                                            "properties": {
                                                "street": {
                                                    "type": "string"
                                                },
                                                "number": {
                                                    "type": "string"
                                                },
                                                "zipCode": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string"
                                },
                                "notes": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "minimumChargingValue": {
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "number",
                                "default": 2.5
                            },
                            "currency": {
                                "type": "string",
                                "default": "EUR"
                            }
                        }
                    },
                    "monthlyBalanceAddition": {
                        "type": "boolean",
                        "default": false
                    },
                    "actionMinimumValue": {
                        "type": "string",
                        "default": "NOTCHARGING",
                        "examples": "CHARGINGNEXTPLAFOND, NOTCHARGING"
                    },
                    "pendingTransactionsList": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "sessionId": {
                                    "type": "string"
                                },
                                "chargerType": {
                                    "type": "string"
                                },
                                "source": {
                                    "type": "string"
                                },
                                "amount": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "number",
                                            "default": 0
                                        },
                                        "currency": {
                                            "type": "string",
                                            "default": "EUR"
                                        }
                                    }
                                },
                                "startDate": {
                                    "type": "date"
                                },
                                "stopDate": {
                                    "type": "date"
                                },
                                "charger": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "hwId": {
                                            "type": "string"
                                        },
                                        "address": {
                                            "type": "object",
                                            "properties": {
                                                "street": {
                                                    "type": "string"
                                                },
                                                "number": {
                                                    "type": "string"
                                                },
                                                "zipCode": {
                                                    "type": "string"
                                                },
                                                "city": {
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "type": "string"
                                                },
                                                "country": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string"
                                },
                                "notes": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "Guest Users": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "accessPlatform": {
                        "type": "object",
                        "properties": {
                            "api": {
                                "type": "boolean",
                                "default": true
                            },
                            "webclient": {
                                "type": "boolean",
                                "default": true
                            },
                            "mobile": {
                                "type": "boolean",
                                "default": true
                            }
                        }
                    },
                    "active": {
                        "type": "boolean",
                        "default": true
                    },
                    "accessPermissions": {
                        "type": "object",
                        "properties": {}
                    }
                }
            },
            "Payment Periods": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string"
                    },
                    "userType": {
                        "type": "string"
                    },
                    "paymentPeriod": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Customization": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "brandName": {
                        "type": "string"
                    },
                    "tokenMapBox": {
                        "type": "string"
                    },
                    "endpointToSupport": {
                        "type": "string"
                    },
                    "endpointToPrivacy": {
                        "type": "string"
                    },
                    "endpointToTermsAndConditions": {
                        "type": "string"
                    },
                    "icons": {
                        "type": "object",
                        "properties": {
                            "principalIcon": {
                                "type": "string",
                                "description": "SVG"
                            },
                            "qrcodeIcon": {
                                "type": "string",
                                "description": "SVG"
                            },
                            "favicon": {
                                "type": "string",
                                "description": "PNG or ICO"
                            },
                            "walletIcon": {
                                "type": "string",
                                "description": "SVG"
                            },
                            "logo": {
                                "type": "string",
                                "description": "PNG"
                            },
                            "mapIcon": {
                                "type": "object",
                                "description": "Key(Name of the icon) - Value(Link to Icon), SVG"
                            },
                            "cards": {
                                "type": "object",
                                "description": "Key(Name of the icon) - Value(Link to Icon), SVG"
                            }
                        }
                    },
                    "colors": {
                        "type": "object",
                        "properties": {
                            "primaryColor": {
                                "type": "string",
                                "description": "HexaDecimal"
                            },
                            "secondaryColor": {
                                "type": "string",
                                "description": "HexaDecimal"
                            }
                        }
                    }
                }
            }
        }
    }
}